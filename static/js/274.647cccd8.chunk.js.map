{"version":3,"file":"static/js/274.647cccd8.chunk.js","mappings":"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","sources":["Services/API.js","components/Buttons/Button.jsx","components/Logo/Logo-styled.jsx","components/Logo/Logo.jsx","components/ModalBoard/ModalBoard.styled.jsx","components/ModalBoard/data.jsx","components/ModalLayout/ModalLayout.jsx","components/Sidebar/SidebarCONSTANTS.js","components/Sidebar/SidebarContent-styled.jsx","webpack://react-homework-template/./src/components/Sidebar/SidebarCustomScroll.module.css?4eb1","components/logoutBtn/logoutBtn.styled.jsx","components/logoutBtn/logoutBtn.jsx","components/ModalBoard/ModalBoard.jsx","components/Sidebar/SidebarBoardItem-styled.jsx","components/Sidebar/MeasureTitleWidth.jsx","components/Sidebar/SidebarBoardItem.jsx","components/Sidebar/SidebarBoardList.jsx","components/ModalHelp/ModalHelp.styled.js","components/ModalHelp/ModalHelp.js","components/Sidebar/SidebarContent.jsx","components/Sidebar/Sidebar.jsx","components/Header/Header.styled.js","components/Header/NavBtn/NavBtn.jsx","components/Header/UserInfo/UserInfo.styled.js","components/Header/UserInfo/UserInfo.jsx","components/Header/Header.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["import {\n  useRegisterMutation,\n  useLogInMutation,\n  useLogOutMutation,\n  useGetCurrentUserQuery,\n  useUpdateUserMutation,\n  useThemeUserMutation,\n  useAvatarUserMutation,\n  useHelpUserMutation,\n  useGetBoardsQuery,\n  useGetBoardByIdQuery,\n  useAddBoardsMutation,\n  useDeleteBoardByIdMutation,\n  useUpdateBoardByIdMutation,\n  useAddColumnMutation,\n  useUpdateColumnByIdMutation,\n  useDeleteColumnByIdMutation,\n  useAddCardMutation,\n  useUpdateCardByIdMutation,\n  useDeleteCardByIdMutation,\n  useUpdateCardColumnByIdMutation,\n} from './API_Component';\n\nexport const API = {\n  useRegisterMutation,\n  useLogInMutation,\n  useLogOutMutation,\n  useAvatarUserMutation,\n  useGetCurrentUserQuery,\n  useHelpUserMutation,\n  useThemeUserMutation,\n  useUpdateUserMutation,\n  useGetBoardsQuery,\n  useGetBoardByIdQuery,\n  useAddBoardsMutation,\n  useDeleteBoardByIdMutation,\n  useUpdateBoardByIdMutation,\n  useAddColumnMutation,\n  useUpdateColumnByIdMutation,\n  useDeleteColumnByIdMutation,\n  useAddCardMutation,\n  useUpdateCardByIdMutation,\n  useDeleteCardByIdMutation,\n  useUpdateCardColumnByIdMutation,\n};\n","import * as React from 'react';\nimport Button from '@mui/material/Button';\n\nimport { Box, IconButton } from '@mui/material';\n\nimport sprite from '../../assets/images/sprite.svg';\n\n// Кнопка для модалок с иконкой\nexport const ButtonWithIcon = ({ title, onClick, type }) => {\n  return (\n    <Button\n      onClick={onClick}\n      type={type}\n      variant=\"contained\"\n      disableElevation\n      sx={{\n        display: 'flex',\n        gap: '8px',\n        color: '#161616',\n        fontFamily: 'Poppins, sans-serif',\n        alignItems: 'center',\n        textTransform: 'none',\n        borderRadius: '8px',\n        letterSpacing: '-0.02em',\n        fontSize: '14px',\n        background: '#BEDBB0',\n        lineHeight: '21px',\n        fontWeight: '500',\n        fontStyle: 'normal',\n        width: '100%',\n        height: '56px',\n        '&:hover': {\n          background: '#9DC888',\n        },\n      }}\n    >\n      <Box\n        sx={{\n          width: '28px',\n          height: '28px',\n          background: '#161616',\n          borderRadius: '6px',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <svg width=\"14\" height=\"14\" stroke=\"#ffffff\">\n          <use href={sprite + '#icon-add'}></use>\n        </svg>\n      </Box>\n      {title}\n    </Button>\n  );\n};\n\n// Кнопка для модалок без иконки\nexport const ButtonWithoutIcon = ({ title, onClick, type }) => {\n  return (\n    <Button\n      type={type}\n      onClick={onClick}\n      disableElevation\n      sx={{\n        display: 'flex',\n        color: '#161616',\n        fontFamily: 'Poppins, sans-serif',\n        alignItems: 'center',\n        textTransform: 'none',\n        borderRadius: '8px',\n        marginTop: '40px',\n        letterSpacing: '-0.02em',\n        fontSize: '14px',\n        background: '#BEDBB0',\n        lineHeight: '21px',\n        fontWeight: '500',\n        fontStyle: 'normal',\n        width: '100%',\n        height: '56px',\n        '&:hover': {\n          background: '#BEDBB0',\n        },\n      }}\n    >\n      {title}\n    </Button>\n  );\n};\n\n// Кнопка для добавления колонки\nexport const ButtonAdd = ({ onClick }) => {\n  return (\n    <Button\n      onClick={onClick}\n      variant=\"contained\"\n      disableElevation\n      sx={{\n        display: 'flex',\n        gap: '8px',\n        color: '#FFFFFF',\n        fontFamily: 'Poppins, sans-serif',\n        alignItems: 'center',\n        textTransform: 'none',\n        borderRadius: '8px',\n        letterSpacing: '-0.02em',\n        fontSize: '14px',\n        background: '#121212',\n        lineHeight: '21px',\n        fontWeight: '500',\n        fontStyle: 'normal',\n        width: '334px',\n        height: '56px',\n        '&:hover': {\n          background: '#121212',\n        },\n      }}\n    >\n      <Box\n        sx={{\n          width: '28px',\n          height: '28px',\n          background: 'white',\n          borderRadius: '6px',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <svg width=\"14\" height=\"14\" stroke=\"#121212\">\n          <use href={sprite + '#icon-add'}></use>\n        </svg>\n      </Box>\n      Add another column\n    </Button>\n  );\n};\n\n//Кнопка для Sidebar\nexport const ButtonSidebar = ({ onClick }) => {\n  return (\n    <IconButton\n      type=\"button\"\n      onClick={onClick}\n      sx={{\n        width: '40px',\n        height: '36px',\n        borderRadius: '6px',\n        background: 'var(--sidebar-icon-plus-bg-color)',\n\n        '&:hover, &:focus': {\n          background: 'var(--sidebar-icon-plus-bg-color-HOVER-FOCUS)',\n        },\n      }}\n    >\n      <svg width=\"20\" height=\"20\" stroke=\"var(--sidebar-icon-plus-color)\">\n        <use href={sprite + '#icon-add'}></use>\n      </svg>\n    </IconButton>\n  );\n};\n\n","import { styled } from '@mui/material/styles';\nimport { keyframes } from '@mui/system';\n\nconst slideLigtning = keyframes`\n  0% {transform: translateY(-25px)}\n\n  20% {transform: translateY(0px)}\n  80% {transform: translateY(0px)}\n\n  100% {transform: translateY(25px)}\n`;\n\nconst slideToRight = keyframes`\n  0% {transform: translateX(-200px)}\n  100% {transform: translateY(0px)}\n`;\n\nexport const SidebarLogoIcon = styled('svg')({\n  fill: 'var(--sidebar-icon-logo-color)',\n  width: '12px',\n  height: '16px',\n\n  animation: `${slideLigtning} 6s infinite`,\n  animationTimingFunction: 'ease',\n});\n\nexport const SidebarLogoWrap = styled('div')(({ isSidebarShown }) => ({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  gap: '8px',\n  width: '110px',\n\n  transform: 'translateX(-135px)',\n  animation: isSidebarShown ? `${slideToRight} 300ms` : 'none',\n  animationTimingFunction: 'ease',\n\n  animationFillMode: 'forwards',\n}));\n\nexport const SidebarLogoIconWrap = styled('div')({\n  width: '32px',\n  height: '32px',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  backgroundColor: 'var(--sidebar-icon-logo-bg-color)',\n  borderRadius: '8px',\n  overflow: 'hidden',\n});\n\nexport const SidebarLogoText = styled('p')({\n  margin: '0px',\n  color: 'var(--sidebar-primary-text-color)',\n  fontFamily: 'Poppins',\n  fontSize: '16px',\n  fontWeight: 600,\n  letterSpacing: '-0.64px',\n});\n\nexport const StartPageLogoWrap = styled('div')({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  gap: '14px',\n});\n\nexport const StartPageLogoIconWrap = styled('div')({\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  backgroundColor: '#161616',\n  borderRadius: '8px',\n});\n\nexport const StartPageLogoIcon = styled('svg')({\n  fill: '#ffffff',\n});\n\nexport const StartPageLogoText = styled('p')({\n  margin: '0px',\n  color: '#161616',\n  fontFamily: 'Poppins',\n  fontWeight: 600,\n  letterSpacing: '-0.64px',\n});\n","import {\n  SidebarLogoIconWrap,\n  SidebarLogoIcon,\n  SidebarLogoText,\n  StartPageLogoWrap,\n  StartPageLogoIconWrap,\n  StartPageLogoIcon,\n  StartPageLogoText,\n  SidebarLogoWrap,\n} from './Logo-styled';\nimport sprite from '../../assets/images/sprite.svg';\n\nexport const SidebarLogo = ({ sx, isSidebarShown }) => {\n  return (\n    <>\n      <SidebarLogoWrap sx={sx} isSidebarShown={isSidebarShown}>\n        <SidebarLogoIconWrap>\n          <SidebarLogoIcon>\n            <use href={sprite + '#icon-logo-lightning'}></use>\n          </SidebarLogoIcon>\n        </SidebarLogoIconWrap>\n\n        <SidebarLogoText>Task Pro</SidebarLogoText>\n      </SidebarLogoWrap>\n    </>\n  );\n};\n\nexport const StartPageLogo = ({ style }) => {\n  return (\n    <>\n      <StartPageLogoWrap style={style} sx={{ width: { 0: 166, 768: 222 } }}>\n        <StartPageLogoIconWrap\n          sx={{ width: { 0: 40, 768: 48 }, height: { 0: 40, 768: 48 } }}\n        >\n          <StartPageLogoIcon\n            sx={{ width: { 0: 15, 768: 18 }, height: { 0: 20, 768: 24 } }}\n          >\n            <use href={sprite + '#icon-logo-lightning'}></use>\n          </StartPageLogoIcon>\n        </StartPageLogoIconWrap>\n\n        <StartPageLogoText\n          sx={{\n            fontSize: { 0: 28, 768: 40 },\n            letterSpacing: { 0: -1.12, 768: -1.6 },\n          }}\n        >\n          Task Pro\n        </StartPageLogoText>\n      </StartPageLogoWrap>\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const ButtonClose = styled.button`\n  margin: 0;\n  padding: 0;\n  position: absolute;\n  right: 10px;\n  top: 10px;\n  width: 24px;\n  height: 24px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: rgba(255, 255, 255, 0.5);\n\n  background-color: transparent;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    border: 1px solid #ffffff;\n    color: rgba(255, 255, 255, 1);\n  }\n`;\n\nexport const FormStyled = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n  margin-bottom: 24px;\n`;\n\nexport const InputStyled = styled.input`\n  resize: none;\n  color: #ffffff;\n  padding: 14px 14px;\n  background-color: transparent;\n  border: 1px solid rgba(190, 219, 176, 0.4);\n  border-radius: 8px;\n  margin-bottom: 10px;\n  :focus {\n    border: 1px solid #bedbb0;\n    outline: none;\n  }\n  ::placeholder {\n    color: #ffffff;\n    opacity: 30%;\n  }\n`;\n\nexport const TransparentSVG = styled.svg`\n  width: 18px;\n  height: 18px;\n  stroke: rgba(255, 255, 255, 0.5);\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    // width: 24px;\n    // height: 24px;\n    stroke: #bedbb0;\n  }\n`;\n\nexport const UlStyled = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 8px;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  margin-bottom: 14px;\n`;\n\nexport const UlBgStyled = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 4px;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  margin-bottom: 14px;\n  width: 270px;\n`;\n\nexport const LiStyled = styled.li`\n  display: flex;\n  width: 28px;\n  height: 28px;\n  border-radius: 14px;\n`;\n\nexport const ImgStyled = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  object-position: center;\n  border-radius: 5px;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    border: 1px solid #bedbb0;\n  }\n`;\n\nexport const LiIconsStyled = styled.li`\n  display: flex;\n  width: 18px;\n  height: 18px;\n`;\n","export const arrIcons = [\n  '#icon-Project',\n  '#icon-star',\n  '#icon-loading',\n  '#icon-puzzle',\n  '#icon-container',\n  '#icon-lightning',\n  '#icon-colors',\n  '#icon-hexagon',\n];\n\nexport const arrBG = [\n  'https://res.cloudinary.com/dpurp913m/image/upload/v1693060747/teamProject/bcg-laptop-22_w6d1ix.jpg',\n  'https://res.cloudinary.com/dpurp913m/image/upload/v1693060747/teamProject/bcg-laptop-21_lhyxtz.jpg',\n  'https://res.cloudinary.com/dpurp913m/image/upload/v1693060747/teamProject/bcg-laptop-23_nvf3nr.jpg',\n  'https://res.cloudinary.com/dpurp913m/image/upload/v1693060747/teamProject/bcg-laptop-19_jgsoar.jpg',\n  'https://res.cloudinary.com/dpurp913m/image/upload/v1693060746/teamProject/bcg-laptop-18_lz8hnp.jpg',\n  'https://res.cloudinary.com/dpurp913m/image/upload/v1693060746/teamProject/bcg-laptop-16_hbougf.jpg',\n  'https://res.cloudinary.com/dpurp913m/image/upload/v1693060746/teamProject/bcg-laptop-15_p5qieq.jpg',\n  'https://res.cloudinary.com/dpurp913m/image/upload/v1693060746/teamProject/bcg-laptop-13_kzosan.jpg',\n  'https://res.cloudinary.com/dpurp913m/image/upload/v1693060746/teamProject/bcg-laptop-12_nehdkx.jpg',\n  'https://res.cloudinary.com/dpurp913m/image/upload/v1693060747/teamProject/bcg-laptop-24_ob1z2m.jpg',\n  'https://res.cloudinary.com/dpurp913m/image/upload/v1693060747/teamProject/bcg-laptop-25_cdzpq5.jpg',\n  'https://res.cloudinary.com/dpurp913m/image/upload/v1693060747/teamProject/bcg-laptop-20_je1cm3.jpg',\n  'https://res.cloudinary.com/dpurp913m/image/upload/v1693060746/teamProject/bcg-laptop-17_ypzhw7.jpg',\n  'https://res.cloudinary.com/dpurp913m/image/upload/v1693060746/teamProject/bcg-laptop-14_gvggrl.jpg',\n  'https://res.cloudinary.com/dpurp913m/image/upload/v1693060746/teamProject/bcg-laptop-11_rfi4bm.jpg',\n];\n","import { Modal, Box, Typography } from '@mui/material';\nimport sprite from '../../assets/images/sprite.svg';\nimport { ButtonClose } from 'components/ModalBoard/ModalBoard.styled';\n\n// import { useState } from 'react';\n\nconst ModalStyles = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 350,\n  borderRadius: 8 / 4,\n  border: '1px solid rgba(190, 219, 176, 0.50)',\n  background: '#151515',\n  padding: 24/8,\n};\n\nconst titleStyles = {\n  color: '#FFF',\n  fontSize: 18,\n  fontStyle: 'normal',\n  fontWeight: 500,\n  lineHeight: 'normal',\n  letterSpacing: -0.36,\n  marginBottom: 24 / 8,\n};\n\nconst ModalLayout = ({ title, open, handleClose, children }) => {\n  //   const [open, setOpen] = useState(false);\n  //   const handleOpen = () => setOpen(true);\n  //   const handleClose = () => setOpen(false);\n\n  return (\n    <>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box sx={ModalStyles}>\n          <Typography variant=\"h2\" sx={titleStyles}>\n            {title}\n          </Typography>\n          <ButtonClose type=\"button\" onClick={handleClose}>\n            <svg style={{ stroke: 'currentcolor' }} width=\"18\" height=\"18\">\n              <use href={sprite + '#icon-x-close'} />\n            </svg>\n          </ButtonClose>\n          {children}\n        </Box>\n      </Modal>\n    </>\n  );\n};\n\nexport default ModalLayout;\n","export const SIDEBARWIDTH = 260;\nexport const SIDEBARMOBILEWIDTH = 225;\n  \n\n\n\n","import { styled } from '@mui/material/styles';\nimport { keyframes } from '@mui/system';\n\nconst slideToRight = keyframes`\n  0% {transform: translateX(-250px)}\n  100% {transform: translateX(0px)}\n`;\n\nconst slideToLeft = keyframes`\n  0% {transform: translateX(250px)}\n  100% {transform: translateX(0px)}\n`;\n\nconst slideToDown = keyframes`\n  0% {transform: translateY(-250px)}\n  100% {transform: translateY(0px)}\n`;\n\nconst shakeAnimation = keyframes`\n  0%, 100% {\n    transform: translateX(0);\n  }\n  10%, 30%, 50%, 70%, 90% {\n    transform: translateX(-2px);\n   \n  }\n  20%, 40%, 60%, 80% {\n    transform: translateX(2px);\n  \n  }\n\n`;\n\nexport const Subtitle = styled('p')(({ isSidebarShown }) => ({\n  margin: '0px',\n  color: 'var(--sidebar-secondary-text-color)',\n  fontFamily: 'Poppins',\n  fontSize: '12px',\n  fontWeight: 400,\n  letterSpacing: '-0.24px',\n\n  transform: 'translateX(250px)',\n  animation: isSidebarShown ? `${slideToLeft} 400ms` : 'none',\n  animationTimingFunction: 'ease',\n\n  animationFillMode: 'forwards',\n}));\n\nexport const CreateBoardWrap = styled('div')({\n  paddingBottom: '14px',\n  paddingTop: '14px',\n  borderTop: '1px solid var(--sidebar-border-color)',\n  borderBottom: '1px solid var(--sidebar-border-color)',\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  gap: '8px',\n});\n\nexport const TitleCreate = styled('p')(({ isSidebarShown }) => ({\n  margin: '0px',\n  color: 'var(--sidebar-primary-text-color)',\n  fontFamily: 'Poppins',\n  fontSize: '14px',\n  fontWeight: 500,\n  letterSpacing: '-0.28px',\n\n  transform: 'translateX(-250px)',\n  animation: isSidebarShown ? `${slideToRight} 400ms` : 'none',\n  animationTimingFunction: 'ease',\n\n  animationFillMode: 'forwards',\n}));\n\nexport const HelpBox = styled('div')({\n  borderRadius: '8px',\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'left',\n  backgroundColor: 'var(--sidebar-secondary-bg-color)',\n  overflow: 'hidden',\n});\n\nexport const Image = styled('img')(({ isSidebarShown }) => ({\n  width: '54px',\n  height: '78px',\n  marginBottom: '14px',\n\n  transform: 'translateY(250px)',\n  animation: isSidebarShown ? `${slideToDown} 400ms` : 'none',\n  animationTimingFunction: 'ease',\n\n  animationFillMode: 'forwards',\n}));\n\nexport const HelpText = styled('p')(({ isSidebarShown }) => ({\n  margin: '0px',\n  color: 'var(--sidebar-primary-text-color)',\n  fontFamily: 'Poppins',\n  fontWeight: 400,\n  letterSpacing: -0.15,\n  '& span': {\n    color: 'var(--button-bg-color)',\n  },\n\n  transform: 'translateX(-250px)',\n  animation: isSidebarShown ? `${slideToRight} 400ms` : 'none',\n  animationTimingFunction: 'ease',\n\n  animationFillMode: 'forwards',\n}));\n\nexport const HelpButton = styled('button')(({ isSidebarShown }) => ({\n  padding: 0,\n  width: '94px',\n  height: '20px',\n  display: 'flex',\n  gap: '8px',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  color: 'var(--sidebar-primary-text-color)',\n  backgroundColor: 'transparent',\n  fontFamily: 'Poppins',\n  fontSize: '12px',\n  fontWeight: 500,\n  lineHeight: 1.5,\n  letterSpacing: '-0.24px',\n  border: 'none',\n  cursor: 'pointer',\n  '&:hover, &:focus': {\n    textDecoration: 'underline',\n    outline: 'none',\n  },\n\n  transform: 'translateX(250px)',\n  animation: isSidebarShown ? `${slideToLeft} 400ms` : 'none',\n  animationTimingFunction: 'ease',\n  animationFillMode: 'forwards',\n}));\n\nexport const HelpIcon = styled('svg')(({ startAnimation }) => ({\n  stroke: 'var(--sidebar-primary-text-color)',\n  width: '20px',\n  height: '20px',\n\n  animation: startAnimation ? `${shakeAnimation} 1s  ease-out` : 'none',\n\n  '&:hover, &:focus': {\n    textDecoration: 'underline',\n    outline: 'none',\n  },\n}));\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"SidebarCustomScroll_container__EnYRA\"};","import styled from '@emotion/styled';\n\nexport const LogOutBtnStyled = styled.button`\n  display: flex;\n  gap: 14px;\n  padding: 0px;\n  justify-content: center;\n  align-items: center;\n  height: 32px;\n  width: 105px;\n  border: none;\n  background-color: transparent;\n  cursor: pointer;\n\n  color: var(--sidebar-icon-logout-color);\n  &:hover,\n  &:focus {\n    color: var(--sidebar-icon-logout-color-HOVER-FOCUS);\n  }\n`;\n\nexport const SpanStyled = styled.span`\n  font-size: 14px;\n  font-weight: 500;\n  color: var(--sidebar-primary-text-color);\n  font-family: 'Poppins';\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\nexport const Icon = styled.svg`\n  width: 32px;\n  height: 32px;\n  fill: none;\n  stroke: currentColor;\n`;\n","import { useDispatch } from 'react-redux';\nimport sprite from '../../assets/images/sprite.svg';\nimport { Icon, LogOutBtnStyled, SpanStyled } from './logoutBtn.styled';\nimport { useLogOutMutation } from 'Services/API_Component/authAPI';\nimport { logout, setError, setIsLoggedIn } from 'redux/auth/authAPISlice';\n\nconst LogoutBtn = () => {\n  const dispatch = useDispatch();\n  const [logOut] = useLogOutMutation();\n\n  const handleLogOut = async () => {\n    try {\n      await logOut().unwrap();\n      dispatch(logout());\n      dispatch(setIsLoggedIn(false));\n    } catch (error) {\n      dispatch(setError(error));\n    }\n  };\n\n  return (\n    <>\n      {/* <LogOutBtnStyled onClick={() => dispatch(logOut())}> */}\n      <LogOutBtnStyled onClick={handleLogOut}>\n        <Icon width=\"32px\" height=\"32px\">\n          <use href={`${sprite}#icon-logout`} />\n        </Icon>\n        <SpanStyled>Log out</SpanStyled>\n      </LogOutBtnStyled>\n    </>\n  );\n};\n\nexport default LogoutBtn;\n","import { useFormik } from 'formik';\nimport { Typography } from '@mui/material';\nimport {\n  FormStyled,\n  InputStyled,\n  TransparentSVG,\n  UlStyled,\n  LiStyled,\n  UlBgStyled,\n  ImgStyled,\n  LiIconsStyled,\n} from './ModalBoard.styled';\n\nimport sprite from \"../../assets/images/sprite.svg\";\nimport * as Yup from \"yup\";\nimport { ButtonWithIcon } from \"components/Buttons/Button\";\nimport ModalLayout from \"components/ModalLayout/ModalLayout\";\nimport { useState } from \"react\";\nimport { arrIcons } from \"./data\";\nimport { arrBG } from './data';\nimport { useDispatch } from \"react-redux\";\n// import { selectIsLoggedIn } from 'redux/auth/authSelectors';\nimport { API } from 'Services/API';\nimport {setBoardResponse} from \"redux/boards/boardsAPISlice\"\n\n\n\nconst titleStyle = {\n  color: '#FFF',\n  fontSize: 14,\n  fontStyle: 'normal',\n  fontWeight: 500,\n  lineHeight: 'normal',\n  letterSpacing: -0.36,\n};\n\nconst ModalBoard = ({ open, handleClose }) => {\n  // const [titleInputText, setTitleInputText] = useState('');\n const dispatch = useDispatch()\n  const [iconId, setIconId] = useState(arrIcons[0]);\n  const [iconIndex, setIconIndex] = useState(0);\n\n  const [backgroundURL, setBackgroundURL] = useState(arrBG[0]);\n  const [backgroundIndex, setBackgroundIndex] = useState(0);\n\n  const [addBoards] = API.useAddBoardsMutation();\n\n  const handleSubmit = async title => {\n    try {\n       const response = await addBoards({\n          title: title,\n          icon: iconIndex,\n          iconId,\n          background: backgroundIndex,\n          backgroundURL,\n      });\n      console.log(response); \n      dispatch(setBoardResponse(response))\n    } catch (error) {\n      console.log(error);\n    }\n    formik.handleReset();\n  };\n\n  const validationSchema = Yup.object({\n    title: Yup.string()\n      .min(2, 'Must be more then 2 symbols')\n      .required('Title is required')\n      .matches(\n        /^(\\w*)$/,\n        'Title may contain only letters, apostrophe, dash and spaces.'\n      ),\n    description: Yup.string(),\n  });\n\n  const formik = useFormik({\n    initialValues: { title: '' },\n    onSubmit: ({ title }) => handleSubmit(title),\n    validationSchema,\n  });\n\n  return (\n    <>\n      <ModalLayout title={'New board'} open={open} handleClose={handleClose}>\n        <FormStyled onSubmit={formik.handleSubmit}>\n          <InputStyled\n            id=\"title\"\n            name=\"title\"\n            placeholder=\"Title\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.title}\n          />\n          <Typography variant=\"h2\" sx={titleStyle}>\n            Icons\n          </Typography>\n          <UlStyled>\n            {arrIcons.map((icon, index) => {\n              return (\n                <LiIconsStyled\n                  key={icon}\n                  onClick={() => {\n                    setIconId(icon);\n                    setIconIndex(index);\n                  }}\n                >\n                  <TransparentSVG>\n                    <use href={sprite + icon} />\n                  </TransparentSVG>\n                </LiIconsStyled>\n              );\n            })}\n          </UlStyled>\n\n          <Typography variant=\"h2\" sx={titleStyle}>\n            Background\n          </Typography>\n          <UlBgStyled>\n            <LiStyled></LiStyled>\n            {arrBG.map((bg, index) => {\n              return (\n                <LiStyled\n                  key={bg}\n                  onClick={() => {\n                    setBackgroundURL(bg);\n                    setBackgroundIndex(index);\n                  }}\n                >\n                  <ImgStyled src={bg} alt=\"background picture\" />\n                </LiStyled>\n              );\n            })}\n          </UlBgStyled>\n\n          <ButtonWithIcon\n            title={'Create'}\n            type={'submit'}\n            // onClick={handleClose}\n          />\n        </FormStyled>\n      </ModalLayout>\n    </>\n  );\n};\n\nexport default ModalBoard;\n","import { styled } from '@mui/material/styles';\nimport { keyframes } from '@mui/system';\n\nconst slideAround = keyframes`\n  0% {transform: rotate(0deg)}\n  100% {transform: rotate(360deg)}\n`;\n\nexport const BoardItemWrap = styled('div')({\n  paddingTop: '20px',\n  paddingBottom: '20px',\n\n  width: '100%',\n  display: 'flex',\n  flexDirection: 'row',\n  gap: '8px',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n\n  overflow: 'hidden',\n});\n\nexport const BoardItemIcon = styled('svg')(({startAnimation})=> ({\n  width: '18px',\n  height: '18px',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  stroke: '#ffffff',\n\n  animation: startAnimation ? `${slideAround} 1s  ease-out` : 'none',\n}));\n\nexport const BoardItemCurrentIcon = styled('svg')({\n  width: '16px',\n  height: '16px',\n\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n\n  stroke: '#ffffff',\n});\n\nexport const BoardItemTitleWrap = styled('div')({\n  overflow: 'hidden',\n  whiteSpace: 'nowrap',\n});\n\nexport const BoardItemTitle = styled('p')(\n  ({ titleWidth, titleWrapWidth, current }) => {\n    const slideText = keyframes`\n    0% { transform: translateX(0px); }\n    100% { transform: translateX(${titleWrapWidth - titleWidth}px); }\n  `;\n\n    return {\n      margin: '0px',\n      color: '#ffffff',\n      fontFamily: 'Poppins',\n      fontSize: '14px',\n      fontStyle: 'normal',\n      fontWeight: '500',\n      letterSpacing: '-0.28px',\n\n      animationName: titleWidth >= titleWrapWidth && current ? slideText : 'none',\n      animationDuration: `${titleWidth * 30}ms`,\n      animationTimingFunction: 'linear',\n      animationIterationCount: 'infinite',\n      animationDirection: 'alternate',\n    };\n  }\n);\n","import React, { useRef, useEffect } from 'react';\n\nconst MeasureTitleWidth = ({ title, setTitleWidth }) => {\n  const measureRef = useRef(null);\n\n  useEffect(() => {\n    const observer = new ResizeObserver(entries => {\n      for (const entry of entries) {\n        if (entry.target === measureRef.current) {\n          setTitleWidth(entry.contentRect.width);\n        }\n      }\n    });\n\n    const currentRef = measureRef.current;\n\n    if (currentRef) {\n      observer.observe(currentRef);\n    }\n\n    return () => {\n      if (currentRef) {\n        observer.unobserve(currentRef);\n      }\n    };\n  }, [setTitleWidth]);\n\n  return (\n    <span\n      ref={measureRef}\n      style={{\n        position: 'absolute',\n        top: '-9999px',\n        left: '-9999px',\n        visibility: 'hidden',\n        whiteSpace: 'nowrap',\n      }}\n    >\n      {title}\n    </span>\n  );\n};\n\nexport default MeasureTitleWidth;\n","import {\n  BoardItemCurrentIcon,\n  BoardItemIcon,\n  BoardItemTitle,\n  BoardItemTitleWrap,\n  BoardItemWrap,\n} from './SidebarBoardItem-styled';\n\nimport sprite from '../../assets/images/sprite.svg';\nimport MeasureTitleWidth from './MeasureTitleWidth';\n\nimport { debounce } from 'lodash';\nimport { Box, List, ListItem, ListItemButton } from '@mui/material';\nimport { useEffect, useState } from 'react';\nimport { API } from 'Services/API';\n\nexport const SidebarBoardItem = ({ title, icon, id, current }) => {\n  const [isHovered, setIsHovered] = useState(false);\n  const [titleWidth, setTitleWidth] = useState(0);\n  const [titleWrapWidth, setTitleWrapWidth] = useState(130);\n  const [screenWidth, setScreenWidth] = useState(window.innerWidth);\n  const [startAnimation, setStartAnimation] = useState(true);\n\n  const [deleteBoard] = API.useDeleteBoardByIdMutation();\n\n  const handleResize = debounce(() => {\n    setScreenWidth(window.innerWidth);\n  }, 200);\n\n  useEffect(() => {\n    const randomNumber = Math.floor(Math.random() * (15000 - 7000 + 1)) + 7000;\n    const interval = setInterval(() => {\n      setStartAnimation(true);\n      setTimeout(() => {\n        setStartAnimation(false);\n      }, 1000);\n    }, randomNumber);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  useEffect(() => {\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [handleResize]);\n\n  useEffect(() => {\n    if (screenWidth <= 320) {\n      setTitleWrapWidth(85);\n    } else if (screenWidth <= 768) {\n      setTitleWrapWidth(120);\n    } else setTitleWrapWidth(130);\n  }, [screenWidth, title]);\n\n  const handleEditClick = event => {\n    event.stopPropagation();\n  };\n\n  const handleDeleteClick = event => {\n    event.stopPropagation();\n    deleteBoard(id);\n  };\n\n  return (\n    <>\n      <MeasureTitleWidth title={title} setTitleWidth={setTitleWidth} />\n\n      <BoardItemWrap\n        onMouseEnter={() => setIsHovered(true)}\n        onMouseLeave={() => setIsHovered(false)}\n        sx={{\n          pl: { 0: 1.75, 768: 3 },\n          pr: { 0: 1.75, 768: 3 },\n          backgroundColor: current ? 'rgba(31, 31, 31, 0.4)' : 'transparent',\n        }}\n      >\n        <Box\n          sx={{\n            display: 'flex',\n            flexDirection: 'row',\n            gap: { 0: 0.5, 768: 1 },\n            alignItems: 'center',\n          }}\n        >\n          <BoardItemIcon startAnimation={startAnimation} sx={{ opacity: current ? 1 : 0.5 }}>\n            <use href={sprite + icon}></use>\n          </BoardItemIcon>\n\n          <BoardItemTitleWrap\n            sx={{\n              width: current\n                ? { 0: 85, 320: 'calc(60vw - 105px)', 375: 120, 768: 130 }\n                : { 0: 135, 320: 'calc(60vw - 55px)', 375: 170, 768: 180 },\n            }}\n          >\n            <BoardItemTitle\n              sx={{ opacity: current ? 1 : 0.5 }}\n              titleWidth={titleWidth}\n              titleWrapWidth={titleWrapWidth}\n              current={current}\n            >\n              {title}\n            </BoardItemTitle>\n          </BoardItemTitleWrap>\n        </Box>\n\n        {isHovered && (\n          <Box\n            sx={{\n              position: 'absolute',\n              right: 0,\n              width: '4px',\n              height: '100%',\n              backgroundColor: '#BEDBB0',\n              opacity: 0.4,\n              borderRadius: '4px 0px 0px 4px',\n            }}\n          />\n        )}\n\n        {current && (\n          <Box\n            sx={{\n              position: 'absolute',\n              right: 0,\n              width: '4px',\n              height: '100%',\n              backgroundColor: '#BEDBB0',\n              borderRadius: '4px 0px 0px 4px',\n            }}\n          />\n        )}\n\n        {current && (\n          <List\n            disablePadding\n            sx={{\n              display: 'flex',\n              flexDirection: 'row',\n              gap: 1,\n              alignItems: 'center',\n              justifyContent: 'center',\n            }}\n          >\n            <ListItem disablePadding>\n              <ListItemButton\n                sx={{\n                  p: 0,\n                  m: 0,\n                  pointerEvents: 'auto',\n                  opacity: 0.5,\n                  '&:hover, &:focus': {\n                    opacity: 1,\n                  },\n                }}\n                onClick={handleEditClick}\n              >\n                <BoardItemCurrentIcon>\n                  <use href={sprite + '#icon-pencil'}></use>\n                </BoardItemCurrentIcon>\n              </ListItemButton>\n            </ListItem>\n\n            <ListItem disablePadding>\n              <ListItemButton\n                sx={{\n                  p: 0,\n                  m: 0,\n                  pointerEvents: 'auto',\n                  opacity: 0.5,\n                  '&:hover, &:focus': {\n                    opacity: 1,\n                  },\n                }}\n                onClick={handleDeleteClick}\n              >\n                <BoardItemCurrentIcon>\n                  <use href={sprite + '#icon-trash'}></use>\n                </BoardItemCurrentIcon>\n              </ListItemButton>\n            </ListItem>\n          </List>\n        )}\n      </BoardItemWrap>\n    </>\n  );\n};\n","import { List, ListItem, ListItemButton } from '@mui/material';\nimport { SidebarBoardItem } from './SidebarBoardItem';\nimport { useState } from 'react';\n\n// import { useNavigate } from 'react-router-dom';\n\nimport { API } from 'Services/API';\n\nexport const SidebarBoardList = () => {\n  const [currentItemIndex, setCurrentItemIndex] = useState(0);\n\n  // const navigate = useNavigate();\n\n  const { data: boards } = API.API.useGetBoardsQuery();\n\n  const handleButtonClick = (index, id) => {\n    setCurrentItemIndex(index);\n    // navigate(`/home/${id}`);\n  };\n\n  return (\n    <List\n      disablePadding\n      sx={{ display: 'flex', flexDirection: 'column', gap: 0.5, mb: 3 }}\n    >\n      {boards?.map((board, index) => (\n        <ListItem key={board._id} disablePadding>\n          <ListItemButton\n            sx={{\n              p: 0,\n              m: 0,\n              pointerEvents: currentItemIndex === index ? 'none' : 'auto',\n            }}\n            onClick={() => handleButtonClick(index, board._id)}\n          >\n            <SidebarBoardItem\n              id={board._id}\n              icon={board.iconId}\n              title={board.title}\n              current={currentItemIndex === index}\n            />\n          </ListItemButton>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const ComponentWrapper = styled.div`\n  padding: 0px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const FormStyled = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n  margin-bottom: 0px;\n`;\n\nexport const InputStyled = styled.input`\n  resize: none;\n  color: #ffffff;\n  padding: 14px 14px;\n  background-color: transparent;\n  border: 1px solid #bedbb0;\n  border-radius: 8px;\n  :focus {\n    border: 2px solid #bedbb0;\n    outline: none;\n  }\n  ::placeholder {\n    color: #ffffff;\n    opacity: 30%;\n  }\n`;\n\nexport const TextareaStyled = styled.textarea`\n  display: flex;\n  min-height: 155px;\n  color: #ffffff;\n  resize: none;\n  padding: 14px 14px;\n  background-color: transparent;\n  border: 1px solid #bedbb0;\n  border-radius: 8px;\n  text-align: top;\n  :focus {\n    border: 2px solid #bedbb0;\n    outline: none;\n  }\n  ::placeholder {\n    color: #ffffff;\n    opacity: 30%;\n  }\n`;\n\nexport const LabelColorBox = styled.div`\n  display: flex;\n  gap: 4px;\n`;\n","import { Report } from 'notiflix';\nimport { useFormik } from 'formik';\nimport * as Yup from \"yup\";\nimport Notiflix from 'notiflix';\nimport {\n  ComponentWrapper,\n  FormStyled,\n  InputStyled,\n  TextareaStyled,\n} from './ModalHelp.styled';\nimport { ButtonWithoutIcon } from \"components/Buttons/Button\";\nimport ModalLayout from 'components/ModalLayout/ModalLayout';\nimport { useDispatch } from 'react-redux';\nimport { API } from 'Services/API';\nimport { setError } from 'redux/auth/authAPISlice';\n\n\n\nconst ModalHelp = ({ open, handleClose }) => {\n    const dispatch = useDispatch()\n    const[helpUser] = API.useHelpUserMutation()\n    \n    const handleSubmit = async () => {\n        try {\n            const response = await helpUser({\n                email: formik.values.email,\n                comment: formik.values.comment,\n            })\n            if (response) {\n                handleClose();\n                \n            Report.success(\n                    'Email successfully sent',\n                    'Our developer has engaged in an epic battle to provide you with an answer. Brace yourself for the victory writing, and in the meantime, hold tight!',\n                    'Ok'\n                );  \n            }\n            formik.resetForm()    \n        }\n        catch (error) {\n      if (error.status === 400) {\n        console.log('All field must be filled in');\n      } else {\n        console.log('An error occurred:', error.data.message);\n        dispatch(setError(error));\n      }\n    }\n    };\n    \n    const validationSchema = Yup.object({\n        email: Yup.string().email()\n            .required('Email is required'),\n        comment: Yup.string()\n        .required('Comment is required'),\n    });\n\n    const formik = useFormik({\n        initialValues: { email: \"\", comment: \"\" , },\n        onSubmit: ({ title }) => handleSubmit(title),\n        validationSchema,\n    });\n    \n    return (\n    <ModalLayout\n        title={'Need help'}\n        open={open}\n        handleClose={handleClose}\n \n            // sx={{ ...ModalStyles, width: '400px', height: '355px' }}\n            //СПИТАТИ СТВОРИТИ ОКРЕМИЙ ./ModalLayoutStyles і тоді змінити\n        >\n      <ComponentWrapper>\n        <FormStyled onSubmit={formik.handleSubmit}>\n            <InputStyled\n                id=\"email\"\n                name=\"email\"\n                placeholder=\"email address\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={formik.values.email}\n            />\n             <TextareaStyled\n                id=\"comment\"\n                name=\"comment\"\n                placeholder=\"comment\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={formik.values.comment}\n            /> \n\n                    <ButtonWithoutIcon title={'Add'} type={'submit'} onClick={() => {\n                        (formik.values.email === '' && Notiflix.Notify.warning('Email field must be filled in')) || (formik.values.comment === '' && Notiflix.Notify.warning('Comment field must be filled in'));\n                    }} />\n        </FormStyled>\n        </ComponentWrapper>\n    </ModalLayout>\n\n    );\n}; \n\n    \n\n\nexport default ModalHelp;","import {\n  CreateBoardWrap,\n  HelpBox,\n  HelpButton,\n  HelpIcon,\n  HelpText,\n  Image,\n  Subtitle,\n  TitleCreate,\n} from './SidebarContent-styled';\n\nimport styles from './SidebarCustomScroll.module.css';\n\nimport AloeVera from '../../assets/images/aloe-vera.png';\nimport sprite from '../../assets/images/sprite.svg';\n\nimport { useEffect, useState } from 'react';\nimport { SidebarLogo } from 'components/Logo/Logo';\nimport LogoutBtn from 'components/logoutBtn/logoutBtn';\nimport { ButtonSidebar } from 'components/Buttons/Button';\nimport ModalBoard from 'components/ModalBoard/ModalBoard';\nimport { SidebarBoardList } from './SidebarBoardList';\nimport { Box } from '@mui/material';\nimport ModalHelp from 'components/ModalHelp/ModalHelp';\n// import ModalHelp from 'components/ModalHelp/ModalHelp';\n\nexport const SidebarContent = ({ isSidebarShown }) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isModalHelpOpen, setIsModalHelpOpen] = useState(false);\n  const [startAnimation, setStartAnimation] = useState(true);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setStartAnimation(true);\n      setTimeout(() => {\n        setStartAnimation(false);\n      }, 1000);\n    }, 7000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  const modalStateChange = () => setIsModalOpen(!isModalOpen);\n\n  return (\n    <>\n      <Box\n        className={styles.container}\n        sx={{\n          overflowX: 'hidden',\n          pt: 3,\n          pb: 3,\n          display: 'flex',\n          flexGrow: 1,\n          flexDirection: 'column',\n          justifyContent: 'space-between',\n        }}\n      >\n        <Box>\n          <Box sx={{ pl: { 0: 1.75, 768: 3 }, pr: { 0: 1.75, 768: 3 } }}>\n            <SidebarLogo sx={{ mb: 7.5 }} isSidebarShown={isSidebarShown} />\n\n            <Subtitle sx={{ mb: 1 }} isSidebarShown={isSidebarShown}>\n              My boards\n            </Subtitle>\n\n            <CreateBoardWrap sx={{ mb: 5 }}>\n              <TitleCreate isSidebarShown={isSidebarShown}>\n                Create a <br /> new board\n              </TitleCreate>\n              <ButtonSidebar onClick={modalStateChange} />\n            </CreateBoardWrap>\n          </Box>\n          <SidebarBoardList />\n        </Box>\n\n        <Box sx={{ pl: { 0: 1.75, 768: 3 }, pr: { 0: 1.75, 768: 3 } }}>\n          <HelpBox sx={{ p: { 0: 1.75, 768: 2.5 }, mb: 3 }}>\n            <Image\n              src={AloeVera}\n              alt={'aloe vera'}\n              isSidebarShown={isSidebarShown}\n            />\n            <HelpText\n              isSidebarShown={isSidebarShown}\n              sx={{\n                mb: 2.25,\n                fontSize: { 0: '12px', 768: '14px' },\n                lineHeight: { 0: '16px', 768: '20px' },\n              }}\n            >\n              If you need help with <span>TaskPro</span>, check out our support\n              resources or reach out to our customer support team.\n            </HelpText>\n            <HelpButton type=\"button\" isSidebarShown={isSidebarShown} onClick={() => setIsModalHelpOpen(true)}>\n              {/* <ModalHelp open={isModalOpen} handleClose={modalStateChange}/> */}\n              <HelpIcon startAnimation={startAnimation}>\n                <use href={sprite + '#icon-help'}></use>\n              </HelpIcon>\n              Need help?\n            </HelpButton>\n            <ModalHelp open={isModalHelpOpen} handleClose={()=> setIsModalHelpOpen(false)} />\n          </HelpBox>\n          <LogoutBtn />\n        </Box>\n      </Box>\n\n      <ModalBoard open={isModalOpen} handleClose={modalStateChange} />\n    </>\n  );\n};\n","import { Box, Drawer } from '@mui/material';\n\nimport { SidebarContent } from './SidebarContent';\nimport { SIDEBARMOBILEWIDTH, SIDEBARWIDTH } from './SidebarCONSTANTS';\n\nexport const Sidebar = ({ ...props }) => {\n  const { window, isMobileSidebar, handleSidebarToggle } = props;\n  const container =\n    window !== undefined ? () => window().document.body : undefined;\n\n  return (\n    <Box\n      component=\"nav\"\n      sx={{ width: { 1440: SIDEBARWIDTH }, flexShrink: { 1440: 0 } }}\n      aria-label=\"sidebar options\"\n    >\n      <Drawer\n        container={container}\n        variant=\"temporary\"\n        open={isMobileSidebar}\n        onClose={handleSidebarToggle}\n        ModalProps={{ keepMounted: true }}\n        sx={{\n          display: { 0: 'block', 1440: 'none' },\n          '& .MuiDrawer-paper': {\n            boxSizing: 'border-box',\n            boxShadow: 'none',\n            border: 'none',\n            overflowX: 'hidden',\n            width: {\n              0: 192,\n              320: '60vw',\n              375: SIDEBARMOBILEWIDTH,\n              768: SIDEBARWIDTH,\n            },\n            backgroundColor: \"var(--sidebar-primary-bg-color)\",\n          },\n        }}\n      >\n        <SidebarContent isSidebarShown={isMobileSidebar} />\n      </Drawer>\n\n      <Drawer\n        variant=\"permanent\"\n        open\n        sx={{\n          display: { 0: 'none', 1440: 'block' },\n          '& .MuiDrawer-paper': {\n            boxSizing: 'border-box',\n            boxShadow: 'none',\n            border: 'none',\n            overflowX: 'hidden',\n            width: SIDEBARWIDTH,\n            backgroundColor: \"var(--sidebar-primary-bg-color)\",\n          },\n        }}\n      >\n        <SidebarContent isSidebarShown={true} />\n      </Drawer>\n    </Box>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const HeaderContainer = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  max-width: 100%;\n  width: auto;\n  padding: 18px 24px;\n  background: var(--header-bg-color);\n  color: var(--primary-text-color);\n\n  @media (max-width: 1440px) {\n    padding: 18px 32px;\n  }\n  @media (max-width: 768px) {\n    padding: 14px 20px;\n  }\n`;\n\nexport const ThemeContainer = styled.div`\n  position: relative;\n  display: inline-block;\n  width: 70px;\n  height: auto;\n  margin-right: 14px;\n  margin-left: auto;\n`;\n\nexport const ThemeWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  color: var(--header-theme-color);\n  svg {\n    stroke: var(--header-theme-color);\n  }\n`;\n\nexport const ThemeUL = styled.ul`\n  position: absolute;\n  top: 45px;\n  left: -12px;\n  margin: 0px;\n  max-height: 0px;\n  padding: 0 44px 0 18px;\n  background: var(--modal-bg-color);\n  overflow: hidden;\n  list-style: none;\n  border-radius: 8px;\n\n  &.visible {\n    width: 100px;\n    max-height: 107px;\n    padding: 18px 44px 18px 18px;\n  }\n`;\n\nexport const ThemeButton = styled.button`\n  border: none;\n  background: transparent;;\n  cursor: ${({ disabled }) => (disabled ? '' : 'pointer')};\n  color: ${({ selected }) =>\n    selected ? 'var(--button-bg-color)' : 'var(--secondary-text-color)'};\n  }\n`;\n","import { IconButton } from '@mui/material';\nimport MenuIcon from '@mui/icons-material/Menu';\n\nexport const NavBtn = ({ handleSidebarToggle }) => {\n  return (\n    <>\n      <IconButton\n        color=\"inherit\"\n        aria-label=\"open sidebar options\"\n        edge=\"start\"\n        onClick={handleSidebarToggle}\n        sx={{ width: 32, height: 32, display: { 1440: 'none' } }}\n      >\n        <MenuIcon />\n      </IconButton>\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const UserInfoContainer = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\n\nexport const UserName = styled.p`\n\n    margin-right: 8px;\n    color: var(--primary-text-color);\n`;\n\nexport const EmptyAvatar = styled.div`\n    width: 32px;\n    height: 32px;\n    background: var(--primary-text-color);\n    border-radius: 8px;\n`;","import { EmptyAvatar, UserInfoContainer, UserName } from './UserInfo.styled';\n\nexport const UserInfo = ({ name = 'User', avatarURL }) => {\n  return (\n    <UserInfoContainer>\n      <UserName>{name}</UserName>\n      <div>\n        {avatarURL ? (\n          <img src={avatarURL} alt=\"User Avatar\" />\n        ) : (\n          <EmptyAvatar />\n        )}\n      </div>\n    </UserInfoContainer>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { HeaderContainer, ThemeButton, ThemeContainer, ThemeUL, ThemeWrap } from './Header.styled';\nimport sprite from '../../assets/images/sprite.svg';\nimport { NavBtn } from './NavBtn/NavBtn';\nimport { UserInfo } from './UserInfo/UserInfo';\n\nexport const Header = ({handleSidebarToggle}) => {\n  const user = {\n    theme: 'dark',\n    name: 'Ivetta',\n    avatarURL: '',\n  };\n  \n  const [themeListVisible, setThemeListVisible] = useState(false);\n  const [selectedTheme, setSelectedTheme] = useState(user.theme);\n\n  const themeList = [ 'light', 'dark', 'violet' ];\n \n  useEffect(() => {\n    document.body.classList.add(selectedTheme);\n    return () => {\n      document.body.classList.remove(selectedTheme);\n    };\n  }, [selectedTheme]);\n\n  const handleThemeList = () => {\n    setThemeListVisible(!themeListVisible);\n  };\n\n  const handleThemeChange = e => {\n    setSelectedTheme(e.target.value);\n    setThemeListVisible(!themeListVisible);\n  };\n\n  return (\n    <HeaderContainer>\n      <NavBtn handleSidebarToggle={handleSidebarToggle} />\n      <ThemeContainer>\n        <ThemeWrap onClick={handleThemeList}>\n          <p>Theme</p>\n          <svg width=\"16px\" height=\"16px\">\n            <use href={sprite + '#icon-drop-down'}></use>\n          </svg>\n        </ThemeWrap>\n        <ThemeUL className={themeListVisible ? 'visible' : ''}>\n          {themeList.map(theme => (\n            <li key={theme}>\n              <ThemeButton\n                selected={selectedTheme === theme}\n                disabled={selectedTheme === theme}\n                value={theme}\n                onClick={handleThemeChange}\n              >\n                {theme}\n              </ThemeButton>\n            </li>\n          ))}\n        </ThemeUL>\n      </ThemeContainer>\n      <UserInfo name={user.name} avatarURL={user.avatarURL}/>\n    </HeaderContainer>\n  );\n};\n","import { AppBar, Box } from '@mui/material';\n\nimport { useState } from 'react';\nimport { SIDEBARWIDTH } from 'components/Sidebar/SidebarCONSTANTS';\nimport { Sidebar } from 'components/Sidebar/Sidebar';\nimport { Header } from 'components/Header/Header';\nimport { Outlet } from 'react-router-dom';\n\nconst HomePage = () => {\n  const [isMobileSidebar, setIsMobileSidebar] = useState(false);\n  const handleSidebarToggle = () => setIsMobileSidebar(!isMobileSidebar);\n\n  return (\n    <Box sx={{ display: 'flex' }}>\n      <AppBar\n        position=\"fixed\"\n        sx={{\n          width: { 1440: `calc(100% - ${SIDEBARWIDTH}px)` },\n          height: { 768: 68 },\n          ml: { 1440: `${SIDEBARWIDTH}px` },\n          boxShadow: 'none',\n          backgroundColor: '#161616',\n        }}\n      >\n        <Header handleSidebarToggle={handleSidebarToggle} />\n      </AppBar>\n\n      <Sidebar\n        isMobileSidebar={isMobileSidebar}\n        handleSidebarToggle={handleSidebarToggle}\n      />\n\n      <Outlet/>  \n    </Box>\n  );\n};\n\nexport default HomePage;\n"],"names":["API","useRegisterMutation","useLogInMutation","useLogOutMutation","useAvatarUserMutation","useGetCurrentUserQuery","useHelpUserMutation","useThemeUserMutation","useUpdateUserMutation","useGetBoardsQuery","useGetBoardByIdQuery","useAddBoardsMutation","useDeleteBoardByIdMutation","useUpdateBoardByIdMutation","useAddColumnMutation","useUpdateColumnByIdMutation","useDeleteColumnByIdMutation","useAddCardMutation","useUpdateCardByIdMutation","useDeleteCardByIdMutation","useUpdateCardColumnByIdMutation","ButtonWithIcon","_ref","title","onClick","type","_jsxs","Button","variant","disableElevation","sx","display","gap","color","fontFamily","alignItems","textTransform","borderRadius","letterSpacing","fontSize","background","lineHeight","fontWeight","fontStyle","width","height","children","_jsx","Box","justifyContent","stroke","href","sprite","ButtonWithoutIcon","_ref2","marginTop","ButtonAdd","_ref3","ButtonSidebar","_ref4","IconButton","slideLigtning","keyframes","_templateObject","_taggedTemplateLiteral","slideToRight","_templateObject2","SidebarLogoIcon","styled","fill","animation","concat","animationTimingFunction","SidebarLogoWrap","transform","isSidebarShown","animationFillMode","SidebarLogoIconWrap","backgroundColor","overflow","SidebarLogoText","margin","StartPageLogoWrap","StartPageLogoIconWrap","StartPageLogoIcon","StartPageLogoText","SidebarLogo","_Fragment","StartPageLogo","style","ButtonClose","FormStyled","InputStyled","_templateObject3","TransparentSVG","_templateObject4","UlStyled","_templateObject5","UlBgStyled","_templateObject6","LiStyled","_templateObject7","ImgStyled","_templateObject8","LiIconsStyled","_templateObject9","arrIcons","arrBG","ModalStyles","position","top","left","border","padding","titleStyles","marginBottom","open","handleClose","Modal","onClose","Typography","SIDEBARWIDTH","SIDEBARMOBILEWIDTH","slideToLeft","slideToDown","shakeAnimation","Subtitle","CreateBoardWrap","paddingBottom","paddingTop","borderTop","borderBottom","TitleCreate","HelpBox","flexDirection","Image","HelpText","HelpButton","_ref5","cursor","textDecoration","outline","HelpIcon","_ref6","startAnimation","LogOutBtnStyled","SpanStyled","Icon","dispatch","useDispatch","_useLogOutMutation","logOut","_slicedToArray","handleLogOut","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","unwrap","logout","setIsLoggedIn","t0","setError","stop","apply","arguments","titleStyle","_useState","useState","_useState2","iconId","setIconId","_useState3","_useState4","iconIndex","setIconIndex","_useState5","_useState6","backgroundURL","setBackgroundURL","_useState7","_useState8","backgroundIndex","setBackgroundIndex","_API$useAddBoardsMuta","addBoards","handleSubmit","response","icon","sent","console","log","setBoardResponse","formik","handleReset","_x","validationSchema","Yup","min","required","matches","description","useFormik","initialValues","onSubmit","ModalLayout","id","name","placeholder","onChange","handleChange","onBlur","handleBlur","value","values","index","bg","src","alt","slideAround","BoardItemWrap","BoardItemIcon","BoardItemCurrentIcon","BoardItemTitleWrap","whiteSpace","BoardItemTitle","titleWidth","titleWrapWidth","current","slideText","animationName","animationDuration","animationIterationCount","animationDirection","setTitleWidth","measureRef","useRef","useEffect","observer","ResizeObserver","entries","_step","_iterator","_createForOfIteratorHelper","s","n","done","entry","target","contentRect","err","e","f","currentRef","observe","unobserve","ref","visibility","SidebarBoardItem","isHovered","setIsHovered","setTitleWrapWidth","window","innerWidth","screenWidth","setScreenWidth","_useState9","_useState10","setStartAnimation","_API$useDeleteBoardBy","deleteBoard","handleResize","debounce","randomNumber","Math","floor","random","interval","setInterval","setTimeout","clearInterval","addEventListener","removeEventListener","MeasureTitleWidth","onMouseEnter","onMouseLeave","pl","pr","opacity","right","List","disablePadding","ListItem","ListItemButton","p","m","pointerEvents","event","stopPropagation","SidebarBoardList","currentItemIndex","setCurrentItemIndex","boards","data","mb","map","board","handleButtonClick","_id","ComponentWrapper","TextareaStyled","_API$useHelpUserMutat","helpUser","email","comment","Report","resetForm","status","message","Notiflix","SidebarContent","isModalOpen","setIsModalOpen","isModalHelpOpen","setIsModalHelpOpen","modalStateChange","className","styles","overflowX","pt","pb","flexGrow","AloeVera","ModalHelp","LogoutBtn","ModalBoard","Sidebar","props","Object","assign","_objectDestructuringEmpty","isMobileSidebar","handleSidebarToggle","container","undefined","document","body","component","flexShrink","Drawer","ModalProps","keepMounted","boxSizing","boxShadow","HeaderContainer","ThemeContainer","ThemeWrap","ThemeUL","ThemeButton","disabled","selected","NavBtn","edge","MenuIcon","UserInfoContainer","UserName","EmptyAvatar","UserInfo","_ref$name","avatarURL","Header","user","themeListVisible","setThemeListVisible","selectedTheme","setSelectedTheme","classList","add","remove","handleThemeChange","theme","setIsMobileSidebar","AppBar","ml","Outlet"],"sourceRoot":""}