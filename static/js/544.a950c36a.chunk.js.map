{"version":3,"file":"static/js/544.a950c36a.chunk.js","mappings":"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","sources":["Services/API.js","components/HeaderDashboard/HeaderDashboard.styled.jsx","components/ModalBoard/ModalBoard.styled.jsx","components/ModalLayout/ModalLayout.jsx","components/Sidebar/SidebarCONSTANTS.js","components/AddCard/AddCard.styled.jsx","components/AddColumn/AddColumn.jsx","components/ColorRadioButtons/ColorRadioButtons.jsx","components/Icons/DropDownIcon/DropDownIcon.styled.jsx","components/Icons/DropDownIcon/DropDownIcon.jsx","components/Popup/Popup.jsx","components/DatePicker/DatePicker.styled.jsx","components/DatePicker/DatePicker.jsx","components/AddCard/AddCard.jsx","components/TaskCard/TaskCard.styled.jsx","components/TaskCard/TaskCard.jsx","components/Column/Column.styled.jsx","components/Column/Column.jsx","components/HeaderDashboard/Filter.styled.jsx","components/HeaderDashboard/Filter.jsx","components/HeaderDashboard/HeaderDashboard.jsx","pages/ScreensPage/ScreenPage.styled.jsx","pages/ScreensPage/ScreensPage.jsx"],"sourcesContent":["import {\n  useRegisterMutation,\n  useLogInMutation,\n  useLogOutMutation,\n  useGetCurrentUserQuery,\n  useUpdateUserMutation,\n  useThemeUserMutation,\n  useUpdateAvatarMutation,\n  useHelpUserMutation,\n  useGetBoardsQuery,\n  useGetBoardContentByIdQuery,\n  useGetBoardByIdQuery,\n  useAddBoardsMutation,\n  useDeleteBoardByIdMutation,\n  useUpdateBoardByIdMutation,\n  useAddColumnMutation,\n  useUpdateColumnByIdMutation,\n  useDeleteColumnByIdMutation,\n  useGetAllCardsQuery,\n  useAddCardMutation,\n  useUpdateCardByIdMutation,\n  useDeleteCardByIdMutation,\n  useUpdateCardColumnByIdMutation,\n  useLoginGoogleUserMutation\n} from './API_Component';\n\nexport const API = {\n  useRegisterMutation,\n  useLogInMutation,\n  useLogOutMutation,\n  useUpdateAvatarMutation,\n  useGetCurrentUserQuery,\n  useHelpUserMutation,\n  useThemeUserMutation,\n  useUpdateUserMutation,\n  useGetBoardsQuery,\n  useGetBoardContentByIdQuery,\n  useGetBoardByIdQuery,\n  useAddBoardsMutation,\n  useDeleteBoardByIdMutation,\n  useUpdateBoardByIdMutation,\n  useAddColumnMutation,\n  useUpdateColumnByIdMutation,\n  useDeleteColumnByIdMutation,\n  useGetAllCardsQuery,\n  useAddCardMutation,\n  useUpdateCardByIdMutation,\n  useDeleteCardByIdMutation,\n  useUpdateCardColumnByIdMutation,\n  useLoginGoogleUserMutation\n};\n","import styled from '@emotion/styled';\nexport const Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  padding-bottom: 15px;\n  // padding: 14px 24px;\n  // background: #1f1f1f;\n  font-family: Poppins;\n\n  //   @media (min-width: 1280px) {\n  //       height: 48px;\n  //   };\n  //   @media (min-width: 768px) {\n  //       height: 80px;\n  //   };\n  //   @media (min-width: 375px) {\n  //       height: 134px;\n  //   };\n  //   @media (max-width: 374px) {\n  //       max-height: 134px;\n  //   };\n`;\n\nexport const TitleDashBoard = styled.p`\n  font-size: 18px;\n  font-weight: 500;\n  letter-spacing: -0.36px;\n  margin: 0;\n  color: var(--primary-text-color);\n`;\n\nexport const FilterButton = styled.button`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 2px;\n  background-color: transparent;\n  border: none;\n  outline: none;\n  opacity: 0.8;\n  cursor: pointer;\n`;\nexport const TitleFilter = styled.p`\n  font-size: 14px;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n  color: var(--secondary-text-color);\n  margin-left: 8px;\n  font-family: Poppins;\n`;\n","import styled from '@emotion/styled';\nimport { styled as MUI } from '@mui/material/styles';\n\nexport const FormStyled = MUI('form')({\n  display: 'flex',\n  flexDirection: 'column',\n  gap: '14px',\n});\n\nexport const ButtonClose = styled.button`\n  font-family: Poppins;\n  margin: 0;\n  padding: 0;\n  position: absolute;\n  right: 10px;\n  top: 10px;\n  width: 24px;\n  height: 24px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  background-color: transparent;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    transform: scale(1.2);\n    /* border: 1px solid #ffffff;\n    color: rgba(255, 255, 255, 1); */\n  }\n`;\n\nexport const InputStyled = styled.input`\n  font-family: Poppins;\n  resize: none;\n  color: var(--primary-text-color);\n  padding: 14px 14px;\n  background-color: transparent;\n  border: 1px solid rgba(190, 219, 176, 0.4);\n  border-radius: 8px;\n  margin-bottom: 10px;\n  :focus {\n    border: 1px solid #bedbb0;\n    outline: none;\n  }\n  ::placeholder {\n    color: var(--primary-text-color);\n    opacity: 30%;\n  }\n`;\n\nexport const TransparentSVG = styled.svg`\n  width: 18px;\n  height: 18px;\n  // stroke: rgba(255, 255, 255, 0.5);\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    stroke: #bedbb0;\n  }\n`;\n\nexport const UlStyled = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 6px;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  margin-bottom: 14px;\n`;\n\nexport const UlBgStyled = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 4px;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  margin-bottom: 14px;\n  max-width: 260px;\n`;\n\nexport const LiStyled = styled.li`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 28px;\n  height: 28px;\n  border-radius: 5px;\n\n  &:hover,\n  &:focus {\n    border: 1px solid #bedbb0;\n  }\n`;\n\nexport const ImgStyled = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  object-position: center;\n  cursor: pointer;\n`;\n\nexport const LiIconsStyled = styled.li`\n  display: flex;\n  width: 20px;\n  height: 20px;\n  align-items: center;\n  justify-content: center;\n\n  &:hover,\n  &:focus {\n    border-radius: 5px;\n    background-color: rgba(190, 219, 176, 0.2);\n  }\n`;\n","import { Modal, Box, Typography } from '@mui/material';\nimport sprite from '../../assets/images/sprite.svg';\nimport { ButtonClose } from 'components/ModalBoard/ModalBoard.styled';\n\n// import { useState } from 'react';\n\nconst modalStyles = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  borderRadius: 2,\n  border: '1px solid rgba(190, 219, 176, 0.50)',\n  background: 'var(--modal-bg-color)',\n  padding: 3,\n  fontFamily: 'Poppins',\n};\n\nconst titleStyles = {\n  color: 'var(--primary-text-color)',\n  fontSize: '18px',\n  fontStyle: 'normal',\n  fontWeight: 500,\n  fontFamily: 'Poppins',\n  lineHeight: 'normal',\n  letterSpacing: -0.36,\n  marginBottom: 3,\n};\n\nconst ModalLayout = ({ title, open, handleClose, children }) => {\n  return (\n    <>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-title\"\n        aria-describedby=\"modal-description\"\n      >\n        <Box sx={modalStyles}>\n          <Typography variant=\"h2\" sx={titleStyles}>\n            {title}\n          </Typography>\n          <ButtonClose type=\"button\" onClick={handleClose}>\n            <svg\n              style={{ stroke: 'var(--primary-text-color)' }}\n              width=\"18\"\n              height=\"18\"\n            >\n              <use href={sprite + '#icon-x-close'} />\n            </svg>\n          </ButtonClose>\n          {children}\n        </Box>\n      </Modal>\n    </>\n  );\n};\n\nexport default ModalLayout;\n","export const SIDEBARWIDTH = 260;\nexport const SIDEBARMOBILEWIDTH = 225;\n  \n\n\n\n","import styled from '@emotion/styled';\n\nexport const ComponentWrapper = styled.div`\n  padding: 0px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const FormStyled = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 350px;\n  gap: 14px;\n  margin-bottom: 0px;\n`;\n\nexport const InputStyled = styled.input`\n  resize: none;\n  color: var(--primary-text-color);\n  padding: 14px 14px;\n  background-color: transparent;\n  border: 1px solid #bedbb0;\n  border-radius: 8px;\n  :focus {\n    border: 2px solid #bedbb0;\n    outline: none;\n  }\n  ::placeholder {\n    color: var(--primary-text-color);\n    opacity: 30%;\n  }\n`;\n\nexport const TextareaStyled = styled.textarea`\n  display: flex;\n  min-height: 155px;\n  color: var(--primary-text-color);\n  resize: none;\n  padding: 14px 14px;\n  background-color: transparent;\n  border: 1px solid #bedbb0;\n  border-radius: 8px;\n  text-align: top;\n  :focus {\n    border: 2px solid #bedbb0;\n    outline: none;\n  }\n  ::placeholder {\n    color: var(--primary-text-color);\n    opacity: 30%;\n  }\n`;\n\nexport const LabelColorBox = styled.div`\n  display: flex;\n  gap: 4px;\n`;\n\nexport const SubWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: left;\n  gap: 4px;\n`;\n\nexport const DateWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 4px;\n`;\n\nexport const DateText = styled.p`\n  color: var(--default-screen-page-link-color);\n  font-size: 14px;\n  margin: 0;\n`;\n\nexport const SubTitle = styled.p`\n  color: var(--primary-text-color);\n  font-size: 12px;\n  opacity: 50%;\n  margin: 0;\n`;\n","import React, { useState } from 'react';\nimport { API } from 'Services/API';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { FormStyled, InputStyled } from '../AddCard/AddCard.styled';\nimport { ButtonWithIcon } from 'components/Buttons/Button';\nimport ModalLayout from '../ModalLayout/ModalLayout';\nimport Notiflix from 'notiflix';\n\nconst AddColumn = ({\n  open,\n  modalType,\n  boardId,\n  close,\n  columnId,\n  titleValue,\n}) => {\n  const [columnTitle, setColumnTitle] = useState(titleValue);\n  const [addColumn] = API.useAddColumnMutation();\n  const [updateColumn] = API.useUpdateColumnByIdMutation();\n\n  const validationSchema = Yup.object({\n    title: Yup.string()\n      .min(2, 'Must be more then 2 symbols')\n      .required('Title is required'),\n  });\n\n  const formikTitle =\n    modalType === 'Add column' ? { title: '' } : { title: columnTitle };\n\n  const formik = useFormik({\n    initialValues: formikTitle,\n    onSubmit: title => handleSubmit(title),\n    validationSchema,\n  });\n\n  const handleSubmit = async title => {\n    if (modalType === 'Add column') {\n      try {\n        await addColumn({ boardId, title });\n      } catch (error) {\n        console.log(error.message);\n      }\n    }\n\n    if (modalType === 'Edit column') {\n      if (title.title === titleValue) {\n        return Notiflix.Notify.failure('Nothing changed');\n      }\n      setColumnTitle('');\n      try {\n        await updateColumn({ columnId, title });\n        Notiflix.Notify.success('Your column successfully updated');\n        \n      } catch (error) {\n        console.log(error.message);\n      }\n    }\n    formik.handleReset();\n    close();\n  };\n\n  return (\n    <ModalLayout title={modalType} open={open} handleClose={close}>\n      <FormStyled onSubmit={formik.handleSubmit}>\n        <InputStyled\n          id=\"title\"\n          name=\"title\"\n          placeholder=\"Title\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.title}\n        />\n        <ButtonWithIcon\n          title={modalType === 'Add column' ? 'Add' : 'Edit'}\n          type={'submit'}\n        />\n      </FormStyled>\n    </ModalLayout>\n  );\n};\n\nexport default AddColumn;\n","import * as React from 'react';\nimport Radio from '@mui/material/Radio';\n\nexport default function ColorRadioButtons({ onColorChange, value = '0' }) {\n  const [selectedValue, setSelectedValue] = React.useState(value);\n\n  const handleChange = event => {\n    setSelectedValue(event.target.value);\n    onColorChange(event.target.value);\n  };\n\n  const controlProps = item => ({\n    checked: selectedValue === item,\n    onChange: handleChange,\n    value: item,\n  });\n\n  return (\n    <div>\n      <Radio\n        {...controlProps('1')}\n        sx={{ color: '#8FA1D0', '&.Mui-checked': { color: '#8FA1D0' } }}\n      />\n      <Radio\n        {...controlProps('2')}\n        sx={{ color: '#E09CB5', '&.Mui-checked': { color: '#E09CB5' } }}\n      />\n      <Radio\n        {...controlProps('3')}\n        sx={{ color: '#BEDBB0', '&.Mui-checked': { color: '#BEDBB0' } }}\n      />\n      <Radio\n        {...controlProps('0')}\n        sx={{ color: 'grey', '&.Mui-checked': { color: 'grey' } }}\n      />\n    </div>\n  );\n}\n","import styled from \"@emotion/styled\";\n\nexport const DropDawnBtn = styled.div`\n  outline: none;\n  background-color: transparent;\n  border: none;\n  transition: all 0.3s ease-in-out;\n  :hover,\n  :focus {\n    transform: translateY(5px);\n  }\n`;\nexport const DropDownSVG = styled.svg`\n  stroke: var(--default-screen-page-link-color);\n`;\n","import React from 'react'\nimport sprite from '../../../assets/images/sprite.svg';\nimport { DropDawnBtn, DropDownSVG } from './DropDownIcon.styled';\n\nconst DropDownIcon = ({onClick}) => {\n  return (\n    <div>\n      <DropDawnBtn id={'date-picker'} onClick={onClick}>\n        <DropDownSVG width=\"18\" height=\"18\">\n          <use href={sprite + '#icon-drop-down'} />\n        </DropDownSVG>\n      </DropDawnBtn>\n    </div>\n  );\n}\n\nexport default DropDownIcon\n","import { Popover } from '@mui/material';\nimport React from 'react';\n\nconst PopupStyles = {\n  '.MuiPaper-root': {\n    backgroundColor: '#1F1F1F',\n    borderRadius: '8px',\n  },\n};\n\nconst Popup = ({ anchorEl, open, onClose, children }) => {\n  return (\n    <Popover\n      sx={PopupStyles}\n      anchorEl={anchorEl}\n      open={open}\n      onClose={onClose}\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'left',\n      }}\n      transformOrigin={{\n        vertical: 'top',\n        horizontal: 'left',\n      }}\n    >\n      {children}\n    </Popover>\n  );\n};\n\nexport default Popup;\n","import { DateCalendar } from '@mui/x-date-pickers/DateCalendar';\nimport styled from '@emotion/styled';\n\nexport const DateCalendarStyled = styled(DateCalendar)`\n  .MuiDateCalendar-root {\n    font-family: 'Poppins';\n    background: 'var(--primary-bg-color)';\n    color: 'var(--primary-text-color)';\n  }\n`;\n\nexport const DatePickerStyles = {\n  '.MuiTypography-root': {\n    width: '24px',\n    m: '5px',\n    fontSize: '14px',\n    fontWeight: 500,\n    fontFamily: 'Poppins',\n    color: 'var(--secondary-text-color)',\n  },\n  '.MuiPickersCalendarHeader-label': {\n    fontSize: '14px',\n    fontWeight: 600,\n    fontFamily: 'Poppins',\n    color: 'var(--primary-text-color)',\n  },\n  '.MuiDateCalendar-root': {\n    width: '235px',\n  },\n  '.MuiPaper-root': {\n    backgroundColor: 'var(--primary-bg-color)',\n  },\n  '.MuiYearCalendar-root': {\n    width: '265px',\n  },\n  '.MuiPickersDay-root': {\n    color: 'var(--primary-text-color)',\n  },\n  '.MuiButtonBase-root': {\n    width: '24px',\n    height: '24px',\n    m: '5px',\n    color: 'var(--primary-text-color)',\n  },\n\n  '.MuiPickersArrowSwitcher-spacer': {\n    width: '0px',\n  },\n  '.MuiPickersFadeTransitionGroup-root': {\n    overflow: 'hidden',\n  },\n  '.MuiButtonBase-root:hover': {\n    backgroundColor: 'var(--default-screen-page-link-color)',\n    color: 'var(--primary-bg-color)',\n  },\n  '.MuiPickersYear-yearButton.Mui-selected': {\n    backgroundColor: 'var(--button-bg-color)',\n    color: 'var(--primary-bg-color)',\n  },\n  '.MuiPickersYear-yearButton:hover': {\n    backgroundColor: 'var(--button-bg-color)',\n    color: 'var(--primary-bg-color)',\n  },\n  '.MuiPickersDay-today': {\n    backgroundColor: 'var(--button-bg-color)',\n    color: 'var(--primary-bg-color)',\n    border: '1px solid var(--button-bg-color)',\n  },\n  '.MuiPickersDay-dayOutsideMonth': {\n    fontWeight: 400,\n    color: 'rgba(255, 255, 255, 0.18)',\n  },\n  '.MuiButtonBase-root.Mui-disabled': {\n    fontWeight: 400,\n    color: 'rgba(255, 255, 255, 0.18)',\n  },\n  '.css-qa7bje-MuiButtonBase-root-MuiPickersDay-root.Mui-disabled:not(.Mui-selected)':\n    {\n      fontWeight: 400,\n      color: 'rgba(255, 255, 255, 0.38)',\n    },\n  'MuiPickersYear-yearButton.Mui-selected': {\n    backgroundColor: 'var(--button-bg-color) !important',\n  },\n  'MuiPickersYear-yearButton.Mui-selected:hover': {\n    backgroundColor: 'var(--button-bg-color) !important',\n  },\n  width: '265px',\n  height: '295px',\n  backgroundColor: 'var(--primary-bg-color)',\n  border: '1px solid var(--default-screen-page-link-color)',\n  color: 'var(--primary-text-color)',\n  borderRadius: '8px',\n  fontStyle: 'normal',\n  fontWeight: 500,\n  lineHeight: 'normal',\n  letterSpacing: -0.36,\n  marginBottom: 0,\n};\n","import { DateCalendarStyled, DatePickerStyles } from \"./DatePicker.styled\";\n\n\nconst DatePickerCmponent = ({ onChange }) => {\n  return (\n    <div>\n      <DateCalendarStyled\n        sx={DatePickerStyles}\n        onChange={onChange}\n        format=\"LL\"\n        disablePast\n        showDaysOutsideCurrentMonth\n      />\n    </div>\n  );\n};\n\nexport default DatePickerCmponent;\n","import React, { useEffect, useState } from 'react';\nimport { useFormik } from 'formik';\nimport { format, parseISO } from 'date-fns';\nimport * as Yup from 'yup';\nimport { API } from 'Services/API';\nimport formatISO from 'date-fns/formatISO';\nimport Notiflix from 'notiflix';\n\nimport {\n  FormStyled,\n  TextareaStyled,\n  SubWrapper,\n  DateText,\n  DateWrapper,\n  SubTitle,\n  InputStyled,\n} from './AddCard.styled';\nimport ColorRadioButtons from 'components/ColorRadioButtons/ColorRadioButtons';\nimport { ButtonWithIcon } from 'components/Buttons/Button';\nimport DropDownIcon from 'components/Icons/DropDownIcon/DropDownIcon';\nimport Popup from 'components/Popup/Popup';\nimport DatePickerCmponent from 'components/DatePicker/DatePicker';\nimport ModalLayout from '../ModalLayout/ModalLayout';\n\nNotiflix.Notify.init({\n  success: {\n    background: 'var(--button-bg-color)',\n  },\n});\n\nconst AddCard = ({\n  modalType,\n  close,\n  open,\n  handleClose,\n  columnId,\n  cardId = '',\n  titleValue = '',\n  descrValue = '',\n  priorityValue = '0',\n  deadlineValue,\n}) => {\n  const [date, setDate] = useState('');\n  const [dateValue, setDateValue] = useState('');\n  const [color, setColor] = useState(priorityValue.toString());\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  const [addCards] = API.useAddCardMutation();\n  const [updateCard] = API.useUpdateCardByIdMutation();\n\n  const handleDateClick = e => {\n    setAnchorEl(e.currentTarget);\n    setIsPopupOpen(true);\n  };\n\n  const onDateChange = e => {\n    console.log('Data :>> ', e);\n    const dateFns = format(e, 'LLLL d');\n    setDateValue(dateFns);\n    setDate(e);\n    setAnchorEl(null);\n    setIsPopupOpen(false);\n  };\n\n  const onColorChange = value => {\n    console.log('value :>> ', value);\n    setColor(value);\n  };\n\n  const handleSubmitForm = async (title, description) => {\n    if (modalType === 'Add card') {\n      if (!date) {\n        Notiflix.Notify.failure('Please select the date');\n      }\n\n      const ISODate = formatISO(date, { representation: 'date' });\n      console.log('ISODate :>> ', ISODate);\n\n      const cardData = {\n        title,\n        description,\n        priority: color,\n        deadline: ISODate,\n      };\n\n      try {\n        await addCards({ columnId, cardData });\n\n        Notiflix.Notify.success('Your card successfully added');\n      } catch (error) {\n        if (error.status === 400) {\n          return Notiflix.Notify.failure('All field must be filled in');\n        } else {\n          console.log('An error occurred:', error.data.message);\n        }\n      }\n    } else {\n      const ISODate = formatISO(date, { representation: 'date' });\n      const cardData = {\n        title,\n        description,\n        priority: color,\n        deadline: ISODate,\n      };\n\n      try {\n        await updateCard({ cardId, cardData });\n        Notiflix.Notify.success('Your card successfully updated');\n      } catch (error) {\n        if (error.status === 400) {\n          return Notiflix.Notify.failure('All field must be filled in');\n        } else {\n          console.log('An error occurred:', error.data.message);\n        }\n      }\n    }\n\n    setDateValue('');\n    setDate('');\n    handleReset();\n    close();\n  };\n\n  const validationSchema = Yup.object({\n    title: Yup.string()\n      .trim('The title cannot include leading and trailing spaces')\n      .strict(true)\n      .min(2, 'Must be more then 2 symbols')\n      .required('Title is required'),\n    description: Yup.string().min(5, 'Must be more then 2 symbols'),\n    color: Yup.string(),\n  });\n\n  const cardInitialValues =\n    modalType === 'Add card'\n      ? { title: '', description: '' }\n      : { title: titleValue, description: descrValue };\n\n  const { values, handleBlur, handleChange, handleReset, handleSubmit } =\n    useFormik({\n      initialValues: cardInitialValues,\n      onSubmit: ({ title, description }) =>\n        handleSubmitForm(title, description),\n      validationSchema,\n    });\n\n  useEffect(() => {\n    if (modalType === 'Add card') {\n      const currentDate = format(new Date(), \"'Today,' LLLL d\");\n      setDateValue(currentDate);\n    }\n    if (modalType === 'Edit card') {\n      console.log('deadlineValue :>> ', deadlineValue);\n      const dateISO = parseISO(deadlineValue, \"'Today,' LLLL d\");\n      setDate(dateISO);\n      const currentDate = format(dateISO, \"'Today,' LLLL d\");\n      setDateValue(currentDate);\n    }\n  }, [modalType, deadlineValue]);\n\n  return (\n    <ModalLayout title={modalType} open={open} handleClose={handleClose}>\n      <FormStyled onSubmit={handleSubmit}>\n        <InputStyled\n          id=\"title\"\n          name=\"title\"\n          placeholder=\"Title\"\n          onChange={handleChange}\n          onBlur={handleBlur}\n          value={values.title}\n        />\n\n        <TextareaStyled\n          id=\"description\"\n          name=\"description\"\n          placeholder=\"Description\"\n          onChange={handleChange}\n          onBlur={handleBlur}\n          value={values.description}\n        />\n\n        <SubWrapper>\n          <SubTitle>Label color</SubTitle>\n          <ColorRadioButtons value={color} onColorChange={onColorChange} />\n        </SubWrapper>\n\n        <SubWrapper>\n          <SubTitle>Deadline</SubTitle>\n          <DateWrapper>\n            <DateText>{dateValue}</DateText>\n            <DropDownIcon onClick={handleDateClick} />\n          </DateWrapper>\n        </SubWrapper>\n\n        <ButtonWithIcon\n          title={modalType === 'Add card' ? 'Add' : 'Edit'}\n          type={'submit'}\n          disabled={!values.title ? true : false}\n        />\n      </FormStyled>\n\n      <Popup\n        anchorEl={anchorEl}\n        open={isPopupOpen}\n        onClose={() => setIsPopupOpen(false)}\n      >\n        <DatePickerCmponent onChange={onDateChange} />\n      </Popup>\n    </ModalLayout>\n  );\n};\n\nexport default AddCard;\n","import styled from '@emotion/styled';\nimport { IconButton } from '@mui/material';\nimport { useState } from 'react';\n\nimport MenuItem from '@mui/material/MenuItem';\nexport function getPriorityColor(priority) {\n  switch (priority) {\n    case 3:\n      return '#BEDBB0';\n    case 1:\n      return '#8FA1D0';\n    case 2:\n      return '#E09CB5';\n    default:\n      return '#bababa';\n  }\n}\nexport function getPriorityText(priority) {\n  switch (priority) {\n    case 1:\n      return 'High';\n    case 2:\n      return 'Low';\n    case 3:\n      return 'Medium';\n    default:\n      return 'Without';\n  }\n}\nexport const TypographyStylesTitle = {\n  color: 'var(--primary-text-color)',\n  fontSize: '14px',\n  fontWeight: '600',\n  letterSpacing: '-0.28px',\n  marginBottom: '8px',\n};\n\nexport const TypographyStylesPriority = {\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'start',\n  gap: '4px',\n  color: 'var( --secondary-text-color)',\n  fontFamily: 'Poppins',\n  fontSize: '8px',\n\n  fontWeight: '400',\n  lineHeigt: 'normal',\n  letterSpacing: '-0.16px',\n};\nexport const CardContentStyles = {\n  borderBottom: '1px solid var(--cards-underline)',\n  padding: '0px',\n  paddingBottom: '14px',\n  marginBottom: '14px',\n};\nexport const ActionsBox = {\n  display: 'flex',\n  alignItems: 'base-line',\n  justifyContent: 'center',\n  gap: '14px',\n};\nexport const CardActionsStyled = {\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n};\nexport const Circle = styled.div`\n  width: 12px;\n  height: 12px;\n  border-radius: 50%;\n  background-color: ${props => getPriorityColor(props.priority)};\n`;\nexport const TypographyText = styled.div`\n  color: var(--primary-text-color);\n\n  font-size: 10px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  letter-spacing: -0.2px;\n`;\nexport const CardStyles = styled.div`\n  width: 334px;\n  height: 154px;\n  padding-top: 14px;\n  padding-bottom: 14px;\n  padding-left: 24px;\n  padding-right: 20px;\n  background-color: var(--cards-bg-color);\n  border-radius: 8px;\n  border-left: 4px solid ${props => getPriorityColor(props.priority)};\n`;\nexport const StyledIconButton = styled(IconButton)`\n  &:hover svg {\n    stroke: var(--default-screen-page-link-color);\n    stroke-opacity: 1;\n    transition: stroke 0.3s;\n  }\n`;\nexport const ListMenuStyles = styled(MenuItem)`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  color: var(--secondary-text-color);\n  font-family: 'Poppins';\n  font-size: 14px;\n\n  font-weight: 400px;\n\n  &:hover {\n    color: var(--default-screen-page-link-color);\n  }\n  &:hover svg {\n    stroke: var(--default-screen-page-link-color);\n    stroke-opacity: 1;\n    transition: stroke 0.3s;\n  }\n`;\n\nconst TextContainer = styled.div`\n  max-height: ${props =>\n    props.expanded\n      ? 'none'\n      : '36px'}; /* Максимальна висота для двох рядків тексту */\n  overflow: hidden;\n  position: relative;\n`;\n\nconst Text = styled.div`\n  color: var(--secondary-text-color);\n  font-size: 12px;\n  font-weight: 400px;\n  padding-right: 2px;\n  line-height: 18px; /* Висота рядка */\n`;\n\nconst ReadMore = styled.div`\n  color: var(--secondary-text-color);\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  background-color: transparent;\n  padding: 0 5px;\n  font-weight: bold;\n  cursor: pointer;\n  display: ${props => (props.expanded ? 'none' : 'block')};\n  &:hover {\n    text-decoration: underline;\n  }\n`;\nconst ShowMoreButton = styled.button`\n  color: var(--primary-text-color);\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nexport const TruncatedText = ({ text }) => {\n  const [expanded, setExpanded] = useState(false);\n\n  const toggleExpanded = () => {\n    setExpanded(!expanded);\n  };\n\n  const resetText = () => {\n    setExpanded(false);\n  };\n\n  return (\n    <TextContainer expanded={expanded}>\n      <Text>{text}</Text>\n      {!expanded && (\n        <>\n          <ReadMore onClick={toggleExpanded}>...</ReadMore>\n        </>\n      )}\n      {expanded && <ShowMoreButton onClick={resetText}>Go back</ShowMoreButton>}\n    </TextContainer>\n  );\n};\n","import React from 'react';\nimport { format } from 'date-fns';\nimport { useState } from 'react';\nimport AddCard from 'components/AddCard/AddCard';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport CardActions from '@mui/material/CardActions';\n\nimport Menu from '@mui/material/Menu';\nimport Box from '@mui/material/Box';\nimport sprite from '../../assets/images/sprite.svg';\n\nimport { getPriorityText } from './TaskCard.styled';\n\nimport { deleteCard } from '../../redux/tasks/cardsAPISlice';\nimport { useDispatch } from 'react-redux';\nimport { API } from 'Services/API';\n\nimport {\n  TypographyStylesTitle,\n  TypographyStylesPriority,\n  CardContentStyles,\n  ActionsBox,\n  CardActionsStyled,\n  Circle,\n  TypographyText,\n  StyledIconButton,\n  CardStyles,\n  ListMenuStyles,\n  TruncatedText,\n} from './TaskCard.styled';\n\nfunction TaskCard({\n  title,\n  description,\n  priority,\n  deadline,\n  moveCard,\n  id,\n  columnId,\n}) {\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  // const [updateCardById] = API.useUpdateCardByIdMutation();\n  const [deleteCardById] = API.useDeleteCardByIdMutation();\n\n  const [isAddCardOpen, setIsAddCardOpen] = useState(false);\n  // const [updatedData, setUpdatedData] = useState({\n  //   title,\n  //   description,\n  //   priority,\n  //   deadline,\n  // });\n  const dispatch = useDispatch();\n\n  const closeAddCard = () => setIsAddCardOpen(false);\n  const handleClick = () => setIsAddCardOpen(true);\n\n  const handleOpenMenu = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleCloseMenu = () => {\n    setAnchorEl(null);\n  };\n\n  const handleMoveCard = newColumn => {\n    handleCloseMenu();\n    moveCard(newColumn);\n  };\n  const handleDeleteCard = async () => {\n    try {\n      const response = await deleteCardById(id);\n      dispatch(deleteCard(response));\n    } catch (error) {\n      console.error('Error deleting card:', error);\n    }\n  };\n\n  // const handleUpdateCard = async () => {\n  //   try {\n  //     const updatedData = {\n  //       title,\n  //       description,\n  //       priority,\n  //       deadline,\n\n  //       /* об'єкт з оновленими даними картки */\n  //     };\n  //     const response = await updateCardById({ id, updatedData });\n  //     dispatch(setCardData(response));\n  //     handleClick();\n  //   } catch (error) {\n  //     console.error('Error updating card:', error);\n  //   }\n  // };\n\n  const date = new Date(`${deadline}`);\n  const formattedDate = format(date, 'dd/MM/yyyy');\n\n  const currentDate = new Date();\n  const formatteCurrentDate = format(currentDate, 'dd/MM/yyyy');\n  const isDeadlineToday = formattedDate === formatteCurrentDate;\n\n  return (\n    <CardStyles priority={priority}>\n      <CardContent sx={CardContentStyles}>\n        <Typography sx={TypographyStylesTitle} variant=\"h4\" component=\"div\">\n          {title}\n        </Typography>\n        <TruncatedText text={description} />\n      </CardContent>\n      <CardActions sx={CardActionsStyled}>\n        <Box sx={ActionsBox}>\n          <Typography sx={TypographyStylesPriority} variant=\"body2\">\n            Priority:\n            <Box sx={{ display: 'flex', gap: '4px', alignItems: 'center' }}>\n              <Circle priority={priority} />\n              <TypographyText variant=\"subText\">\n                {getPriorityText(priority)}\n              </TypographyText>\n            </Box>\n          </Typography>\n          <Typography sx={TypographyStylesPriority} variant=\"body2\">\n            Deadline:\n            <Box\n              sx={{\n                width: '14px',\n                height: '14px',\n                color: 'var(--primary-text-color)',\n                fontFamily: 'Poppins',\n                fontSize: '10px',\n                fontStyle: 'normal',\n                fontWeight: 400,\n                lineHeight: 'normal',\n                letterSpacing: '-0.2px',\n              }}\n            >\n              {' '}\n              {formattedDate}\n            </Box>\n          </Typography>\n        </Box>\n        <Box>\n          {isDeadlineToday && (\n            <StyledIconButton aria-label=\"deadline\">\n              <svg stroke=\"#BEDBB0\" width=\"16\" height=\"16\">\n                <use href={sprite + '#icon-bell'} />\n              </svg>\n            </StyledIconButton>\n          )}\n          <StyledIconButton onClick={handleOpenMenu} aria-label=\"next-colomn\">\n            <svg stroke=\"var(--cards-icon-color)\" width=\"16\" height=\"16\">\n              <use href={sprite + '#icon-active'} />\n            </svg>\n          </StyledIconButton>\n          <StyledIconButton\n            onClick={handleClick}\n            title={'Edit card'}\n            aria-label=\"edit\"\n          >\n            <svg stroke=\"var(--cards-icon-color)\" width=\"16\" height=\"16\">\n              <use href={sprite + '#icon-pencil'} />\n            </svg>\n          </StyledIconButton>\n          <AddCard\n            columnId={columnId}\n            cardId={id}\n            modalType={'Edit card'}\n            open={isAddCardOpen}\n            handleClose={closeAddCard}\n            close={closeAddCard}\n            titleValue={title}\n            descrValue={description}\n            priorityValue={priority}\n            deadlineValue={deadline}\n          />\n          <StyledIconButton onClick={handleDeleteCard} aria-label=\"remove\">\n            <svg stroke=\"var(--cards-icon-color)\" width=\"16\" height=\"16\">\n              <use href={sprite + '#icon-trash'} />\n            </svg>\n          </StyledIconButton>\n        </Box>\n      </CardActions>\n      <Menu\n        anchorEl={anchorEl}\n        open={Boolean(anchorEl)}\n        onClose={handleCloseMenu}\n        PaperProps={{\n          sx: {\n            backgroundColor: '#151515',\n            width: '135px',\n          },\n        }}\n      >\n        {/* List of columns to move the card */}\n        <ListMenuStyles onClick={() => handleMoveCard('Column 1')}>\n          {' '}\n          <Box> In progress </Box>\n          <Box>\n            {' '}\n            <svg stroke=\"var(--cards-icon-color)\" width=\"16\" height=\"16\">\n              <use href={sprite + '#icon-active'} />\n            </svg>\n          </Box>\n        </ListMenuStyles>\n        <ListMenuStyles onClick={() => handleMoveCard('Column 2')}>\n          <Box> Done </Box>\n          <Box>\n            {' '}\n            <svg stroke=\"var(--cards-icon-color)\" width=\"16\" height=\"16\">\n              <use href={sprite + '#icon-active'} />\n            </svg>\n          </Box>\n        </ListMenuStyles>\n      </Menu>\n    </CardStyles>\n  );\n}\n\nexport default TaskCard;\n","import { ButtonWithIcon } from '../Buttons/Button';\nimport styled from '@emotion/styled';\nimport { IconButton } from '@mui/material';\n\nexport const ColumnWrapper = styled.li`\n  display: flex;\n  flex-direction: column;\n  /* grid-template-rows: 56px auto 56px; */\n  align-items: left;\n  /* gap: 14px; */\n  width: 346px;\n  height: 100vh;\n  max-height: 100%;\n  padding-right: 12px;\n  padding-bottom: 14px;\n  margin-right: 14px;\n  margin-bottom: auto;\n\n  @media screen and (min-width: 1400px) {\n    max-height: 80vh;\n    margin-bottom: auto;\n  }\n`;\n\nexport const ColumnHeader = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  max-width: 334px;\n  height: 56px;\n  background-color: var(--secondary-bg-color);\n  color: var(--primary-text-color);\n  padding: 20px;\n  border-radius: 8px;\n  margin-bottom: 14px;\n`;\n\nexport const ColumnTitle = styled.h2`\n  display: flex;\n  font-family: 'Poppins';\n  font-weight: 600;\n  font-size: 14px;\n  margin: 0;\n`;\n\nexport const CardsList = styled.ul`\n  display: ${props => {\n    if (props.cols.length < 4) {\n      return `flex`;\n    }\n    return `grid`;\n  }};\n  flex-direction: column;\n  grid-template-rows: 155px;\n  width: 346px;\n  margin-bottom: 14px;\n  max-height: 60vh;\n  gap: 8px;\n  border-radius: 8px;\n  padding-right: 8px;\n  overflow-x: hidden;\n  overflow-y: ${props => {\n    if (props.cols.length < 4) {\n      return `hidden`;\n    }\n    return `scroll`;\n  }};\n  ::-webkit-scrollbar {\n    border-radius: 5px;\n    margin-left: 4px;\n    width: 8px;\n    background-color: var(--screen-page-scrollbar-bg-color);\n  }\n  ::-webkit-scrollbar-thumb {\n    background: var(--screen-page-scrollbar-thumb-color);\n    border-radius: 5px;\n  }\n  ::-webkit-scrollbar-thumb:hover {\n    background: var(--screen-page-scrollbar-thumb-color-HOVER);\n  }\n`;\n\nexport const StyledIconButton = styled(IconButton)`\n  width: 18px;\n  height: 18px;\n  padding: 0;\n  margin: 4px;\n  &:hover svg {\n    stroke: #bedbb0;\n    stroke-opacity: 1;\n    transition: stroke 0.3s;\n  }\n`;\n\nexport const AddCardButton = styled(ButtonWithIcon)`\n  width: 334px;\n`;\n","import React, { useState } from 'react';\nimport { API } from 'Services/API';\nimport sprite from '../../assets/images/sprite.svg';\nimport TaskCard from '../TaskCard/TaskCard';\nimport AddCard from '../AddCard/AddCard';\nimport {\n  AddCardButton,\n  CardsList,\n  ColumnHeader,\n  ColumnTitle,\n  ColumnWrapper,\n  StyledIconButton,\n} from './Column.styled';\nimport AddColumn from 'components/AddColumn/AddColumn';\nimport Loader from 'components/Loader';\n\nconst Column = ({ columnTitle, columnId, cards, columnData, isFetching }) => {\n  const [deleteColumn] = API.useDeleteColumnByIdMutation();\n\n  const [isAddCardOpen, setIsAddCardOpen] = useState(false);\n  const [isEditColumnOpen, setIsEditColumnOpen] = useState(false);\n\n  const closeAddCard = () => setIsAddCardOpen(false);\n  const handleClick = () => setIsAddCardOpen(true);\n\n  const openEditColumn = () => setIsEditColumnOpen(true);\n  const closeEditColumn = () => setIsEditColumnOpen(false);\n\n  const handleDeleteColumn = async () => {\n    try {\n      await deleteColumn({ columnId });\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  return (\n    <ColumnWrapper>\n      <ColumnHeader>\n        <ColumnTitle>{!isFetching ? columnTitle : (<Loader/>)}</ColumnTitle>\n        <div>\n          <StyledIconButton onClick={openEditColumn} aria-label=\"edit\">\n            <svg\n              stroke=\"var(--primary-text-color)\"\n              strokeOpacity=\"0.5\"\n              width=\"16\"\n              height=\"16\"\n            >\n              <use href={sprite + '#icon-pencil'} />\n            </svg>\n          </StyledIconButton>\n          <StyledIconButton onClick={handleDeleteColumn} aria-label=\"remove\">\n            <svg\n              stroke=\"var(--primary-text-color)\"\n              strokeOpacity=\"0.5\"\n              width=\"16\"\n              height=\"16\"\n            >\n              <use href={sprite + '#icon-trash'} />\n            </svg>\n          </StyledIconButton>\n        </div>\n      </ColumnHeader>\n      <CardsList cols={cards}>\n        {cards?.map(({ title, description, priority, deadline, _id: id }) => {\n          return (\n            <TaskCard\n              key={id}\n              title={title}\n              description={description}\n              priority={priority}\n              deadline={deadline}\n              id={id}\n            />\n          );\n        })}\n      </CardsList>\n\n      <AddCardButton onClick={handleClick} title={'Add card'} />\n\n      <AddCard\n        columnId={columnId}\n        modalType={'Add card'}\n        open={isAddCardOpen}\n        handleClose={closeAddCard}\n        close={closeAddCard}\n      />\n      <AddColumn\n        modalType={'Edit column'}\n        open={isEditColumnOpen}\n        columnId={columnId}\n        close={closeEditColumn}\n        titleValue={columnTitle}\n        column={columnData}\n      />\n    </ColumnWrapper>\n  );\n};\n\nexport default Column;\n","import styled from '@emotion/styled';\nimport { Field as FormicField } from 'formik';\n\nexport const Div = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: baseline;\n  margin-bottom: 2px;\n`;\nexport const FormPopup = styled.form`\n  background-color: var(--modal-bg-color);\n  height: 275px;\n  width: 200px;\n  border-radius: 8px;\n  padding: 24px;\n`;\n\nexport const Button = styled.button`\n  color: rgba(255, 255, 255, 0.5);\n  font-size: 12px;\n  font-weight: 400;\n  letter-spacing: -0.24px;\n  text-decoration-line: underline;\n\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n`;\nexport const LabelGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  justify-content: center;\n  /* align-items: baseline; */\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: center;\n  /* justify-content: center; */\n  gap: 8px;\n  cursor: pointer;\n  color: var(--secondary-text-color);\n  font-size: 12px;\n  font-weight: 400;\n  letter-spacing: -0.24px;\n  padding-top: 1px;\n  padding-bottom: 1px;\n`;\n\nexport const Field = styled(FormicField)`\n  width: 14px;\n  height: 14px;\n  background-color: transparent;\n\n  display: grid;\n  place-content: center;\n\n  ::after {\n    content: '';\n    left: 6.4%;\n    position: absolute;\n    transform: translate(6px, 1px);\n    width: 12px;\n    height: 12px;\n    border: 2.5px solid black;\n    border-radius: 50%;\n    opacity: 0;\n  }\n  ::before {\n    content: '';\n    width: 14px;\n    height: 14px;\n    border-radius: 50%;\n    transition: 120ms transform ease-in-out;\n    background-color: ${props => props.color};\n  }\n\n  :checked::after {\n    opacity: 1;\n  }\n`;\n\n// export const Field = styled.div`\n//   width: 14px;\n//   height: 14px;\n//   border-radius: 14px;\n//   position: absolute;\n//   top: 50%;\n//   left: 50%;\n//   transform: translate(-50%, -50%);\n\n//   background-color: ${props =>\n//     props.color === 'without' && 'rgb(128, 128, 128)'};\n//   background-color: ${props =>\n//     props.color === 'low' && 'rgba(143, 161, 208, 1)'};\n//   background-color: ${props =>\n//     props.color === 'medium' && 'rgba(224, 156, 181, 1)'};\n//   background-color: ${props =>\n//     props.color === 'high' && 'rgba(190, 219, 176, 1)'};\n\n//   transition: all 250ms linear;\n\n//   &.active {\n//     width: 6px;\n//     height: 6px;\n//   }\n// `;\n\nexport const RadioWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`;\n","import { Popper, Radio, Typography } from '@mui/material';\n// import ModalLayout from 'components/ModalLayout/ModalLayout';\nimport { Formik } from 'formik';\nimport { useState } from 'react';\nimport {\n  Button,\n  Div,\n  FormPopup,\n  Label,\n  LabelGroup,\n  RadioWrap,\n} from './Filter.styled';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/boards/boardsAPISlice';\n\nconst labelStyle = {\n  color: 'var(--primary-text-color)',\n  fontSize: '12px',\n  fontStyle: 'normal',\n  fontWeight: 500,\n  lineHeight: 'normal',\n  letterSpacing: -0.36,\n};\n\nconst titleStyle = {\n  color: 'var(--primary-text-color)',\n  fontSize: '14px',\n  fontFamily: 'Poppins',\n  fontWeight: '500',\n  wordWrap: 'break-word',\n  marginBottom: '14px',\n  paddingBottom: '14px',\n  borderBottom: '0.50px var(--border-filters) solid',\n};\n\nexport const Filter = ({ filter, open, onClose, anchorEl }) => {\n  const [currentPrority, setCurrentPrority] = useState('');\n  const [isShowAllActive, setIsShowAllActive] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const initialValues = {\n    currentPrority: '',\n  };\n\n  const controlProps = item => ({\n    checked: currentPrority === item,\n    onChange: handleChange,\n    value: item,\n  });\n  const handleChange = event => {\n    // const filter = event.target.value;\n    // filter(event.target.value);\n    dispatch(setFilter(event.target.value));\n    setCurrentPrority(event.target.value);\n    setIsShowAllActive(false);\n  };\n\n  const handleShowAll = () => {\n    setCurrentPrority('');\n    // dispatch(setFilterCards(''));\n    setIsShowAllActive(true);\n  };\n\n  const handleRadioClick = () => {\n    if (isShowAllActive) {\n      setIsShowAllActive(false);\n    }\n  };\n\n  return (\n    <Popper open={open} placement={'bottom-end'} anchorEl={anchorEl}>\n      <Formik initialValues={initialValues}>\n        <FormPopup onChange={handleChange}>\n          <Typography variant=\"h3\" sx={titleStyle}>\n            Filters\n          </Typography>\n          <LabelGroup role=\"group\" aria-labelledby=\"my-radio-group\">\n            <Div>\n              <Typography variant=\"h2\" sx={labelStyle}>\n                Label Color\n              </Typography>\n              <Button\n                type=\"button\"\n                onClick={handleShowAll}\n                disabled={isShowAllActive}\n              >\n                Show all\n              </Button>\n            </Div>\n            <RadioWrap>\n              <Label>\n                <Radio\n                  onClick={handleRadioClick}\n                  checked={currentPrority === '0'}\n                  name=\"currentPrority\"\n                  {...controlProps('0')}\n                  size=\"small\"\n                  sx={{ color: 'grey', '&.Mui-checked': { color: 'grey' } }}\n                />\n                Without priority\n              </Label>\n              <Label>\n                <Radio\n                  onClick={handleRadioClick}\n                  checked={currentPrority === '1'}\n                  name=\"currentPrority\"\n                  {...controlProps('1')}\n                  size=\"small\"\n                  sx={{\n                    color: '#8FA1D0',\n                    '&.Mui-checked': { color: '#8FA1D0' },\n                  }}\n                />\n                Low\n              </Label>\n              <Label>\n                <Radio\n                  onClick={handleRadioClick}\n                  checked={currentPrority === '2'}\n                  name=\"currentPrority\"\n                  {...controlProps('2')}\n                  size=\"small\"\n                  sx={{\n                    color: '#E09CB5',\n                    '&.Mui-checked': { color: '#E09CB5' },\n                  }}\n                />\n                Medium\n              </Label>\n\n              <Label>\n                <Radio\n                  onClick={handleRadioClick}\n                  checked={currentPrority === '3'}\n                  name=\"currentPrority\"\n                  {...controlProps('3')}\n                  size=\"small\"\n                  sx={{\n                    color: '#BEDBB0',\n                    '&.Mui-checked': { color: '#BEDBB0' },\n                  }}\n                />\n                High\n              </Label>\n            </RadioWrap>\n          </LabelGroup>\n        </FormPopup>\n      </Formik>\n    </Popper>\n  );\n};\n\n// export const Filter = ({ filter, open, onClose }) => {\n//   const [currentPrority, setCurrentPrority] = useState('');\n//   const [isShowAllActive, setIsShowAllActive] = useState(false);\n\n//   const dispatch = useDispatch();\n\n//   const initialValues = {\n//     currentPrority: '',\n//   };\n\n//   const controlProps = item => ({\n//     checked: currentPrority === item,\n//     onChange: handleChange,\n//     value: item,\n//   });\n//   const handleChange = event => {\n//     // const filter = event.target.value;\n//     // filter(event.target.value);\n//     dispatch(setFilter(event.target.value));\n//     setCurrentPrority(event.target.value);\n//     // dispatch(setFilterCards(filter));\n//     setIsShowAllActive(false);\n//   };\n\n//   const handleShowAll = () => {\n//     setCurrentPrority('');\n//     // dispatch(setFilterCards(''));\n//     setIsShowAllActive(true);\n//   };\n\n//   const handleRadioClick = () => {\n//     if (isShowAllActive) {\n//       setIsShowAllActive(false);\n//     }\n//   };\n//   console.log(currentPrority);\n\n//   return (\n//     <ModalLayout open={open} handleClose={onClose}>\n//       <Typography variant=\"h2\" sx={titleStyle}>\n//         Filters\n//       </Typography>\n//       <Formik initialValues={initialValues}>\n//         <Form onChange={handleChange}>\n//           <LabelGroup role=\"group\" aria-labelledby=\"my-radio-group\">\n//             <Div>\n//               <Typography variant=\"h2\" sx={labelStyle}>\n//                 Label Color\n//               </Typography>\n//               <Button\n//                 type=\"button\"\n//                 onClick={handleShowAll}\n//                 disabled={isShowAllActive}\n//               >\n//                 Show all\n//               </Button>\n//             </Div>\n//             <RadioWrap>\n//               <Label>\n//                 <Radio\n//                   onClick={handleRadioClick}\n//                   checked={currentPrority === '0'}\n//                   name=\"currentPrority\"\n//                   {...controlProps('0')}\n//                   size=\"small\"\n//                   sx={{ color: 'grey', '&.Mui-checked': { color: 'grey' } }}\n//                 />\n//                 Without priority\n//               </Label>\n//               <Label>\n//                 <Radio\n//                   onClick={handleRadioClick}\n//                   checked={currentPrority === '1'}\n//                   name=\"currentPrority\"\n//                   {...controlProps('1')}\n//                   size=\"small\"\n//                   sx={{\n//                     color: '#8FA1D0',\n//                     '&.Mui-checked': { color: '#8FA1D0' },\n//                   }}\n//                 />\n//                 Low\n//               </Label>\n//               <Label>\n//                 <Radio\n//                   onClick={handleRadioClick}\n//                   checked={currentPrority === '2'}\n//                   name=\"currentPrority\"\n//                   {...controlProps('2')}\n//                   size=\"small\"\n//                   sx={{\n//                     color: '#E09CB5',\n//                     '&.Mui-checked': { color: '#E09CB5' },\n//                   }}\n//                 />\n//                 Medium\n//               </Label>\n\n//               <Label>\n//                 <Radio\n//                   onClick={handleRadioClick}\n//                   checked={currentPrority === '3'}\n//                   name=\"currentPrority\"\n//                   {...controlProps('3')}\n//                   size=\"small\"\n//                   sx={{\n//                     color: '#BEDBB0',\n//                     '&.Mui-checked': { color: '#BEDBB0' },\n//                   }}\n//                 />\n//                 High\n//               </Label>\n//             </RadioWrap>\n//           </LabelGroup>\n//         </Form>\n//       </Formik>\n//     </ModalLayout>\n//   );\n// };\n","// import ModalLayout from 'components/ModalLayout/ModalLayout';\nimport sprite from '../../assets/images/sprite.svg';\nimport { useState } from 'react';\nimport { Filter } from './Filter';\n\nconst {\n  Container,\n  TitleDashBoard,\n  FilterButton,\n  TitleFilter,\n} = require('./HeaderDashboard.styled');\nexport const HeaderDashboard = ({ title, filter }) => {\n  const [isOpen, setIsOpen] = useState();\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const toggleModal = e => {\n    setIsOpen(!isOpen);\n    setAnchorEl(e.currentTarget);\n  };\n\n  return (\n    <Container>\n      <TitleDashBoard>{title}</TitleDashBoard>\n      <FilterButton onClick={toggleModal}>\n        <svg\n          aria-label=\"filter icon\"\n          width=\"16\"\n          height=\"16\"\n          stroke=\"var(--secondary-text-color)\"\n        >\n          <use href={sprite + '#icon-filter'}></use>\n        </svg>\n        <TitleFilter>Filters</TitleFilter>\n      </FilterButton>\n      {isOpen && (\n        <Filter\n          filter={filter}\n          open={isOpen}\n          onClose={toggleModal}\n          anchorEl={anchorEl}\n        />\n      )}\n    </Container>\n  );\n};\n","import styled from '@emotion/styled';\nimport { SIDEBARWIDTH } from 'components/Sidebar/SidebarCONSTANTS';\nimport bgData from './bg-data.json';\n\nexport const MainWrapper = styled.main`\n  min-height: 100%;\n  background-color: var(--primary-bg-color);\n  background-repeat: no-repeat;\n  background-size: cover;\n  padding-bottom: 18px;\n  @media screen and (min-width: 0px) {\n    min-height: 100vh;\n    @media (-webkit-min-device-pixel-ratio: 1) {\n      background-image: ${props => {\n        if (props.index === undefined) {\n          return 'none';\n        }\n        return `url(${bgData[2].mobile[0][props.index]})`;\n      }};\n    }\n    @media (-webkit-min-device-pixel-ratio: 2) {\n      background-image: ${props => {\n        if (props.index === undefined) {\n          return 'none';\n        }\n        return `url(${bgData[2].mobile[1][props.index]})`;\n      }};\n    }\n    @media (-webkit-min-device-pixel-ratio: 3) {\n      background-image: ${props => {\n        if (props.index === undefined) {\n          return 'none';\n        }\n        return `url(${bgData[2].mobile[2][props.index]})`;\n      }};\n    }\n  }\n\n  @media screen and (min-width: 1400px) {\n    height: 100vh;\n    @media (-webkit-min-device-pixel-ratio: 1) {\n      background-image: ${props => {\n        if (props.index === undefined) {\n          return 'none';\n        }\n        return `url(${bgData[0].desktop[0][props.index]})`;\n      }};\n    }\n    @media (-webkit-min-device-pixel-ratio: 2) {\n      background-image: ${props => {\n        if (props.index === undefined) {\n          return 'none';\n        }\n        return `url(${bgData[0].desktop[1][props.index]})`;\n      }};\n    }\n    @media (-webkit-min-device-pixel-ratio: 3) {\n      background-image: ${props => {\n        if (props.index === undefined) {\n          return 'none';\n        }\n        return `url(${bgData[0].desktop[2][props.index]})`;\n      }};\n    }\n  }\n\n  @media screen and (min-width: 767px) {\n    height: 100vh;\n    @media (-webkit-min-device-pixel-ratio: 1) {\n      background-image: ${props => {\n        if (props.index === undefined) {\n          return 'none';\n        }\n        return `url(${bgData[1].laptop[0][props.index]})`;\n      }};\n    }\n    @media (-webkit-min-device-pixel-ratio: 2) {\n      background-image: ${props => {\n        if (props.index === undefined) {\n          return 'none';\n        }\n        return `url(${bgData[1].laptop[1][props.index]})`;\n      }};\n    }\n    @media (-webkit-min-device-pixel-ratio: 3) {\n      background-image: ${props => {\n        if (props.index === undefined) {\n          return 'none';\n        }\n        return `url(${bgData[1].laptop[2][props.index]})`;\n      }};\n    }\n  }\n\n  @media screen and (min-width: 1400px) {\n    height: 100vh;\n    @media (-webkit-min-device-pixel-ratio: 1) {\n      background-image: ${props => {\n        if (props.index === undefined) {\n          return 'none';\n        }\n        return `url(${bgData[0].desktop[0][props.index]})`;\n      }};\n    }\n    @media (-webkit-min-device-pixel-ratio: 2) {\n      background-image: ${props => {\n        if (props.index === undefined) {\n          return 'none';\n        }\n        return `url(${bgData[0].desktop[1][props.index]})`;\n      }};\n    }\n    @media (-webkit-min-device-pixel-ratio: 3) {\n      background-image: ${props => {\n        if (props.index === undefined) {\n          return 'none';\n        }\n        return `url(${bgData[0].desktop[2][props.index]})`;\n      }};\n    }\n\n    background-repeat: no-repeat;\n    background-size: cover;\n  }\n`;\n\nexport const MainContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n\n  height: 100vh;\n  padding-top: 78px;\n  padding-left: 24px;\n  padding-right: 24px;\n  padding-bottom: 28px;\n  margin-bottom: 28px;\n  @media screen and (min-width: 0px) {\n    width: 100vw;\n    height: 100%;\n  }\n  @media screen and (min-width: 767px) {\n  }\n  @media screen and (min-width: 1400px) {\n    width: calc(100vw - ${SIDEBARWIDTH}px);\n  }\n`;\n\nexport const ColumnsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 34px;\n  align-items: top;\n  overflow: hidden;\n  margin-bottom: auto;\n  ::-webkit-scrollbar {\n    border-radius: 5px;\n    margin-left: 4px;\n    height: 8px;\n    background-color: var(--screen-page-scrollbar-bg-color);\n  }\n  ::-webkit-scrollbar-thumb {\n    background-color: var(--screen-page-scrollbar-thumb-color);\n    border-radius: 5px;\n  }\n  ::-webkit-scrollbar-thumb:hover {\n    background-color: var(--screen-page-scrollbar-thumb-color-HOVER);\n  }\n\n  @media screen and (min-width: 767px) {\n    display: grid;\n    margin-bottom: auto;\n    grid-template-columns: ${props => {\n      return `repeat(${props.cols}, 334px)`;\n    }};\n    overflow-x: ${props => {\n      if (props.cols > 3) {\n        return 'scroll';\n      }\n      return 'hidden';\n    }};\n  }\n\n  @media screen and (min-width: 1400px) {\n    display: grid;\n    margin-bottom: auto;\n\n    overflow-x: ${props => {\n      if (props.cols > 4) {\n        return 'scroll';\n      }\n      return 'hidden';\n    }};\n  }\n`;\n\nexport const screenSyles = {\n  pt: { 0: 9.25, 768: 11, 1440: 9.75 },\n  pb: { 0: 3, 768: 4, 1440: 1 },\n  pl: { 0: 2.5, 768: 4, 1440: 3 },\n  pr: { 0: 2.5, 768: 4, 1440: 3 },\n  height: '100vh',\n  width: { 0: '100vw', 1440: `calc(100vw - ${SIDEBARWIDTH}px)` },\n  flexGrow: 1,\n\n  backgroundColor: 'var(--primary-bg-color)',\n};\n","import React, { useEffect, useState } from 'react';\nimport { ButtonAdd } from 'components/Buttons/Button';\nimport AddColumn from 'components/AddColumn/AddColumn';\nimport Column from '../../components/Column/Column';\nimport { HeaderDashboard } from 'components/HeaderDashboard/HeaderDashboard';\nimport { API } from 'Services/API';\nimport { useParams } from 'react-router-dom';\nimport {\n  MainWrapper,\n  ColumnsWrapper,\n  MainContainer,\n} from './ScreenPage.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Loader from 'components/Loader';\n\nconst ScreensPage = () => {\n  const { boardId } = useParams();\n  const [filterValue, setFilterValue] = useState('');\n  const stateFilter = useSelector(state => state.boards.filter);\n  const dispatch = useDispatch();\n\n  const reqData = {\n    id: boardId,\n    filter: filterValue,\n  };\n  const [isAddColumnOpen, setIsAddColumnOpen] = useState(false);\n\n  const { currentData, data, isFetching } = API.useGetBoardContentByIdQuery(\n    reqData,\n    {\n      refetchOnMountOrArgChange: true,\n      // skip: false,\n    }\n  );\n\n  console.log('currentData :>> ', currentData);\n  console.log('data :>> ', data);\n\n\n  const openAddColumn = () => setIsAddColumnOpen(true);\n  const closeAddColumn = () => setIsAddColumnOpen(false);\n\n  useEffect(() => {\n    if (stateFilter === '0') {\n      setFilterValue('');\n    } else {\n      setFilterValue(stateFilter);\n    }\n  }, [dispatch, stateFilter]);\n\n  return (\n    <MainWrapper index={data?.background}>\n      <MainContainer>\n        <HeaderDashboard filter={setFilterValue} title={data?.title} />\n\n        <ColumnsWrapper cols={!data?.content ? 1 : data?.content?.length + 1}>\n          {!isFetching ? (\n            data?.content?.map(\n              ({ _id: columnId, title: columnTitle, cards }, index) => (\n                <Column\n                  isFetching={isFetching}\n                  key={columnId}\n                  columnData={data.content[index]}\n                  columnTitle={columnTitle}\n                  columnId={columnId}\n                  cards={cards}\n                />\n              )\n            )\n          ) : (\n            <Loader />\n          )}\n\n          <ButtonAdd onClick={openAddColumn}></ButtonAdd>\n        </ColumnsWrapper>\n        {isAddColumnOpen ? (\n          <AddColumn\n            modalType={'Add column'}\n            open={isAddColumnOpen}\n            boardId={boardId}\n            close={closeAddColumn}\n          />\n        ) : (\n          <></>\n        )}\n      </MainContainer>\n    </MainWrapper>\n  );\n};\n\nexport default ScreensPage;\n"],"names":["API","useRegisterMutation","useLogInMutation","useLogOutMutation","useUpdateAvatarMutation","useGetCurrentUserQuery","useHelpUserMutation","useThemeUserMutation","useUpdateUserMutation","useGetBoardsQuery","useGetBoardContentByIdQuery","useGetBoardByIdQuery","useAddBoardsMutation","useDeleteBoardByIdMutation","useUpdateBoardByIdMutation","useAddColumnMutation","useUpdateColumnByIdMutation","useDeleteColumnByIdMutation","useGetAllCardsQuery","useAddCardMutation","useUpdateCardByIdMutation","useDeleteCardByIdMutation","useUpdateCardColumnByIdMutation","useLoginGoogleUserMutation","Container","styled","_templateObject","_taggedTemplateLiteral","TitleDashBoard","_templateObject2","FilterButton","_templateObject3","TitleFilter","_templateObject4","FormStyled","MUI","display","flexDirection","gap","ButtonClose","InputStyled","TransparentSVG","UlStyled","UlBgStyled","_templateObject5","ImgStyled","_templateObject6","_templateObject7","LiIconsStyled","_templateObject8","modalStyles","position","top","left","transform","borderRadius","border","background","padding","fontFamily","titleStyles","color","fontSize","fontStyle","fontWeight","lineHeight","letterSpacing","marginBottom","_ref","title","open","handleClose","children","_jsx","_Fragment","Modal","onClose","_jsxs","Box","sx","Typography","variant","type","onClick","style","stroke","width","height","href","sprite","SIDEBARWIDTH","SIDEBARMOBILEWIDTH","TextareaStyled","SubWrapper","DateWrapper","DateText","SubTitle","_templateObject9","modalType","boardId","close","columnId","titleValue","_useState","useState","_useState2","_slicedToArray","columnTitle","setColumnTitle","_API$useAddColumnMuta","addColumn","_API$useUpdateColumnB","updateColumn","validationSchema","Yup","min","required","formikTitle","formik","useFormik","initialValues","onSubmit","handleSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","t0","console","log","message","abrupt","Notiflix","t1","handleReset","stop","_x","apply","arguments","ModalLayout","id","name","placeholder","onChange","handleChange","onBlur","handleBlur","value","values","ButtonWithIcon","ColorRadioButtons","onColorChange","_ref$value","_React$useState","React","_React$useState2","selectedValue","setSelectedValue","event","target","controlProps","item","checked","Radio","_objectSpread","DropDawnBtn","DropDownSVG","PopupStyles","backgroundColor","anchorEl","Popover","anchorOrigin","vertical","horizontal","transformOrigin","DateCalendarStyled","DateCalendar","DatePickerStyles","m","overflow","format","disablePast","showDaysOutsideCurrentMonth","success","_ref$cardId","cardId","_ref$titleValue","_ref$descrValue","descrValue","_ref$priorityValue","priorityValue","deadlineValue","date","setDate","_useState3","_useState4","dateValue","setDateValue","_useState5","toString","_useState6","setColor","_useState7","_useState8","setAnchorEl","_useState9","_useState10","isPopupOpen","setIsPopupOpen","_API$useAddCardMutati","addCards","_API$useUpdateCardByI","updateCard","handleSubmitForm","description","ISODate","cardData","_ISODate","_cardData","formatISO","representation","priority","deadline","status","data","_x2","trim","strict","cardInitialValues","_useFormik","_ref3","useEffect","currentDate","Date","dateISO","parseISO","DropDownIcon","e","currentTarget","disabled","Popup","DatePickerCmponent","dateFns","getPriorityColor","getPriorityText","TypographyStylesTitle","TypographyStylesPriority","justifyContent","lineHeigt","CardContentStyles","borderBottom","paddingBottom","ActionsBox","alignItems","CardActionsStyled","Circle","props","TypographyText","CardStyles","StyledIconButton","IconButton","ListMenuStyles","MenuItem","TextContainer","expanded","Text","ReadMore","ShowMoreButton","TruncatedText","text","setExpanded","moveCard","_API$useDeleteCardByI","deleteCardById","isAddCardOpen","setIsAddCardOpen","dispatch","useDispatch","closeAddCard","handleCloseMenu","handleMoveCard","newColumn","handleDeleteCard","response","sent","deleteCard","error","concat","formattedDate","isDeadlineToday","CardContent","component","CardActions","AddCard","Menu","Boolean","PaperProps","ColumnWrapper","ColumnHeader","ColumnTitle","CardsList","cols","length","AddCardButton","cards","columnData","isFetching","_API$useDeleteColumnB","deleteColumn","isEditColumnOpen","setIsEditColumnOpen","handleDeleteColumn","Loader","strokeOpacity","map","_id","TaskCard","AddColumn","column","Div","FormPopup","Button","LabelGroup","Label","RadioWrap","FormicField","labelStyle","titleStyle","wordWrap","Filter","filter","currentPrority","setCurrentPrority","isShowAllActive","setIsShowAllActive","setFilter","handleRadioClick","Popper","placement","Formik","role","size","_require","require","HeaderDashboard","isOpen","setIsOpen","toggleModal","MainWrapper","undefined","index","bgData","MainContainer","ColumnsWrapper","_data$content","_data$content2","useParams","filterValue","setFilterValue","stateFilter","useSelector","state","boards","reqData","isAddColumnOpen","setIsAddColumnOpen","_API$useGetBoardConte","refetchOnMountOrArgChange","currentData","content","Column","ButtonAdd"],"sourceRoot":""}