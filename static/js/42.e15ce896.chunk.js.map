{"version":3,"file":"static/js/42.e15ce896.chunk.js","mappings":"oLA0BaA,EAAM,CACjBC,oBAAAA,EAAAA,GACAC,iBAAAA,EAAAA,GACAC,kBAAAA,EAAAA,GACAC,wBAAAA,EAAAA,GACAC,uBAAAA,EAAAA,GACAC,oBAAAA,EAAAA,GACAC,qBAAAA,EAAAA,GACAC,sBAAAA,EAAAA,GACAC,kBAAAA,EAAAA,GACAC,4BAAAA,EAAAA,GACAC,qBAAAA,EAAAA,GACAC,qBAAAA,EAAAA,GACAC,2BAAAA,EAAAA,GACAC,2BAAAA,EAAAA,GACAC,qBAAAA,EAAAA,GACAC,4BAAAA,EAAAA,GACAC,4BAAAA,EAAAA,GACAC,oBAAAA,EAAAA,GACAC,mBAAAA,EAAAA,GACAC,0BAAAA,EAAAA,GACAC,0BAAAA,EAAAA,GACAC,gCAAAA,EAAAA,GACAC,2BAAAA,EAAAA,G,kHC9CIC,GAAgBC,EAAAA,EAAAA,IAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iKASzBC,GAAeH,EAAAA,EAAAA,IAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,qFAKjBG,GAAkBC,EAAAA,EAAAA,IAAO,MAAPA,CAAc,CAC3CC,KAAM,iCACNC,MAAO,OACPC,OAAQ,OAERC,UAAU,GAADC,OAAKZ,EAAa,gBAC3Ba,wBAAyB,SAGdC,GAAkBP,EAAAA,EAAAA,IAAO,MAAPA,EAAc,SAAAQ,GAAiB,MAAQ,CACpEC,QAAS,OACTC,eAAgB,gBAChBC,WAAY,SACZC,IAAK,MACLV,MAAO,QAEPW,UAAW,qBACXT,UAR4DI,EAAdM,eAQrB,GAAAT,OAAMR,EAAY,UAAW,OACtDS,wBAAyB,OAEzBS,kBAAmB,WACpB,IAEYC,GAAsBhB,EAAAA,EAAAA,IAAO,MAAPA,CAAc,CAC/CE,MAAO,OACPC,OAAQ,OACRM,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZM,gBAAiB,oCACjBC,aAAc,MACdC,SAAU,WAGCC,GAAkBpB,EAAAA,EAAAA,IAAO,IAAPA,CAAY,CACzCqB,OAAQ,MACRC,MAAO,oCACPC,WAAY,UACZC,SAAU,OACVC,WAAY,IACZC,cAAe,YAGJC,GAAoB3B,EAAAA,EAAAA,IAAO,MAAPA,CAAc,CAC7CS,QAAS,OACTC,eAAgB,gBAChBC,WAAY,SACZC,IAAK,SAGMgB,GAAwB5B,EAAAA,EAAAA,IAAO,MAAPA,CAAc,CACjDS,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZM,gBAAiB,UACjBC,aAAc,QAGHW,GAAoB7B,EAAAA,EAAAA,IAAO,MAAPA,CAAc,CAC7CC,KAAM,YAGK6B,GAAoB9B,EAAAA,EAAAA,IAAO,IAAPA,CAAY,CAC3CqB,OAAQ,MACRC,MAAO,UACPC,WAAY,UACZE,WAAY,IACZC,cAAe,Y,mBCxEJK,EAAc,SAAHvB,GAAgC,IAA1BwB,EAAExB,EAAFwB,GAAIlB,EAAcN,EAAdM,eAChC,OACEmB,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,MAAC7B,EAAe,CAACyB,GAAIA,EAAIlB,eAAgBA,EAAeqB,SAAA,EACtDF,EAAAA,EAAAA,KAACjB,EAAmB,CAAAmB,UAClBF,EAAAA,EAAAA,KAAClC,EAAe,CAAAoC,UACdF,EAAAA,EAAAA,KAAA,OAAKI,KAAMC,EAAAA,EAAS,8BAIxBL,EAAAA,EAAAA,KAACb,EAAe,CAAAe,SAAC,iBAIzB,EAEaI,EAAgB,SAAHC,GAAmB,IAAbC,EAAKD,EAALC,MAC9B,OACER,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,MAACT,EAAiB,CAACc,MAAOA,EAAOT,GAAI,CAAE9B,MAAO,CAAE,EAAG,IAAK,IAAK,MAAQiC,SAAA,EACnEF,EAAAA,EAAAA,KAACL,EAAqB,CACpBI,GAAI,CAAE9B,MAAO,CAAE,EAAG,GAAI,IAAK,IAAMC,OAAQ,CAAE,EAAG,GAAI,IAAK,KAAOgC,UAE9DF,EAAAA,EAAAA,KAACJ,EAAiB,CAChBG,GAAI,CAAE9B,MAAO,CAAE,EAAG,GAAI,IAAK,IAAMC,OAAQ,CAAE,EAAG,GAAI,IAAK,KAAOgC,UAE9DF,EAAAA,EAAAA,KAAA,OAAKI,KAAMC,EAAAA,EAAS,8BAIxBL,EAAAA,EAAAA,KAACH,EAAiB,CAChBE,GAAI,CACFR,SAAU,CAAE,EAAG,GAAI,IAAK,IACxBE,cAAe,CAAE,GAAI,KAAM,KAAM,MACjCS,SACH,iBAMT,C,uQClDaO,GAAaC,E,QAAAA,IAAI,OAAJA,CAAY,CACpClC,QAAS,OACTmC,cAAe,SACfhC,IAAK,SAGMiC,EAAc7C,EAAAA,EAAAA,OAAaL,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kcA0B3BkD,EAAc9C,EAAAA,EAAAA,MAAYF,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,uYAmB1BmD,EAAiB/C,EAAAA,EAAAA,IAAUgD,IAAAA,GAAApD,EAAAA,EAAAA,GAAA,6JAY3BqD,EAAWjD,EAAAA,EAAAA,GAASkD,IAAAA,GAAAtD,EAAAA,EAAAA,GAAA,uIAUpBuD,EAAanD,EAAAA,EAAAA,GAASoD,IAAAA,GAAAxD,EAAAA,EAAAA,GAAA,4JAyBtByD,GAdWrD,EAAAA,EAAAA,GAASsD,IAAAA,GAAA1D,EAAAA,EAAAA,GAAA,wMAcRI,EAAAA,EAAAA,IAAUuD,IAAAA,GAAA3D,EAAAA,EAAAA,GAAA,kHAQtB4D,EAAgBxD,EAAAA,EAAAA,GAASyD,IAAAA,GAAA7D,EAAAA,EAAAA,GAAA,0N,qFCvGhC8D,EAAc,CAClBC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNhD,UAAW,wBACXK,aAAc,EACd4C,OAAQ,sCACRC,WAAY,wBACZC,QAAS,EACTzC,WAAY,WAGR0C,EAAc,CAClB3C,MAAO,4BACPE,SAAU,OACV0C,UAAW,SACXzC,WAAY,IACZF,WAAY,UACZ4C,WAAY,SACZzC,eAAgB,IAChB0C,aAAc,GAgChB,IA7BoB,SAAH5D,GAAgD,IAA1C6D,EAAK7D,EAAL6D,MAAOC,EAAI9D,EAAJ8D,KAAMC,EAAW/D,EAAX+D,YAAapC,EAAQ3B,EAAR2B,SAC/C,OACEF,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAACuC,EAAAA,EAAK,CACJF,KAAMA,EACNG,QAASF,EACT,kBAAgB,cAChB,mBAAiB,oBAAmBpC,UAEpCC,EAAAA,EAAAA,MAACsC,EAAAA,EAAG,CAAC1C,GAAI0B,EAAYvB,SAAA,EACnBF,EAAAA,EAAAA,KAAC0C,EAAAA,EAAU,CAACC,QAAQ,KAAK5C,GAAIiC,EAAY9B,SACtCkC,KAEHpC,EAAAA,EAAAA,KAACY,EAAAA,GAAW,CAACgC,KAAK,SAASC,QAASP,EAAYpC,UAC9CF,EAAAA,EAAAA,KAAA,OACEQ,MAAO,CAAEsC,OAAQ,6BACjB7E,MAAM,KACNC,OAAO,KAAIgC,UAEXF,EAAAA,EAAAA,KAAA,OAAKI,KAAMC,EAAAA,EAAS,sBAGvBH,QAKX,C,8ECxDO,IAAM6C,EAAe,IACfC,EAAqB,G,kPCE5BpF,GAAeH,EAAAA,EAAAA,IAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qFAKxBsF,GAAcxF,EAAAA,EAAAA,IAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,oFAKvBuF,GAAczF,EAAAA,EAAAA,IAASsD,IAAAA,GAAApD,EAAAA,EAAAA,GAAA,qFAKvBwF,GAAiB1F,EAAAA,EAAAA,IAASwD,IAAAA,GAAAtD,EAAAA,EAAAA,GAAA,yMAenByF,GAAWrF,EAAAA,EAAAA,IAAO,IAAPA,EAAY,SAAAQ,GAAiB,MAAQ,CAC3DC,QAAS,eACTa,MAAO,sCACPC,WAAY,UACZC,SAAU,OACVC,WAAY,IACZC,cAAe,UAEftB,UARmDI,EAAdM,eAQZ,GAAAT,OAAM6E,EAAW,UAAW,OACrD5E,wBAAyB,OACzBS,kBAAmB,WACpB,IAEYuE,GAAkBtF,EAAAA,EAAAA,IAAO,MAAPA,CAAc,CAC3CuF,cAAe,OACfC,WAAY,OACZC,UAAW,wCACXC,aAAc,wCACdjF,QAAS,OACTC,eAAgB,gBAChBC,WAAY,SACZC,IAAK,QAGM+E,IAAc3F,EAAAA,EAAAA,IAAO,IAAPA,EAAY,SAAAwC,GAAiB,MAAQ,CAC9DnB,OAAQ,MACRC,MAAO,oCACPC,WAAY,UACZC,SAAU,OACVC,WAAY,IACZC,cAAe,UAEfb,UAAW,qBACXT,UATsDoC,EAAd1B,eASf,GAAAT,OAAMR,EAAY,UAAW,OACtDS,wBAAyB,OAEzBS,kBAAmB,WACpB,IAEY6E,IAAU5F,EAAAA,EAAAA,IAAO,MAAPA,CAAc,CACnCkB,aAAc,MACdT,QAAS,OACTmC,cAAe,SACflC,eAAgB,OAChBO,gBAAiB,oCACjBE,SAAU,WAGC0E,IAAQ7F,EAAAA,EAAAA,IAAO,MAAPA,EAAc,SAAA8F,GAAiB,MAAQ,CAC1D5F,MAAO,OACPC,OAAQ,OACRiE,aAAc,OAEdvD,UAAW,oBACXT,UANkD0F,EAAdhF,eAMX,GAAAT,OAAM8E,EAAW,UAAW,OACrD7E,wBAAyB,OAEzBS,kBAAmB,WACpB,IAEYgF,IAAW/F,EAAAA,EAAAA,IAAO,IAAPA,EAAY,SAAAgG,GAAiB,MAAQ,CAC3D3E,OAAQ,MACRC,MAAO,oCACPC,WAAY,UACZE,WAAY,IACZC,eAAgB,IAChB,SAAU,CACRJ,MAAO,qCAGTT,UAAW,qBACXT,UAXmD4F,EAAdlF,eAWZ,GAAAT,OAAMR,EAAY,UAAW,OACtDS,wBAAyB,OAEzBS,kBAAmB,WACpB,IAEYkF,IAAajG,EAAAA,EAAAA,IAAO,SAAPA,EAAiB,SAAAkG,GAAiB,MAAQ,CAClElC,QAAS,EACT9D,MAAO,OACPC,OAAQ,OACRM,QAAS,OACTG,IAAK,MACLF,eAAgB,gBAChBC,WAAY,SACZW,MAAO,oCACPL,gBAAiB,cACjBM,WAAY,UACZC,SAAU,OACVC,WAAY,IACZ0C,WAAY,IACZzC,cAAe,UACfoC,OAAQ,OACRqC,OAAQ,UACR,mBAAoB,CAClBC,eAAgB,YAChBC,QAAS,QAGXxF,UAAW,oBACXT,UAvB0D8F,EAAdpF,eAuBnB,GAAAT,OAAM6E,EAAW,UAAW,OACrD5E,wBAAyB,OACzBS,kBAAmB,WACpB,IAEYuF,IAAWtG,EAAAA,EAAAA,IAAO,MAAPA,EAAc,SAAAuG,GAAiB,MAAQ,CAC7DxB,OAAQ,oCACR7E,MAAO,OACPC,OAAQ,OAERC,UALqDmG,EAAdC,eAKd,GAAAnG,OAAM+E,EAAc,iBAAkB,OAE/D,mBAAoB,CAClBgB,eAAgB,YAChBC,QAAS,QAEZ,ICpJD,GAA4B,uC,mICEtBI,IAAc/G,EAAAA,EAAAA,IAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8EAKhB8G,IAAgB1G,EAAAA,EAAAA,IAAO,MAAPA,CAAc,CACzCwF,WAAY,OACZD,cAAe,OAEfrF,MAAO,OACPO,QAAS,OACTmC,cAAe,MACfhC,IAAK,MACLF,eAAgB,gBAChBC,WAAY,SAEZQ,SAAU,WAGCwF,IAAgB3G,EAAAA,EAAAA,IAAO,MAAPA,EAAc,SAAAQ,GAAgB,MAAM,CAC/DN,MAAO,OACPC,OAAQ,OACRM,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZoE,OAAQ,oCAER3E,UARyDI,EAAdgG,eAQlB,GAAAnG,OAAMoG,GAAW,iBAAkB,OAC7D,IAEYG,IAAuB5G,EAAAA,EAAAA,IAAO,MAAPA,CAAc,CAChDE,MAAO,OACPC,OAAQ,OACRM,QAAS,OACTC,eAAgB,SAChBC,WAAY,WAGDkG,IAAqB7G,EAAAA,EAAAA,IAAO,MAAPA,CAAc,CAC9CmB,SAAU,SACV2F,WAAY,WAGDC,IAAiB/G,EAAAA,EAAAA,IAAO,IAAPA,EAC5B,SAAAwC,GAA8C,IAA3CwE,EAAUxE,EAAVwE,WAAYC,EAAczE,EAAdyE,eAAgBC,EAAO1E,EAAP0E,QACvBC,GAAYzH,EAAAA,EAAAA,IAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,+FAEIqH,EAAiBD,GAGhD,MAAO,CACL3F,OAAQ,MACRC,MAAO,oCACPC,WAAY,UACZC,SAAU,OACV0C,UAAW,SACXzC,WAAY,MACZC,cAAe,UAEf0F,cAAeJ,GAAcC,GAAkBC,EAAUC,EAAY,OACrEE,kBAAkB,GAADhH,OAAkB,GAAb2G,EAAe,MACrC1G,wBAAyB,SACzBgH,wBAAyB,WACzBC,mBAAoB,YAExB,I,gCCzBF,GAzC0B,SAAH/G,GAAkC,IAA5B6D,EAAK7D,EAAL6D,MAAOmD,EAAahH,EAAbgH,cAC5BC,GAAaC,EAAAA,EAAAA,QAAO,MAwB1B,OAtBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,IAAIC,gBAAe,SAAAC,GAAY,IACnBC,EADkBC,GAAAC,EAAAA,GAAAA,GACzBH,GAAO,IAA3B,IAAAE,EAAAE,MAAAH,EAAAC,EAAAG,KAAAC,MAA6B,CAAC,IAAnBC,EAAKN,EAAAO,MACVD,EAAME,SAAWd,EAAWP,SAC9BM,EAAca,EAAMG,YAAYtI,MAEpC,CAAC,OAAAuI,GAAAT,EAAAU,EAAAD,EAAA,SAAAT,EAAAW,GAAA,CACH,IAEMC,EAAanB,EAAWP,QAM9B,OAJI0B,GACFhB,EAASiB,QAAQD,GAGZ,WACDA,GACFhB,EAASkB,UAAUF,EAEvB,CACF,GAAG,CAACpB,KAGFvF,EAAAA,GAAAA,KAAA,QACE8G,IAAKtB,EACLhF,MAAO,CACLkB,SAAU,WACVC,IAAK,UACLC,KAAM,UACNmF,WAAY,SACZlC,WAAY,UACZ3E,SAEDkC,GAGP,E,uHCzCa4E,GAAW,CACtB,gBACA,aACA,gBACA,eACA,kBACA,kBACA,eACA,iBAGWC,GAAQ,CACnB,2GACA,2GACA,2GACA,2GACA,2GACA,2GACA,2GACA,2GACA,2GACA,4GACA,4GACA,4GACA,4GACA,4GACA,6G,iCCEIC,GAAa,CACjB7H,MAAO,OACPE,SAAU,GACV0C,UAAW,SACXzC,WAAY,IACZ0C,WAAY,SACZzC,eAAgB,IAChBH,WAAY,WA+Od,GA7OmB,SAAHf,GAAkD,IAA5C4I,EAAK5I,EAAL4I,MAAOC,EAAU7I,EAAV6I,WAAY/E,EAAI9D,EAAJ8D,KAAMC,EAAW/D,EAAX+D,YACvC+E,GAAWC,EAAAA,GAAAA,MACXC,GAAgBC,EAAAA,GAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,OAAOH,aAAa,IAErEI,GAAoCC,EAAAA,EAAAA,WAAc,OAALT,QAAK,IAALA,OAAK,EAALA,EAAO/E,QAAS,IAAGyF,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzDI,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAChCI,GAA4BL,EAAAA,EAAAA,WAAc,OAALT,QAAK,IAALA,OAAK,EAALA,EAAOe,SAAUlB,GAAS,IAAGmB,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAA3DC,EAAMC,EAAA,GAAEC,EAASD,EAAA,GACxBE,GAAoCT,EAAAA,EAAAA,WAAc,OAALT,QAAK,IAALA,OAAK,EAALA,EAAOrF,aAAc,GAAEwG,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA7DvG,EAAUwG,EAAA,GAAEC,EAAaD,EAAA,GAEhCE,EAAmBxM,GAAAA,EAAAA,uBAAZyM,GAAsCX,EAAAA,EAAAA,GAAAU,EAAA,GAA9B,GACfE,EAAoB1M,GAAAA,EAAAA,6BAAb2M,GAA6Cb,EAAAA,EAAAA,GAAAY,EAAA,GAApC,GAEVE,GAAWC,EAAAA,GAAAA,MAEXC,EAAY,eAAAvI,GAAAwI,EAAAA,GAAAA,IAAAC,EAAAA,GAAAA,KAAAC,MAAG,SAAAC,EAAM9G,GAAK,IAAA+G,EAAAC,EAAAC,EAAAC,EAAA,OAAAN,EAAAA,GAAAA,KAAAO,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAM1B,GAN0BF,EAAAC,KAAA,EAEtBN,EAAW,CACf/G,MAAAA,EACAN,WAAAA,EACAoG,OAAAA,GAGiB,cAAfd,EAA0B,CAAAoC,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,EACLjB,EAASU,GAAU,KAAD,EAAnCC,EAAQI,EAAAG,KACdtC,GAASuC,EAAAA,GAAAA,IAAiBR,IACpBC,EAAaD,EAASS,KAAKC,IACjCzC,GAAS0C,EAAAA,GAAAA,IAAW,CAACC,QAAQX,KAC7BhC,GAAS4C,EAAAA,GAAAA,IAAiB,GAAD7L,QAAA8L,EAAAA,GAAAA,GAAK3C,GAAa,CAAE8B,MAC7CT,EAAS,SAADxK,OAAUiL,IAClBrB,EAAc,IACdI,EAAUpB,GAAS,IACnBuB,EAAc,GACd4B,GAAAA,OAAAA,QACE,2BACA,+CACA,MACA,WAEe,eAAf/C,EAA2B,CAAAoC,EAAAE,KAAA,YAE3BvC,EAAM/E,QAAU2F,GAChBZ,EAAMe,SAAWA,GACjBf,EAAMrF,aAAeA,EAAU,CAAA0H,EAAAE,KAAA,SAM7B,OAJFS,GAAAA,OAAAA,QACE,gCACA,sCACA,MACAX,EAAAY,OAAA,yBAAAZ,EAAAE,KAAA,GAImBf,EAAU,CAAEqB,QAAS7C,EAAM2C,IAAKX,SAAAA,IAAY,KAAD,GAA5DC,EAAQI,EAAAG,KACdtC,GAASuC,EAAAA,GAAAA,IAAiBR,IAC1Be,GAAAA,OAAAA,QACE,4BACA,6BACA,MACA,QAEJ7H,IAAckH,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAa,GAAAb,EAAA,SAEdW,GAAAA,OAAAA,QAAe,sBAAuB,6BAA8B,MAAM,QAE5EG,EAAOC,cAAc,yBAAAf,EAAAgB,OAAA,GAAAtB,EAAA,mBACtB,gBAnDiBuB,GAAA,OAAAlK,EAAAmK,MAAA,KAAAC,UAAA,KA0DZC,EAAmBC,GAAAA,GAAW,CAClCzI,MAAOyI,GAAAA,KACJC,IAAI,EAAG,+BACPC,IAAI,GAAI,gCACRC,SAAS,qBACTC,KACC,kBACA,8CACA,SAAU5E,GACR,OAAI,+BAAW4E,KAAK5E,KAClB6E,KAAAA,OAAAA,QACE,mDAGK,EAGX,IAEJC,YAAaN,GAAAA,OAGTP,GAASc,EAAAA,GAAAA,IAAU,CACvBC,cAAe,CAAEjJ,MAAO2F,GACxBuD,SAAU,SAAAzH,GAAA,IAAGzB,EAAKyB,EAALzB,MAAK,OAAO0G,EAAa1G,EAAM,EAC5CwI,iBAAAA,IAGF,OACE5K,EAAAA,GAAAA,KAAAC,GAAAA,SAAA,CAAAC,UACEF,EAAAA,GAAAA,KAACuL,GAAAA,EAAW,CAACnJ,MAAOgF,EAAY/E,KAAMA,EAAMC,YAAaA,EAAYpC,UACnEC,EAAAA,GAAAA,MAACM,GAAAA,GAAU,CACTV,GAAI,CAAE9B,MAAO,CAAE,EAAG,OAAQ,IAAK,QAAS,IAAK,UAC7CqN,SAAUhB,EAAOxB,aAAa5I,SAAA,EAE9BF,EAAAA,GAAAA,KAACa,GAAAA,GAAW,CACV2K,GAAG,QACHC,KAAK,QACLC,YAAa,QACbC,SA5CW,SAAAlF,GACnBuB,EAAcvB,EAAEmF,cAAcvF,OAC9BiE,EAAOuB,cAAc,QAASpF,EAAEmF,cAAcvF,MAChD,EA0CUyF,OAAQxB,EAAOyB,WACf1F,MAAO0B,KAET/H,EAAAA,GAAAA,KAAC0C,GAAAA,EAAU,CAACC,QAAQ,KAAK5C,GAAImH,GAAWhH,SAAC,WAGzCF,EAAAA,GAAAA,KAACgB,GAAAA,GAAQ,CAAAd,SACN8G,GAASgF,KAAI,SAAAC,GACZ,OACEjM,EAAAA,GAAAA,KAACuB,GAAAA,GAAa,CAEZsB,QAAS,kBAAMuF,EAAU6D,EAAK,EAC9BC,WAAYhE,IAAW+D,EAAK/L,UAE5BF,EAAAA,GAAAA,KAACc,GAAAA,GAAc,CAAAZ,UACbF,EAAAA,GAAAA,KAAA,OACEI,KAAMC,GAAAA,EAAS4L,EACfzL,MAAO,CACLsC,OACEoF,IAAW+D,EACP,UACA,2BACNE,WAAY,yBAZbF,EAkBX,OAGFjM,EAAAA,GAAAA,KAAC0C,GAAAA,EAAU,CAACC,QAAQ,KAAK5C,GAAImH,GAAWhH,SAAC,gBAGzCC,EAAAA,GAAAA,MAACe,GAAAA,GAAU,CAAAhB,SAAA,EACTF,EAAAA,GAAAA,KAAA,MAEE6C,QAAS,WACP0F,EAAc,EAChB,EAAErI,UAEFF,EAAAA,GAAAA,KAACyC,EAAAA,EAAG,CACF1C,GAAI,CACFb,SAAU,SACVV,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZT,MAAO,OACPC,OAAQ,OACRe,aAAc,MACd4C,OACE,IAAMC,EACF,oBACA,wBACN,mBAAoB,CAClBD,OAAQ,sBAEV3B,UAEFF,EAAAA,GAAAA,KAAA,OACEQ,MAAO,CACLhC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZT,MAAO,OACPC,OAAQ,OACRc,gBAAiB,UACjBC,aAAc,MACdiF,OAAQ,WACRhE,UAEFF,EAAAA,GAAAA,KAAA,OACEQ,MAAO,CACLvC,MAAO,OACPC,OAAQ,OACR4E,OAAQ,6BACR5C,UAEFF,EAAAA,GAAAA,KAAA,OAAKI,KAAMC,GAAAA,EAAS,oCA1CrB,GA+CN4G,GAAM+E,KAAI,SAACI,EAAIC,GACd,OACErM,EAAAA,GAAAA,KAAA,MAAoB6C,QAAS,kBAAM0F,EAAc8D,EAAQ,EAAE,EAACnM,UAC1DF,EAAAA,GAAAA,KAACyC,EAAAA,EAAG,CACF1C,GAAI,CACFb,SAAU,SACVV,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZT,MAAO,OACPC,OAAQ,OACRe,aAAc,MACd4C,OACEwK,EAAQ,IAAMvK,EACV,oBACA,wBACN,mBAAoB,CAClBD,OAAQ,sBAEV3B,UAEFF,EAAAA,GAAAA,KAACoB,GAAAA,GAAS,CAACkL,IAAKF,EAAIG,IAAI,0BAnBnBF,EAAQ,EAuBrB,QAGFrM,EAAAA,GAAAA,KAACwM,GAAAA,GAAc,CACbpK,MAAsB,cAAfgF,EAA6B,SAAW,OAC/CxE,KAAM,SACNC,QAAS,WACqB,KAAxByH,EAAOmC,OAAOrK,OAAiB2F,GACjCmD,KAAAA,OAAAA,QAAwB,gCAE5B,UAMZ,EC3QawB,GAAuB,SAAHnO,GAA2B,IAAtB0G,EAAO1G,EAAP0G,QAASiD,EAAM3J,EAAN2J,OAE3CP,GAA4CC,EAAAA,EAAAA,WAAS,GAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnDpD,EAAcsD,EAAA,GAAE8E,EAAiB9E,EAAA,GAgBxC,OAdAnC,EAAAA,EAAAA,YAAU,WACN,IAAMkH,EAAeC,KAAKC,MAAmB,KAAbD,KAAKE,UAAiC,IAChEC,EAAWC,aAAY,WAC3BN,GAAkB,GAClBO,YAAW,WACTP,GAAkB,EACpB,GAAG,IACL,GAAGC,GAEH,OAAO,WACLO,cAAcH,EAChB,CACF,GAAG,KAGDhN,EAAAA,GAAAA,KAAC0E,GAAa,CACdH,eAAgBA,EAChBxE,GAAI,CAAEqN,QAASnI,EAAU,EAAI,IAAM/E,UAEnCF,EAAAA,GAAAA,KAAA,OAAKI,KAAMC,GAAAA,EAAS6H,KAG5B,ECVamF,GAAmB,SAAH9O,GAA4B,IAAtB4I,EAAK5I,EAAL4I,MAAOlC,EAAO1G,EAAP0G,QAC3BuG,EAAsBrE,EAA3B2C,IAAS5B,EAAkBf,EAAlBe,OAAQ9F,EAAU+E,EAAV/E,MAEnBmF,GAAgBC,EAAAA,GAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,OAAOH,aAAa,IAE/DF,GAAWC,EAAAA,GAAAA,MAEXsB,GAAWC,EAAAA,GAAAA,MAEjBlB,GAAkCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1C2F,EAASzF,EAAA,GAAE0F,EAAY1F,EAAA,GAC9BI,GAAoCL,EAAAA,EAAAA,UAAS,GAAEO,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAAxClD,EAAUoD,EAAA,GAAE5C,EAAa4C,EAAA,GAChCE,GAA4CT,EAAAA,EAAAA,UAAS,KAAIU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAlDrD,EAAcsD,EAAA,GAAEkF,EAAiBlF,EAAA,GACxCmF,GAAsC7F,EAAAA,EAAAA,UAAS8F,OAAOC,YAAWC,GAAA9F,EAAAA,EAAAA,GAAA2F,EAAA,GAA1DI,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAClCG,GAAsCnG,EAAAA,EAAAA,WAAS,GAAMoG,GAAAlG,EAAAA,EAAAA,GAAAiG,EAAA,GAA9CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAElCG,EAAsBnS,GAAAA,EAAAA,6BAAfoS,GAA+CtG,EAAAA,EAAAA,GAAAqG,EAAA,GAApC,GAEZE,GAAeC,EAAAA,GAAAA,WAAS,WAC5BR,EAAeJ,OAAOC,WACxB,GAAG,MAEHjI,EAAAA,EAAAA,YAAU,WAER,OADAgI,OAAOa,iBAAiB,SAAUF,GAC3B,WACLX,OAAOc,oBAAoB,SAAUH,EACvC,CACF,GAAG,CAACA,KAEJ3I,EAAAA,EAAAA,YAAU,WAEN8H,EADEK,GAAe,IACC,GACTA,GAAe,IACN,IACK,IAC3B,GAAG,CAACA,EAAazL,IAEjB,IAAMqM,EAAmB,WAAH,OAASP,GAAgBD,EAAa,EA0B5D,OACE9N,EAAAA,GAAAA,MAAAF,GAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,GAAAA,KAAC0O,GAAiB,CAACtM,MAAOA,EAAOmD,cAAeA,KAEhDpF,EAAAA,GAAAA,MAACsE,GAAa,CACZkK,aAAc,kBAAMpB,GAAa,EAAK,EACtCqB,aAAc,kBAAMrB,GAAa,EAAM,EACvCxN,GAAI,CACF8O,GAAI,CAAE,EAAG,KAAM,IAAK,GACpBC,GAAI,CAAE,EAAG,KAAM,IAAK,GACpB9P,gBAAiBiG,EACb,6CACA,eACJ/E,SAAA,EAEFC,EAAAA,GAAAA,MAACsC,EAAAA,EAAG,CACF1C,GAAI,CACFvB,QAAS,OACTmC,cAAe,MACfhC,IAAK,CAAE,EAAG,GAAK,IAAK,GACpBD,WAAY,UACZwB,SAAA,EAEFF,EAAAA,GAAAA,KAAC0M,GAAoB,CAACzH,QAASA,EAASiD,OAAQA,KAEhDlI,EAAAA,GAAAA,KAAC4E,GAAkB,CACjB7E,GAAI,CACF9B,MAAOgH,EACH,CAAE,EAAG,GAAI,IAAK,qBAAsB,IAAK,IAAK,IAAK,KACnD,CAAE,EAAG,IAAK,IAAK,oBAAqB,IAAK,IAAK,IAAK,MACvD/E,UAEFF,EAAAA,GAAAA,KAAC8E,GAAc,CACb/E,GAAI,CAAEqN,QAASnI,EAAU,EAAI,IAC7BF,WAAYA,EACZC,eAAgBA,EAChBC,QAASA,EAAQ/E,SAEhBkC,SAKNkL,IACCtN,EAAAA,GAAAA,KAACyC,EAAAA,EAAG,CACF1C,GAAI,CACF2B,SAAU,WACVqN,MAAO,EACP9Q,MAAO,MACPC,OAAQ,OACRc,gBAAiB,2CACjBoO,QAAS,GACTnO,aAAc,qBAKnBgG,IACCjF,EAAAA,GAAAA,KAACyC,EAAAA,EAAG,CACF1C,GAAI,CACF2B,SAAU,WACVqN,MAAO,EACP9Q,MAAO,MACPC,OAAQ,OACRc,gBAAiB,2CACjBC,aAAc,qBAKnBgG,IACC9E,EAAAA,GAAAA,MAAC6O,GAAAA,EAAI,CACHC,gBAAc,EACdlP,GAAI,CACFvB,QAAS,OACTmC,cAAe,MACfhC,IAAK,EACLD,WAAY,SACZD,eAAgB,UAChByB,SAAA,EAEFF,EAAAA,GAAAA,KAACkP,GAAAA,GAAQ,CAACD,gBAAc,EAAA/O,UACtBF,EAAAA,GAAAA,KAACmP,GAAAA,EAAc,CACbpP,GAAI,CACFqP,EAAG,EACHC,EAAG,EACHC,cAAe,OACftQ,gBAAiB,cACjBoO,QAAS,GACTtK,OAAQ,oCACR,mBAAoB,CAClBsK,QAAS,EACTpO,gBAAiB,gBAGrB6D,QAvHU,SAAA0M,GACtBA,EAAMC,kBACNf,GACF,EAoHuCvO,UAEzBF,EAAAA,GAAAA,KAAC2E,GAAoB,CAAAzE,UACnBF,EAAAA,GAAAA,KAAA,OAAKI,KAAMC,GAAAA,EAAS,wBAK1BL,EAAAA,GAAAA,KAACkP,GAAAA,GAAQ,CAACD,gBAAc,EAAA/O,UACtBF,EAAAA,GAAAA,KAACmP,GAAAA,EAAc,CACbpP,GAAI,CACFqP,EAAG,EACHC,EAAG,EACHC,cAAe,OACftQ,gBAAiB,cACjBoO,QAAS,GACTtK,OAAQ,oCACR,mBAAoB,CAClBsK,QAAS,EACTpO,gBAAiB,gBAGrB6D,QAxIY,SAAA0M,GAGxB,GAFAA,EAAMC,mBAEW,OAAbjI,QAAa,IAAbA,OAAa,EAAbA,EAAekI,QAAS,EAAG,CAC7B,IAAMC,EAA6B,OAAbnI,QAAa,IAAbA,OAAa,EAAbA,EAAeoI,QAAO,SAAAC,GAAE,OAAIA,IAAOpE,CAAE,IAC3DnE,GAAS4C,EAAAA,GAAAA,IAAiByF,IAC1BrI,GAAS0C,EAAAA,GAAAA,IAAW,CAAEC,QAAS0F,EAAc,MAC7C9G,EAAS,SAADxK,OAAUsR,EAAc,IAClC,CAE8B,KAAb,OAAbnI,QAAa,IAAbA,OAAa,EAAbA,EAAekI,UACjBpI,GAAS4C,EAAAA,GAAAA,IAAiB,KAC1B5C,GAAS0C,EAAAA,GAAAA,IAAW,CAAEC,QAAS,MAC/BpB,EAAS,UAGXwF,EAAY5C,EACd,EAuHyCtL,UAE3BF,EAAAA,GAAAA,KAAC2E,GAAoB,CAAAzE,UACnBF,EAAAA,GAAAA,KAAA,OAAKI,KAAMC,GAAAA,EAAS,6BAQhCL,EAAAA,GAAAA,KAAC6P,GAAU,CACT1I,MAAOA,EACPC,WAAY,aACZ/E,KAAM4L,EACN3L,YAAamM,MAIrB,E,qCCxNaqB,GAAsB,SAAHvR,GAAgC,IAA1B2B,EAAQ3B,EAAR2B,SAAa6P,GAAKC,EAAAA,GAAAA,GAAAzR,EAAA0R,IACtDtI,GAA8BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAtCuI,EAAOrI,EAAA,GAAEsI,EAAUtI,EAAA,GAW1B,OATAnC,EAAAA,EAAAA,YAAU,WACR,IAAMvH,EAAYiS,uBAAsB,kBAAMD,GAAW,EAAK,IAE9D,OAAO,WACLE,qBAAqBlS,GACrBgS,GAAW,EACb,CACF,GAAG,IAEED,GAIElQ,EAAAA,GAAAA,KAACsQ,GAAAA,IAASC,EAAAA,GAAAA,IAAAA,EAAAA,GAAAA,GAAA,GAAKR,GAAK,IAAA7P,SAAGA,KAHrB,IAIX,ECRasQ,GAAmB,WAC9B,IAAMnJ,GAAWC,EAAAA,GAAAA,MACXsB,GAAWC,EAAAA,GAAAA,MAETgB,EAAS7N,GAAAA,EAAAA,oBAAT6N,KACRlC,GAAsCC,EAAAA,EAAAA,UAASiC,GAAQ,IAAGhC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnD8I,EAAW5I,EAAA,GAAE6I,EAAc7I,EAAA,GAE5BmC,GAAUxC,EAAAA,GAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,OAAOsC,OAAO,IACzD/B,GAA0CL,EAAAA,EAAAA,UAASoC,GAAW,IAAG7B,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAA1D0I,EAAaxI,EAAA,GAAEyI,EAAgBzI,EAAA,GAEhCZ,GAAgBC,EAAAA,GAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,OAAOH,aAAa,KAGrE7B,EAAAA,EAAAA,YAAU,WAQR,IAAImL,EACJ,IAP6B,KAAb,OAAbtJ,QAAa,IAAbA,OAAa,EAAbA,EAAekI,SAAoB,OAAJ5F,QAAI,IAAJA,GAAAA,EAAM4F,SACzB,OAAblI,QAAa,IAAbA,OAAa,EAAbA,EAAekI,WAAe,OAAJ5F,QAAI,IAAJA,OAAI,EAAJA,EAAM4F,UAEhCpI,GAAS4C,EAAAA,GAAAA,IAAqB,OAAJJ,QAAI,IAAJA,OAAI,EAAJA,EAAMmC,KAAI,SAAA4D,GAAE,OAAIA,EAAG9F,GAAG,MAIjC,OAAbvC,QAAa,IAAbA,GAAAA,EAAekI,QAAc,OAAJ5F,QAAI,IAAJA,GAAAA,EAAM4F,OAAQ,CACzCoB,EAAUtJ,EAAcyE,KAAI,SAAA4D,GAC1B,OAAO/F,EAAKiH,MAAK,SAAA3J,GAAK,OAAIA,EAAM2C,MAAQ8F,CAAE,GAC5C,IAEA,IAAMmB,EAAWlH,EAAK8F,QAAO,SAAAxI,GAC3B,OAAQI,EAAcyJ,SAAS7J,EAAM2C,IACvC,IAEY,OAARiH,QAAQ,IAARA,GAAAA,EAAUtB,SAAQoB,EAAO,GAAAzS,QAAA8L,EAAAA,GAAAA,GAAO6G,IAAQ7G,EAAAA,GAAAA,GAAK2G,IACnD,CAEAH,EAAeG,GAAWhH,GAC1B+G,EAAiB5G,EACnB,GAAG,CAACA,EAASzC,EAAesC,EAAMxC,IAwBlC,OACErH,EAAAA,GAAAA,KAAAC,GAAAA,SAAA,CAAAC,UACEF,EAAAA,GAAAA,KAACiR,GAAAA,GAAe,CAACC,UAvBG,SAAAC,GACtB,GAAKA,EAAOC,YAAZ,CAEA,IAAM1J,GAAMwC,EAAAA,GAAAA,GAAOuG,GAEnBY,EAAyB3J,EAAO4J,OAAOH,EAAOI,OAAOlF,MAAO,GAArDmF,GAAuD1J,EAAAA,EAAAA,GAAAuJ,EAAA,GAAzC,GAErB3J,EAAO4J,OAAOH,EAAOC,YAAY/E,MAAO,EAAGmF,GAE3C,IAAMC,EAAmB/J,EAAOsE,KAAI,SAAA7E,GAAK,OAAIA,EAAM2C,GAAG,IACtDzC,GAAS4C,EAAAA,GAAAA,IAAiBwH,IAE1Bf,EAAehJ,EAXgB,CAYjC,EAUgDxH,UAC1CF,EAAAA,GAAAA,KAACsQ,GAAS,CAACoB,YAAY,cAAaxR,SACjC,SAAAyR,GAAQ,OACPxR,EAAAA,GAAAA,MAAC6O,GAAAA,GAAIuB,EAAAA,GAAAA,IAAAA,EAAAA,GAAAA,GAAA,GACCoB,EAASC,gBAAc,IAC3B9K,IAAK6K,EAASE,SACd5C,gBAAc,EACdlP,GAAI,CACFvB,QAAS,OACTmC,cAAe,SACfhC,IAAK,GACLmT,GAAI,GACJ5R,SAAA,CAEU,OAAXuQ,QAAW,IAAXA,OAAW,EAAXA,EAAazE,KAAI,SAAC7E,EAAOkF,GAAK,OAC7BrM,EAAAA,GAAAA,KAAC+R,GAAAA,GAAS,CAERC,YAAa7K,EAAM2C,IAAImI,WACvB5F,MAAOA,EAAMnM,SAEZ,SAAAyR,GAAQ,OACP3R,EAAAA,GAAAA,KAACkP,GAAAA,IAAQqB,EAAAA,GAAAA,IAAAA,EAAAA,GAAAA,IAAAA,EAAAA,GAAAA,GAAA,GACHoB,EAASO,gBACTP,EAASQ,iBAAe,IAC5BrL,IAAK6K,EAASE,SACd5C,gBAAc,EAAA/O,UAEdF,EAAAA,GAAAA,KAACmP,GAAAA,EAAc,CACbpP,GAAI,CACFqP,EAAG,EACHC,EAAG,EAGH,mBAAoB,CAClBrQ,gBACE,+CAGN6D,QAAS,kBA9CL2I,EA8C6BrE,EAAM2C,IA7C3D8G,EAAiBpF,GACjBnE,GAAS0C,EAAAA,GAAAA,IAAW,CAAEC,QAASwB,UAC/B5C,EAAS,SAADxK,OAAUoN,IAHM,IAAAA,CA8CuC,EAACtL,UAE5CF,EAAAA,GAAAA,KAACqN,GAAgB,CACflG,MAAOA,EACPlC,QAAS0L,IAAkBxJ,EAAM2C,UAG5B,GA7BR3C,EAAM2C,IA+BD,IAEb6H,EAASjG,eACL,OAMnB,E,WChIa0G,GAAkBrU,GAAAA,EAAAA,OAAaL,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yZAoB/B0U,GAAatU,GAAAA,EAAAA,KAAWF,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,gMAUxB2U,GAAOvU,GAAAA,EAAAA,IAAUgD,IAAAA,GAAApD,EAAAA,EAAAA,GAAA,6I,sBCA9B,GA1BkB,WAChB,IAAM0J,GAAWC,EAAAA,GAAAA,MACjBiL,GAAiBpW,EAAAA,GAAAA,MAAVqW,GAA6B1K,EAAAA,EAAAA,GAAAyK,EAAA,GAAvB,GAEPE,EAAY,eAAAlU,GAAAwK,EAAAA,GAAAA,IAAAC,EAAAA,GAAAA,KAAAC,MAAG,SAAAC,IAAA,OAAAF,EAAAA,GAAAA,KAAAO,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEX8I,IAASE,SAAS,KAAD,EACvBrL,GAASsL,EAAAA,GAAAA,OACTtL,GAASuL,EAAAA,GAAAA,KAAc,IAAQpJ,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAa,GAAAb,EAAA,SAE/BnC,GAASwL,EAAAA,GAAAA,IAAQrJ,EAAAa,KAAS,yBAAAb,EAAAgB,OAAA,GAAAtB,EAAA,kBAE7B,kBARiB,OAAA3K,EAAAmM,MAAA,KAAAC,UAAA,KAUlB,OACE3K,EAAAA,GAAAA,KAAAC,GAAAA,SAAA,CAAAC,UACEC,EAAAA,GAAAA,MAACiS,GAAe,CAACvP,QAAS4P,EAAavS,SAAA,EACrCF,EAAAA,GAAAA,KAACsS,GAAI,CAACrU,MAAM,OAAOC,OAAO,OAAMgC,UAC9BF,EAAAA,GAAAA,KAAA,OAAKI,KAAI,GAAAhC,OAAKiC,GAAAA,EAAM,qBAEtBL,EAAAA,GAAAA,KAACqS,GAAU,CAAAnS,SAAC,gBAIpB,EC3BaO,IAAaC,EAAAA,EAAAA,IAAI,OAAJA,CAAY,CACpClC,QAAS,OACTmC,cAAe,SACfwB,aAAc,MACdjD,SAAU,WAGN4T,GAAW,u0BAsCJjS,GAAc9C,GAAAA,EAAAA,MAAYL,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kBACnCmV,IAISC,GAAiBhV,GAAAA,EAAAA,SAAeF,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,0DACzCmV,IC+CJ,ID1C6B/U,GAAAA,EAAAA,IAAUgD,IAAAA,GAAApD,EAAAA,EAAAA,GAAA,yCChDrB,SAAHY,GAAWA,EAAL6D,MAAgC,IAAzBC,EAAI9D,EAAJ8D,KAAMC,EAAW/D,EAAX+D,YAC1B+E,GAAWC,EAAAA,GAAAA,MACjB0L,EAAmBhX,GAAAA,EAAAA,sBAAZiX,GAAqCnL,EAAAA,EAAAA,GAAAkL,EAAA,GAA7B,GACTE,GAAQ1L,EAAAA,GAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAM0L,KAAKC,KAAKF,KAAK,IAClDpK,EAAY,eAAAvI,GAAAwI,EAAAA,GAAAA,IAAAC,EAAAA,GAAAA,KAAAC,MAAG,SAAAC,IAAA,OAAAF,EAAAA,GAAAA,KAAAO,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEMuJ,EAAS,CAC9BC,MAAO5I,EAAOmC,OAAOyG,MACrBG,QAAS/I,EAAOmC,OAAO4G,UACtB,KAAD,EAHY7J,EAAAG,OAKZrH,IAEA6H,GAAAA,OAAAA,QACE,0BACA,sJACA,OAGJG,EAAOgJ,YAAY9J,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAa,GAAAb,EAAA,SAEE,MAAjBA,EAAAa,GAAMkJ,OACRC,QAAQC,IAAI,gCAEZD,QAAQC,IAAI,qBAAsBjK,EAAAa,GAAMR,KAAK6J,SAC7CrM,GAASwL,EAAAA,GAAAA,IAAQrJ,EAAAa,MAClB,yBAAAb,EAAAgB,OAAA,GAAAtB,EAAA,kBAEJ,kBAxBiB,OAAA3I,EAAAmK,MAAA,KAAAC,UAAA,KA0BZC,EAAmBC,GAAAA,GAAW,CAClCqI,MAAOrI,GAAAA,KACJqI,MAAM,sCACNS,QACC,mDACA,sCAED3I,SAAS,qBACZqI,QAASxI,GAAAA,KAAaG,SAAS,yBAG3BV,GAASc,EAAAA,GAAAA,IAAU,CACvBC,cAAe,CAAE6H,MAAOA,EAAOG,QAAS,IACxC/H,SAAU,SAAAzH,GAAA,IAAGzB,EAAKyB,EAALzB,MAAK,OAAO0G,EAAa1G,EAAM,EAC5CwI,iBAAAA,IAGF,OADF4I,QAAQC,IAAInJ,EAAOmC,OAAOyG,QAEtBlT,EAAAA,GAAAA,KAAAC,GAAAA,SAAA,CAAAC,UACEF,EAAAA,GAAAA,KAACuL,GAAAA,EAAW,CAACnJ,MAAO,YAAaC,KAAMA,EAAMC,YAAaA,EAAYpC,UACpEC,EAAAA,GAAAA,MAACM,GAAU,CAACV,GAAI,CAAC9B,MAAO,CAAC,EAAG,OAAQ,IAAK,QAAS,IAAK,UAAWqN,SAAUhB,EAAOxB,aAAa5I,SAAA,EAC9FF,EAAAA,GAAAA,KAACa,GAAW,CACV2K,GAAG,QACHC,KAAK,QACLC,YAAY,gBACZC,SAAUrB,EAAOsJ,aACjB9H,OAAQxB,EAAOyB,WACf1F,MAAOiE,EAAOmC,OAAOyG,SAEvBlT,EAAAA,GAAAA,KAAC+S,GAAc,CACbvH,GAAG,UACHC,KAAK,UACLC,YAAY,UACZC,SAAUrB,EAAOsJ,aACjB9H,OAAQxB,EAAOyB,WACf1F,MAAOiE,EAAOmC,OAAO4G,WAGvBrT,EAAAA,GAAAA,KAAC6T,GAAAA,GAAiB,CAChBzR,MAAO,OACPQ,KAAM,SACN7C,GAAI,CAAE+T,UAAW,GAAIhS,WAAY,6BAChCe,QAAS,WACFyH,EAAOmC,OAAOyG,MAEkB,KAA1B5I,EAAOmC,OAAO4G,QACvBnI,KAAAA,OAAAA,QAAwB,mCACfN,EAAiBmJ,YAAY,CAAEb,MAAO5I,EAAOmC,OAAOyG,SAChEhI,KAAAA,OAAAA,QAAwB,sCAJrBA,KAAAA,OAAAA,QAAwB,gCAM7B,EAAEhL,SACH,eAOX,GC7Fa8T,GAAkB,WAC7B,IAAArM,GAA4CC,EAAAA,EAAAA,WAAS,GAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnDpD,EAAcsD,EAAA,GAAE8E,EAAiB9E,EAAA,GAexC,OAbAnC,EAAAA,EAAAA,YAAU,WACR,IAAMsH,EAAWC,aAAY,WAC3BN,GAAkB,GAClBO,YAAW,WACTP,GAAkB,EACpB,GAAG,IACL,GAAG,KAEH,OAAO,WACLQ,cAAcH,EAChB,CACF,GAAG,KAGDhN,EAAAA,GAAAA,KAACqE,GAAQ,CAACE,eAAgBA,EAAerE,UACvCF,EAAAA,GAAAA,KAAA,OAAKI,KAAMC,GAAAA,EAAS,gBAG1B,ECFa4T,GAAiB,SAAH1V,GAA4B,IAAtBM,EAAcN,EAAdM,eAC/B8I,GAAgDC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAxDuM,EAAgBrM,EAAA,GAAEsM,EAAmBtM,EAAA,GAC5CI,GAA8CL,EAAAA,EAAAA,WAAS,GAAMO,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAAtDmM,EAAejM,EAAA,GAAEkM,EAAkBlM,EAAA,GAEpCmM,EAAwB,WAAH,OAASH,GAAqBD,EAAkB,EACrEK,EAAuB,WAAH,OAASF,GAAoBD,EAAiB,EAExE,OACEjU,EAAAA,GAAAA,MAAAF,GAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,GAAAA,MAACsC,EAAAA,EAAG,CACF+R,UAAWC,GACX1U,GAAI,CACF2U,GAAI,EACJC,GAAI,EACJnW,QAAS,OACToW,SAAU,EACVjU,cAAe,SACflC,eAAgB,iBAChByB,SAAA,EAEFC,EAAAA,GAAAA,MAACsC,EAAAA,EAAG,CAAAvC,SAAA,EACFC,EAAAA,GAAAA,MAACsC,EAAAA,EAAG,CAAC1C,GAAI,CAAE8O,GAAI,CAAE,EAAG,KAAM,IAAK,GAAKC,GAAI,CAAE,EAAG,KAAM,IAAK,IAAM5O,SAAA,EAC5DF,EAAAA,GAAAA,KAACF,GAAAA,EAAW,CAACC,GAAI,CAAE+R,GAAI,KAAOjT,eAAgBA,KAE9CmB,EAAAA,GAAAA,KAACoD,EAAQ,CAACrD,GAAI,CAAE+R,GAAI,GAAKjT,eAAgBA,EAAeqB,SAAC,eAIzDC,EAAAA,GAAAA,MAACkD,EAAe,CAACtD,GAAI,CAAE+R,GAAI,GAAI5R,SAAA,EAC7BC,EAAAA,GAAAA,MAACuD,GAAW,CAAC7E,eAAgBA,EAAeqB,SAAA,CAAC,aAClCF,EAAAA,GAAAA,KAAA,SAAM,iBAEjBA,EAAAA,GAAAA,KAAC6U,GAAAA,GAAa,CAAChS,QAASyR,WAG5BtU,EAAAA,GAAAA,KAACwQ,GAAgB,QAGnBrQ,EAAAA,GAAAA,MAACsC,EAAAA,EAAG,CAAC1C,GAAI,CAAE8O,GAAI,CAAE,EAAG,KAAM,IAAK,GAAKC,GAAI,CAAE,EAAG,KAAM,IAAK,IAAM5O,SAAA,EAC5DC,EAAAA,GAAAA,MAACwD,GAAO,CAAC5D,GAAI,CAAEqP,EAAG,CAAE,EAAG,KAAM,IAAK,KAAO0C,GAAI,GAAI5R,SAAA,EAC/CF,EAAAA,GAAAA,KAAC4D,GAAK,CACJ0I,IAAKwI,GACLvI,IAAK,YACL1N,eAAgBA,KAElBsB,EAAAA,GAAAA,MAAC2D,GAAQ,CACPjF,eAAgBA,EAChBkB,GAAI,CACF+R,GAAI,KACJvS,SAAU,CAAE,EAAG,OAAQ,IAAK,QAC5B2C,WAAY,CAAE,EAAG,OAAQ,IAAK,SAC9BhC,SAAA,CACH,0BACuBF,EAAAA,GAAAA,KAAA,QAAAE,SAAM,YAAe,mFAG7CC,EAAAA,GAAAA,MAAC6D,GAAU,CACTpB,KAAK,SACL/D,eAAgBA,EAChBgE,QAAS0R,EAAqBrU,SAAA,EAE9BF,EAAAA,GAAAA,KAACgU,GAAe,IAAG,oBAIvBhU,EAAAA,GAAAA,KAAC+U,GAAS,WAId/U,EAAAA,GAAAA,KAAC6P,GAAU,CACTzI,WAAY,YACZ/E,KAAM6R,EACN5R,YAAagS,KAEftU,EAAAA,GAAAA,KAACgV,GAAS,CACR5S,MAAO,YACPC,KAAM+R,EACN9R,YAAaiS,MAIrB,ECrGaU,GAAU,SAAH1W,GAAsB,IAAbwR,EAAKmF,OAAAC,OAAA,KAAAC,EAAAA,EAAAA,GAAA7W,GAAAA,IACxBmP,EAAiDqC,EAAjDrC,OAAQ2H,EAAyCtF,EAAzCsF,gBAAiBC,EAAwBvF,EAAxBuF,oBAC3BC,OACOC,IAAX9H,EAAuB,kBAAMA,IAAS+H,SAASC,IAAI,OAAGF,EAExD,OACErV,EAAAA,GAAAA,MAACsC,EAAAA,EAAG,CACFkT,UAAU,MACV5V,GAAI,CAAE9B,MAAO,CAAE,KAAM8E,EAAAA,GAAgB6S,WAAY,CAAE,KAAM,IACzD,aAAW,kBAAiB1V,SAAA,EAE5BF,EAAAA,GAAAA,KAAC6V,EAAAA,GAAM,CACLN,UAAWA,EACX5S,QAAQ,YACRN,KAAMgT,EACN7S,QAAS8S,EACTQ,WAAY,CAAEC,aAAa,GAC3BC,UAAW,CACTC,SAAU,CACRzV,MAAO,CACLxB,gBAAiB,mCAIvBe,GAAI,CACFvB,QAAS,CAAE,EAAG,QAAS,KAAM,QAC7B,qBAAsB,CACpB0X,UAAW,aACXC,UAAW,OACXtU,OAAQ,OACR3C,SAAU,SACVjB,MAAO,CACL,EAAG,IACH,IAAK,OACL,IAAK+E,EAAAA,EACL,IAAKD,EAAAA,GAEP/D,gBAAiB,oCAEnBkB,UAEFF,EAAAA,GAAAA,KAACiU,GAAc,CAACpV,eAAgBwW,OAGlCrV,EAAAA,GAAAA,KAAC6V,EAAAA,GAAM,CACLlT,QAAQ,YACRN,MAAI,EACJtC,GAAI,CACFvB,QAAS,CAAE,EAAG,OAAQ,KAAM,SAC5B,qBAAsB,CACpB0X,UAAW,aACXC,UAAW,OACXtU,OAAQ,OACR3C,SAAU,SACVjB,MAAO8E,EAAAA,EACP/D,gBAAiB,oCAEnBkB,UAEFF,EAAAA,GAAAA,KAACiU,GAAc,CAACpV,gBAAgB,QAIxC,EClEauX,GAAkBrY,GAAAA,EAAAA,OAAaL,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,wXAoB/B0Y,GAAiBtY,GAAAA,EAAAA,IAAUF,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,yIAS3B2Y,GAAYvY,GAAAA,EAAAA,IAAUgD,IAAAA,GAAApD,EAAAA,EAAAA,GAAA,mfAuBtB4Y,GAAUxY,GAAAA,EAAAA,GAASkD,IAAAA,GAAAtD,EAAAA,EAAAA,GAAA,ueAwBnB6Y,GAAczY,GAAAA,EAAAA,OAAaoD,IAAAA,GAAAxD,EAAAA,EAAAA,GAAA,0HAI5B,SAAAY,GAAW,OAAAA,EAARkY,SAA2B,GAAK,SAAS,IAC7C,SAAAlW,GAAW,OAAAA,EAARmW,SACC,yBAA2B,6BAA6B,I,sBCjF1DC,GAAS,SAAHpY,GAAiC,IAA3B+W,EAAmB/W,EAAnB+W,oBACvB,OACEtV,EAAAA,GAAAA,KAAAC,GAAAA,SAAA,CAAAC,UACEF,EAAAA,GAAAA,KAAC4W,GAAAA,EAAU,CACTvX,MAAM,UACN,aAAW,uBACXwX,KAAK,QACLhU,QAASyS,EACTvV,GAAI,CAAE9B,MAAO,GAAIC,OAAQ,GAAIM,QAAS,CAAE,KAAM,QAC9C2N,WAAY,2CACZ,UAAW,CACT9M,MAAO,4BACPyC,WAAY,YACV5B,UAEJF,EAAAA,GAAAA,KAAC8W,GAAAA,EAAQ,OAIjB,E,wDClBaC,IAAYrW,EAAAA,EAAAA,IAAI,MAAJA,CAAW,CAClC1B,gBAAiB,yBACjBgY,WAAY,OACZC,YAAa,OACbhY,aAAc,QAGHiY,GAAWnZ,GAAAA,GAAAA,IAAUL,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0KASrBwZ,GAAgBpZ,GAAAA,GAAAA,IAAUF,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,gFAK1ByZ,GAAarZ,GAAAA,GAAAA,IAAUgD,IAAAA,GAAApD,EAAAA,EAAAA,GAAA,uHAOvB0Z,GAAatZ,GAAAA,GAAAA,IAAUkD,IAAAA,GAAAtD,EAAAA,EAAAA,GAAA,wHAOvB2Z,GAAMvZ,GAAAA,GAAAA,IAAUoD,IAAAA,GAAAxD,EAAAA,EAAAA,GAAA,wFAMhBiZ,GAAa7Y,GAAAA,GAAAA,OAAasD,IAAAA,GAAA1D,EAAAA,EAAAA,GAAA,mcAuB1B4Z,GAAWxZ,GAAAA,GAAAA,IAAUuD,IAAAA,GAAA3D,EAAAA,EAAAA,GAAA,mWAW9BiZ,GAIAA,IAMSY,IAAazZ,EAAAA,GAAAA,IAAO0Z,GAAAA,GAAP1Z,CAAYyD,IAAAA,GAAA7D,EAAAA,EAAAA,GAAA,2IASzB+Z,GAAQ3Z,GAAAA,GAAAA,MAAY4Z,IAAAA,GAAAha,EAAAA,EAAAA,GAAA,6CAIpBia,IAAc7Z,EAAAA,GAAAA,IAAO8Z,GAAAA,GAAP9Z,CAAa+Z,IAAAA,GAAAna,EAAAA,EAAAA,GAAA,oiBA4B3Boa,GAAOha,GAAAA,GAAAA,IAAUia,IAAAA,GAAAra,EAAAA,EAAAA,GAAA,oDAIjB2U,GAAOvU,GAAAA,GAAAA,IAAUka,IAAAA,GAAAta,EAAAA,EAAAA,GAAA,mHAOjBua,IAAUna,EAAAA,GAAAA,KAAO,SAAAQ,GAASA,EAAN4Z,OAAH,IAAcC,GAAIpI,EAAAA,GAAAA,GAAAzR,EAAA0R,IAAA,OAAOjQ,EAAAA,GAAAA,KAAA,UAAAuQ,EAAAA,GAAAA,GAAA,GAAY6H,GAAQ,GAApDra,CAAqDsa,IAAAA,GAAA1a,EAAAA,EAAAA,GAAA,6RAgBxE,SAAAoS,GAAK,OACLA,EAAMoI,SACNG,EAAAA,GAAAA,IAAGC,IAAAA,GAAA5a,EAAAA,EAAAA,GAAA,kGAKF,I,WCpKQ6a,GAAa,SAAA/Q,GAAK,OAAIA,EAAM0L,KAAKC,IAAK,EACtCqF,GAAmB,SAAAhR,GAAK,OAAIA,EAAM0L,KAAKuF,UAAW,EAI/CC,GAAe,SAAAlR,GAAK,OAAIA,EAAM0L,KAAKC,KAAKwF,SAAU,E,sBCiCrDC,GAAmB,SAAHta,GAAsC,IAAhC6D,EAAK7D,EAAL6D,MAAOC,EAAI9D,EAAJ8D,KAAMC,EAAW/D,EAAX+D,YAC9CqF,GAAwCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAhDmR,EAAYjR,EAAA,GAAEkR,EAAelR,EAAA,GAC9BmR,EAAiB,WACrBD,GAAiBD,EACnB,EAEAG,GAAsC7c,EAAAA,GAAAA,MAAyB8c,GAAApR,EAAAA,EAAAA,GAAAmR,EAAA,GAAxDE,EAAYD,EAAA,GAAIE,EAASF,EAAA,GAATE,UACvBC,GACE7c,EAAAA,GAAAA,MAAuB8c,GAAAxR,EAAAA,EAAAA,GAAAuR,EAAA,GADlBE,EAAUD,EAAA,GAAeE,EAAmBF,EAAA,GAA9BF,UAGf/R,GAAWC,EAAAA,GAAAA,MACXmS,GAAejS,EAAAA,GAAAA,IAAYmR,IAE3BvF,GAAO5L,EAAAA,GAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAM0L,KAAKC,IAAI,IAG3CsG,EAAkB,eAAAnZ,GAAAwI,EAAAA,GAAAA,IAAAC,EAAAA,GAAAA,KAAAC,MAAG,SAAAC,EAAMqG,GAAK,IAAAoK,EAAAC,EAAAC,EAAAzQ,EAAA0Q,EAAA,OAAA9Q,EAAAA,GAAAA,KAAAO,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACD,GAA7BiQ,EAAOpK,EAAMjJ,OAAOyT,MAAM,GAEtB,CAADvQ,EAAAE,KAAA,eAAAF,EAAAY,OAAA,iBAM0B,OAF7BwP,EAAW,IAAIzQ,UAEZ6Q,OAAO,YAAaL,GAAMnQ,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGVyP,EAAaS,GAAU,KAAD,EAAvCxQ,EAAQI,EAAAG,KAEG,QAAjBkQ,EAAIzQ,EAASS,YAAI,IAAAgQ,GAAbA,EAAejB,WACXkB,EAAe1Q,EAASS,KAAK+O,UAEnCvR,GAAS4S,EAAAA,GAAAA,IAAUH,IACnB3P,GAAAA,OAAAA,QAAe,aAAc,+BAAgC,SAG7DA,GAAAA,OAAAA,QAAe,SAAU,yBAA0B,QACpDX,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAa,GAAAb,EAAA,SAEDW,GAAAA,OAAAA,QAAe,SAAS,wBAAD/L,OAAAoL,EAAAa,IAAmC,QAAQ,yBAAAb,EAAAgB,OAAA,GAAAtB,EAAA,mBAGrE,gBA3BuBuB,GAAA,OAAAlK,EAAAmK,MAAA,KAAAC,UAAA,KA6BlB7B,EAAY,eAAAjF,GAAAkF,EAAAA,GAAAA,IAAAC,EAAAA,GAAAA,KAAAC,MAAG,SAAAiR,EAAMzN,GAAM,IAAA0N,EAAA/Q,EAAA,OAAAJ,EAAAA,GAAAA,KAAAO,MAAA,SAAA6Q,GAAA,cAAAA,EAAA3Q,KAAA2Q,EAAA1Q,MAAA,OAK9B,OAJKyQ,EAAgB,CACpB1O,KAAMgB,EAAOhB,KAAK4O,OAClBnH,MAAOzG,EAAOyG,MAAMmH,OACpBC,SAAU7N,EAAO6N,SAASD,QAC3BD,EAAA3Q,KAAA,EAAA2Q,EAAA1Q,KAAA,EAEwB6P,EAAWY,GAAe,KAAD,GAA1C/Q,EAAQgR,EAAAzQ,MAED4Q,MACXC,GAAAA,OAAAA,QAAe,8BAA+BpR,EAASmR,QAEvDlT,GAASoT,EAAAA,GAAAA,IAAQN,IAEjBhQ,GAAAA,OAAAA,QAAe,aAAc,wBAAyB,QACtD7H,KACD8X,EAAA1Q,KAAA,gBAAA0Q,EAAA3Q,KAAA,EAAA2Q,EAAA/P,GAAA+P,EAAA,SAEDI,GAAAA,OAAAA,QAAe,8BAA6BJ,EAAA/P,IAAS,yBAAA+P,EAAA5P,OAAA,GAAA0P,EAAA,kBAExD,gBApBiBQ,GAAA,OAAA7W,EAAA6G,MAAA,KAAAC,UAAA,KAsBlB,OACE3K,EAAAA,GAAAA,KAAAC,GAAAA,SAAA,CAAAC,UACEC,EAAAA,GAAAA,MAACoL,GAAAA,EAAW,CAACnJ,MAAOA,EAAOC,KAAMA,EAAMC,YAAaA,EAAYpC,SAAA,EAC5DkZ,GAAaI,KAAwBxZ,EAAAA,GAAAA,KAAC2a,GAAAA,EAAM,KAC9C3a,EAAAA,GAAAA,KAAC+W,GAAS,CAAChX,GAAI,CAAE9B,MAAO,CAAE,EAAG,OAAQ,IAAK,QAAS,IAAK,UAAYiC,UAClEC,EAAAA,GAAAA,MAAC+W,GAAQ,CAAAhX,SAAA,EACPF,EAAAA,GAAAA,KAACmX,GAAa,CAAAjX,UACZC,EAAAA,GAAAA,MAACiX,GAAU,CAAAlX,SAAA,CACRuZ,EAAazI,SAAS,aACrBhR,EAAAA,GAAAA,KAACqX,GAAU,CAAC,aAAW,eAAcnX,UACnCF,EAAAA,GAAAA,KAAA,OAAKI,KAAI,GAAAhC,OAAKwc,GAAAA,EAAM,mBAGtB5a,EAAAA,GAAAA,KAACsX,GAAG,CAAChL,IAAKmN,EAAclN,IAAI,kBAG9BpM,EAAAA,GAAAA,MAACyW,GAAU,CACT/T,QAAS,kBAAM4S,SAASoF,eAAe,aAAaC,OAAO,EAC3D,aAAW,aAAY5a,SAAA,EAEvBF,EAAAA,GAAAA,KAACuX,GAAQ,CAAArX,UACPF,EAAAA,GAAAA,KAAA,OAAKI,KAAI,GAAAhC,OAAKwc,GAAAA,EAAM,mBAEtB5a,EAAAA,GAAAA,KAAA,SACEwL,GAAG,YACHC,KAAK,YACL7I,KAAK,OACLmY,OAAO,UACPpP,SAAU+N,EACVlZ,MAAO,CAAEhC,QAAS,mBAM1BwB,EAAAA,GAAAA,KAACgb,GAAAA,GAAM,CACL3P,cAAe,CACbI,KAAK,GAADrN,OAAKgV,EAAK3H,MACdyH,MAAM,GAAD9U,OAAKgV,EAAKF,OACfoH,SAAU,IAEZ1P,iBAAkBA,GAAAA,EAClBU,SAAUxC,EAAa5I,SAEtB,SAAA6D,GAAA,IACC0I,EAAM1I,EAAN0I,OACAwO,EAAMlX,EAANkX,OACAC,EAAOnX,EAAPmX,QACAC,EAAKpX,EAALoX,MACApP,EAAUhI,EAAVgI,WACA6H,EAAY7P,EAAZ6P,aACAwH,EAAOrX,EAAPqX,QAAO,OAEPpb,EAAAA,GAAAA,KAAAC,GAAAA,SAAA,CAAAC,UACEC,EAAAA,GAAAA,MAACqX,GAAU,CAAAtX,SAAA,EACTC,EAAAA,GAAAA,MAACuX,GAAK,CAAC2D,QAAQ,OAAMnb,SAAA,EACnBF,EAAAA,GAAAA,KAAC4X,GAAW,CACV0D,aAAa,MACb9P,GAAG,OACHC,KAAK,OACL7I,KAAK,OACL8I,YAAY,kBACZrF,MAAOoG,EAAOhB,KACdK,OAAQC,EACRJ,SAAUiI,EACVxR,MAAOmZ,GAAAA,EAAAA,mBAERL,EAAQzP,MAAQwP,EAAOxP,MAAQ0P,IAC9Bnb,EAAAA,GAAAA,KAACwb,GAAAA,GAAY,CACX/P,KAAK,OACLgQ,OAAQ,SAAAC,GACNlB,GAAAA,OAAAA,QAAe,IAADpc,OAAKsd,GAAOC,GAAAA,EAC5B,QAKNxb,EAAAA,GAAAA,MAACuX,GAAK,CAAC2D,QAAQ,QAAOnb,SAAA,EACpBF,EAAAA,GAAAA,KAAC4X,GAAW,CACV0D,aAAa,MACb9P,GAAG,QACHC,KAAK,QACL7I,KAAK,QACL8I,YAAY,mBACZrF,MAAOoG,EAAOyG,MACdpH,OAAQC,EACRJ,SAAUiI,EACVxR,MAAOmZ,GAAAA,EAAAA,oBAERL,EAAQhI,OAAS+H,EAAO/H,OAASiI,IAChCnb,EAAAA,GAAAA,KAACwb,GAAAA,GAAY,CACX/P,KAAK,QACLgQ,OAAQ,SAAAC,GACNlB,GAAAA,OAAAA,QAAe,IAADpc,OAAKsd,GAAOC,GAAAA,EAC5B,QAKNxb,EAAAA,GAAAA,MAACuX,GAAK,CAAC2D,QAAQ,WAAUnb,SAAA,EACvBC,EAAAA,GAAAA,MAAC4X,GAAI,CAAA7X,SAAA,EACHF,EAAAA,GAAAA,KAAC4X,GAAW,CACV0D,aAAa,MACb9P,GAAG,WACHC,KAAK,WACL7I,KAAMkW,EAAe,OAAS,WAC9BpN,YAAY,oBACZrF,MAAOoG,EAAO6N,SACdxO,OAAQC,EACRJ,SAAUiI,EACVxR,MAAOmZ,GAAAA,EAAAA,mBAETvb,EAAAA,GAAAA,KAACkY,GAAO,CACNtV,KAAK,SACLC,QAASmW,EACTb,OAAQW,EACRtE,UAAWsE,EAAe,SAAW,GACrC,aAAW,6BAA4B5Y,UAEvCF,EAAAA,GAAAA,KAACsS,GAAI,CAAApS,UACHF,EAAAA,GAAAA,KAAA,OAAKI,KAAI,GAAAhC,OAAKwc,GAAAA,EAAM,sBAKzBM,EAAQZ,UAAUW,EAAOX,UAAYa,IACpCnb,EAAAA,GAAAA,KAACwb,GAAAA,GAAY,CACX/P,KAAK,WACLgQ,OAAQ,SAAAC,GACNlB,GAAAA,OAAAA,QAAe,IAADpc,OAAKsd,GAAOC,GAAAA,EAC5B,QAYN3b,EAAAA,GAAAA,KAAC6T,GAAAA,GAAiB,CAChBzR,MAAO,OACPQ,KAAM,SACN6T,UAAW2E,QAGd,aAQnB,ECnQaQ,GAAoB7d,GAAAA,EAAAA,IAAUL,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4PAY9Bke,GAAW9d,GAAAA,EAAAA,EAAQF,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,mHAQnBme,GAAc/d,GAAAA,EAAAA,IAAUgD,IAAAA,GAAApD,EAAAA,EAAAA,GAAA,oHAOxBoe,GAAYhe,GAAAA,EAAAA,IAAUkD,IAAAA,GAAAtD,EAAAA,EAAAA,GAAA,wECpBtBqe,GAAW,SAAHzd,GAAsC,IAAD0d,EAAA1d,EAA/BkN,KAAAA,OAAI,IAAAwQ,EAAG,OAAMA,EAAErD,EAASra,EAATqa,UACxCjR,GAAsCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA9CsG,EAAWpG,EAAA,GAAEqG,EAAcrG,EAAA,GAE5B4G,EAAmB,WAAH,OAASP,GAAgBD,EAAa,EAE5D,OACE9N,EAAAA,GAAAA,MAAAF,GAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,GAAAA,MAACyb,GAAiB,CAAC/Y,QAAS4L,EAAiBvO,SAAA,EAC3CF,EAAAA,GAAAA,KAAC6b,GAAQ,CAAA3b,SAAEuL,KACXzL,EAAAA,GAAAA,KAAA,OAAAE,SACG0Y,GACC5Y,EAAAA,GAAAA,KAAC+b,GAAS,CAACzP,IAAKsM,EAAWrM,IAAI,iBAE/BvM,EAAAA,GAAAA,KAAC8b,GAAW,UAKlB9b,EAAAA,GAAAA,KAAC6Y,GAAgB,CACfzW,MAAO,gBACPC,KAAM4L,EACN3L,YAAamM,MAIrB,ECnBayN,GAAS,SAAH3d,GAAiC,IAA3B+W,EAAmB/W,EAAnB+W,oBACvB6G,GAAmC3U,EAAAA,GAAAA,IAAYgR,IAAvCI,EAASuD,EAATvD,UAAWnN,EAAI0Q,EAAJ1Q,KAAM2Q,EAAKD,EAALC,MACzBzU,GAAgDC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAxD0U,EAAgBxU,EAAA,GAAEyU,EAAmBzU,EAAA,GAC5CI,GAA0CL,EAAAA,EAAAA,UAASwU,GAAMjU,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAAlDsU,EAAapU,EAAA,GAAEqU,EAAgBrU,EAAA,GACtCsU,EAAoBzgB,GAAAA,EAAAA,uBAAb0gB,GAAuC5U,EAAAA,EAAAA,GAAA2U,EAAA,GAA9B,GAOVE,EAAiB,WACrBL,GAAoB,EACtB,EAEMM,EAAiB,eAAArc,GAAAwI,EAAAA,GAAAA,IAAAC,EAAAA,GAAAA,KAAAC,MAAG,SAAAC,EAAOzC,GAAC,OAAAuC,EAAAA,GAAAA,KAAAO,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACC,OAAjC8S,EAAiB/V,EAAEH,OAAOD,OAAOmD,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEzBgT,EAAU,CAACN,MAAO3V,EAAEH,OAAOD,QAAQ,KAAD,EACxCsW,IAAiBnT,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAa,GAAAb,EAAA,SAEjBgK,QAAQ+G,MAAM,wBAAuB/Q,EAAAa,IAAS,QAC9C,yBAAAb,EAAAgB,OAAA,GAAAtB,EAAA,kBACH,gBARsBuB,GAAA,OAAAlK,EAAAmK,MAAA,KAAAC,UAAA,KAuCvB,OA5BAjF,EAAAA,EAAAA,YAAU,WAER,OADA+P,SAASC,KAAKmH,UAAUC,IAAIP,GACrB,WACL9G,SAASC,KAAKmH,UAAUE,OAAOR,EACjC,CACF,GAAG,CAACA,KAEJ7W,EAAAA,EAAAA,YAAU,WACR,IAAMsX,EAAoB,SAAAzN,GACM,WAA1BA,EAAMjJ,OAAO2W,UACfN,GAEJ,EAEMO,EAAgB,SAAA3N,GACF,WAAdA,EAAM4N,KACRR,GAEJ,EAIA,OAFAjP,OAAOa,iBAAiB,YAAayO,GACrCtP,OAAOa,iBAAiB,UAAW2O,GAC5B,WACLxP,OAAOc,oBAAoB,YAAawO,GACxCtP,OAAOc,oBAAoB,UAAW0O,EACxC,CACF,GAAG,CAACb,KAGFlc,EAAAA,GAAAA,MAACiW,GAAe,CAAAlW,SAAA,EACdF,EAAAA,GAAAA,KAAC2W,GAAM,CAACrB,oBAAqBA,KAC7BnV,EAAAA,GAAAA,MAACkW,GAAc,CAAAnW,SAAA,EACbC,EAAAA,GAAAA,MAACmW,GAAS,CAACzT,QAnDO,WACtByZ,GAAqBD,EACvB,EAiD0Cnc,SAAA,EAClCF,EAAAA,GAAAA,KAAA,KAAAE,SAAG,WACHF,EAAAA,GAAAA,KAAA,OAAK/B,MAAM,OAAOC,OAAO,OAAMgC,UAC7BF,EAAAA,GAAAA,KAAA,OAAKI,KAAMC,GAAAA,EAAS,0BAGxBL,EAAAA,GAAAA,KAACuW,GAAO,CAAC/B,UAAW6H,EAAmB,UAAY,GAAGnc,SA3D1C,CAAC,QAAS,OAAQ,UA4DjB8L,KAAI,SAAAoQ,GAAK,OAClBpc,EAAAA,GAAAA,KAAA,MAAAE,UACEF,EAAAA,GAAAA,KAACwW,GAAW,CACVE,SAAU6F,IAAkBH,EAC5B3F,SAAU8F,IAAkBH,EAC5B/V,MAAO+V,EACPvZ,QAAS+Z,EAAkB1c,SAE1Bkc,KAPIA,EASJ,UAIXpc,EAAAA,GAAAA,KAACgc,GAAQ,CAACvQ,KAAMA,EAAMmN,UAAWA,MAGvC,E,WC5FawE,GAAoB,WAC/B,IAAAzV,GAAgDC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAxDuM,EAAgBrM,EAAA,GAAEsM,EAAmBtM,EAAA,GACtCyM,EAAwB,WAAH,OAASH,GAAqBD,EAAkB,EAC3E,OACE/T,EAAAA,GAAAA,MAAAF,GAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,GAAAA,KAACyC,EAAAA,EAAG,CACF1C,GAAI,CACFvB,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZgW,GAAI,CAAE,EAAG,KAAM,IAAK,GAAI,KAAM,MAC9BC,GAAI,CAAE,EAAG,EAAG,IAAK,EAAG,KAAM,GAC1B9F,GAAI,CAAE,EAAG,IAAK,IAAK,EAAG,KAAM,GAC5BC,GAAI,CAAE,EAAG,IAAK,IAAK,EAAG,KAAM,GAC5B5Q,OAAQ,QACRD,MAAO,CAAE,EAAG,QAAS,KAAK,gBAADG,OAAkB2E,EAAAA,EAAY,QACvD6R,SAAU,EACV5V,gBAAiB,2BACjBkB,UAEFF,EAAAA,GAAAA,KAACyC,EAAAA,EAAG,CAAC1C,GAAI,CAAE9B,MAAO,SAAUiC,UAC1BC,EAAAA,GAAAA,MAACuC,GAAAA,EAAU,CACT3C,GAAI,CACFgC,QAAS,EACT3C,OAAQ,EACRC,MAAO,8BACPge,UAAW,SACX/d,WAAY,UACZC,SAAU,CAAE,EAAG,OAAQ,IAAK,QAC5B0C,UAAW,SACXzC,WAAY,IACZ0C,WAAY,CAAE,EAAG,OAAQ,IAAK,QAC9BzC,cAAe,CAAE,EAAG,UAAW,IAAK,YACpCS,SAAA,CACH,gDAC+C,KAC9CF,EAAAA,GAAAA,KAACsd,GAAAA,EAAM,CACLza,QAASyR,EACT1R,KAAK,SACL7C,GAAI,CACFwd,cAAe,WACfxb,QAAS,EACT3C,OAAQ,EACRC,MAAO,wCACPL,gBAAiB,cACjBM,WAAY,UACZuC,OAAQ,OACRqC,OAAQ,UACRC,eAAgB,OAChBC,QAAS,OACToZ,cAAe,YACfje,SAAU,CAAE,EAAG,OAAQ,IAAK,QAE5B,mBAAoB,CAClB4E,eAAgB,YAChBnF,gBAAiB,gBAEnBkB,SACH,sBAES,IAAI,8LAQpBF,EAAAA,GAAAA,KAAC6P,GAAU,CACTzI,WAAY,YACZ/E,KAAM6R,EACN5R,YAAagS,MAIrB,EClCA,GAlCiB,WACf,IAAMmJ,GAAYjW,EAAAA,GAAAA,IAAYiR,IAC9B9Q,GAA8CC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAtD0N,EAAexN,EAAA,GAAE6V,EAAkB7V,EAAA,GACpCyN,EAAsB,WAAH,OAASoI,GAAoBrI,EAAiB,EAEzD3N,EAAW1L,GAAAA,EAAAA,oBAAjB6N,KAER,OACE4T,IACEtd,EAAAA,GAAAA,MAACsC,EAAAA,EAAG,CAAC1C,GAAI,CAAEvB,QAAS,OAAQmf,UAAW,UAAWzd,SAAA,EAChDF,EAAAA,GAAAA,KAAC4d,EAAAA,EAAM,CACLlc,SAAS,QACT3B,GAAI,CACF9B,MAAO,CAAE,KAAK,eAADG,OAAiB2E,EAAAA,EAAY,QAC1C7E,OAAQ,CAAE,IAAK,IACf2f,GAAI,CAAE,KAAK,GAADzf,OAAK2E,EAAAA,EAAY,OAC3BoT,UAAW,OACXnX,gBAAiB,WACjBkB,UAEFF,EAAAA,GAAAA,KAACkc,GAAM,CAAC5G,oBAAqBA,OAG/BtV,EAAAA,GAAAA,KAACiV,GAAO,CACNI,gBAAiBA,EACjBC,oBAAqBA,IAGH,KAAb,OAAN5N,QAAM,IAANA,OAAM,EAANA,EAAQ+H,SAAezP,EAAAA,GAAAA,KAACod,GAAiB,KAAMpd,EAAAA,GAAAA,KAAC8d,GAAAA,GAAM,MAI/D,C","sources":["Services/API.js","components/Logo/Logo-styled.jsx","components/Logo/Logo.jsx","components/ModalBoard/ModalBoard.styled.jsx","components/ModalLayout/ModalLayout.jsx","components/Sidebar/SidebarCONSTANTS.js","components/Sidebar/SidebarContent-styled.jsx","webpack://react-homework-template/./src/components/Sidebar/SidebarCustomScroll.module.css?4eb1","components/Sidebar/SidebarBoardItem-styled.jsx","components/Sidebar/MeasureTitleWidth.jsx","components/ModalBoard/data.jsx","components/ModalBoard/ModalBoard.jsx","components/Sidebar/SidebarBoardItemIcon.jsx","components/Sidebar/SidebarBoardItem.jsx","helpers/StrictModeDroppable.js","components/Sidebar/SidebarBoardList.jsx","components/logoutBtn/logoutBtn.styled.jsx","components/logoutBtn/logoutBtn.jsx","components/ModalHelp/ModalHelp.styled.js","components/ModalHelp/ModalHelp.js","components/Sidebar/SidebarHelpIcon.jsx","components/Sidebar/SidebarContent.jsx","components/Sidebar/Sidebar.jsx","components/Header/Header.styled.js","components/Header/NavBtn/NavBtn.jsx","components/ModalEditProfile/ModalEditProfile.styled.jsx","redux/auth/authSelectors.js","components/ModalEditProfile/ModalEditProfile.jsx","components/Header/UserInfo/UserInfo.styled.js","components/Header/UserInfo/UserInfo.jsx","components/Header/Header.jsx","pages/ScreensPage/DefaultScreenPage.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["import {\n  useRegisterMutation,\n  useLogInMutation,\n  useLogOutMutation,\n  useGetCurrentUserQuery,\n  useUpdateUserMutation,\n  useThemeUserMutation,\n  useUpdateAvatarMutation,\n  useHelpUserMutation,\n  useGetBoardsQuery,\n  useGetBoardContentByIdQuery,\n  useGetBoardByIdQuery,\n  useAddBoardsMutation,\n  useDeleteBoardByIdMutation,\n  useUpdateBoardByIdMutation,\n  useAddColumnMutation,\n  useUpdateColumnByIdMutation,\n  useDeleteColumnByIdMutation,\n  useGetAllCardsQuery,\n  useAddCardMutation,\n  useUpdateCardByIdMutation,\n  useDeleteCardByIdMutation,\n  useUpdateCardColumnByIdMutation,\n  useLoginGoogleUserMutation\n} from './API_Component';\n\nexport const API = {\n  useRegisterMutation,\n  useLogInMutation,\n  useLogOutMutation,\n  useUpdateAvatarMutation,\n  useGetCurrentUserQuery,\n  useHelpUserMutation,\n  useThemeUserMutation,\n  useUpdateUserMutation,\n  useGetBoardsQuery,\n  useGetBoardContentByIdQuery,\n  useGetBoardByIdQuery,\n  useAddBoardsMutation,\n  useDeleteBoardByIdMutation,\n  useUpdateBoardByIdMutation,\n  useAddColumnMutation,\n  useUpdateColumnByIdMutation,\n  useDeleteColumnByIdMutation,\n  useGetAllCardsQuery,\n  useAddCardMutation,\n  useUpdateCardByIdMutation,\n  useDeleteCardByIdMutation,\n  useUpdateCardColumnByIdMutation,\n  useLoginGoogleUserMutation\n};\n","import { styled } from '@mui/material/styles';\nimport { keyframes } from '@mui/system';\n\nconst slideLigtning = keyframes`\n  0% {transform: translateY(-25px)}\n\n  20% {transform: translateY(0px)}\n  80% {transform: translateY(0px)}\n\n  100% {transform: translateY(25px)}\n`;\n\nconst slideToRight = keyframes`\n  0% {transform: translateX(-200px)}\n  100% {transform: translateY(0px)}\n`;\n\nexport const SidebarLogoIcon = styled('svg')({\n  fill: 'var(--sidebar-icon-logo-color)',\n  width: '12px',\n  height: '16px',\n\n  animation: `${slideLigtning} 6s infinite`,\n  animationTimingFunction: 'ease',\n});\n\nexport const SidebarLogoWrap = styled('div')(({ isSidebarShown }) => ({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  gap: '8px',\n  width: '110px',\n\n  transform: 'translateX(-135px)',\n  animation: isSidebarShown ? `${slideToRight} 300ms` : 'none',\n  animationTimingFunction: 'ease',\n\n  animationFillMode: 'forwards',\n}));\n\nexport const SidebarLogoIconWrap = styled('div')({\n  width: '32px',\n  height: '32px',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  backgroundColor: 'var(--sidebar-icon-logo-bg-color)',\n  borderRadius: '8px',\n  overflow: 'hidden',\n});\n\nexport const SidebarLogoText = styled('p')({\n  margin: '0px',\n  color: 'var(--sidebar-primary-text-color)',\n  fontFamily: 'Poppins',\n  fontSize: '16px',\n  fontWeight: 600,\n  letterSpacing: '-0.64px',\n});\n\nexport const StartPageLogoWrap = styled('div')({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  gap: '14px',\n});\n\nexport const StartPageLogoIconWrap = styled('div')({\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  backgroundColor: '#161616',\n  borderRadius: '8px',\n});\n\nexport const StartPageLogoIcon = styled('svg')({\n  fill: '#ffffff',\n});\n\nexport const StartPageLogoText = styled('p')({\n  margin: '0px',\n  color: '#161616',\n  fontFamily: 'Poppins',\n  fontWeight: 600,\n  letterSpacing: '-0.64px',\n});\n","import {\n  SidebarLogoIconWrap,\n  SidebarLogoIcon,\n  SidebarLogoText,\n  StartPageLogoWrap,\n  StartPageLogoIconWrap,\n  StartPageLogoIcon,\n  StartPageLogoText,\n  SidebarLogoWrap,\n} from './Logo-styled';\nimport sprite from '../../assets/images/sprite.svg';\n\nexport const SidebarLogo = ({ sx, isSidebarShown }) => {\n  return (\n    <>\n      <SidebarLogoWrap sx={sx} isSidebarShown={isSidebarShown}>\n        <SidebarLogoIconWrap>\n          <SidebarLogoIcon>\n            <use href={sprite + '#icon-logo-lightning'}></use>\n          </SidebarLogoIcon>\n        </SidebarLogoIconWrap>\n\n        <SidebarLogoText>Task Pro</SidebarLogoText>\n      </SidebarLogoWrap>\n    </>\n  );\n};\n\nexport const StartPageLogo = ({ style }) => {\n  return (\n    <>\n      <StartPageLogoWrap style={style} sx={{ width: { 0: 166, 768: 222 } }}>\n        <StartPageLogoIconWrap\n          sx={{ width: { 0: 40, 768: 48 }, height: { 0: 40, 768: 48 } }}\n        >\n          <StartPageLogoIcon\n            sx={{ width: { 0: 15, 768: 18 }, height: { 0: 20, 768: 24 } }}\n          >\n            <use href={sprite + '#icon-logo-lightning'}></use>\n          </StartPageLogoIcon>\n        </StartPageLogoIconWrap>\n\n        <StartPageLogoText\n          sx={{\n            fontSize: { 0: 28, 768: 40 },\n            letterSpacing: { 0: -1.12, 768: -1.6 },\n          }}\n        >\n          Task Pro\n        </StartPageLogoText>\n      </StartPageLogoWrap>\n    </>\n  );\n};\n","import styled from '@emotion/styled';\nimport { styled as MUI } from '@mui/material/styles';\n\nexport const FormStyled = MUI('form')({\n  display: 'flex',\n  flexDirection: 'column',\n  gap: '14px',\n});\n\nexport const ButtonClose = styled.button`\n  font-family: Poppins;\n  margin: 0;\n  padding: 0;\n  position: absolute;\n  right: 10px;\n  top: 10px;\n  width: 24px;\n  height: 24px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  background-color: transparent;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    transform: scale(1.2);\n    /* border: 1px solid #ffffff;\n    color: rgba(255, 255, 255, 1); */\n  }\n`;\n\nexport const InputStyled = styled.input`\n  font-family: Poppins;\n  resize: none;\n  color: var(--primary-text-color);\n  padding: 14px 14px;\n  background-color: transparent;\n  border: 1px solid rgba(190, 219, 176, 0.4);\n  border-radius: 8px;\n  margin-bottom: 10px;\n  :focus {\n    border: 1px solid #bedbb0;\n    outline: none;\n  }\n  ::placeholder {\n    color: var(--primary-text-color);\n    opacity: 30%;\n  }\n`;\n\nexport const TransparentSVG = styled.svg`\n  width: 18px;\n  height: 18px;\n  // stroke: rgba(255, 255, 255, 0.5);\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    stroke: #bedbb0;\n  }\n`;\n\nexport const UlStyled = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 6px;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  margin-bottom: 14px;\n`;\n\nexport const UlBgStyled = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 4px;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  margin-bottom: 14px;\n  max-width: 260px;\n`;\n\nexport const LiStyled = styled.li`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 28px;\n  height: 28px;\n  border-radius: 5px;\n\n  &:hover,\n  &:focus {\n    border: 1px solid #bedbb0;\n  }\n`;\n\nexport const ImgStyled = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  object-position: center;\n  cursor: pointer;\n`;\n\nexport const LiIconsStyled = styled.li`\n  display: flex;\n  width: 20px;\n  height: 20px;\n  align-items: center;\n  justify-content: center;\n\n  &:hover,\n  &:focus {\n    border-radius: 5px;\n    background-color: rgba(190, 219, 176, 0.2);\n  }\n`;\n","import { Modal, Box, Typography } from '@mui/material';\nimport sprite from '../../assets/images/sprite.svg';\nimport { ButtonClose } from 'components/ModalBoard/ModalBoard.styled';\n\n// import { useState } from 'react';\n\nconst modalStyles = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  borderRadius: 2,\n  border: '1px solid rgba(190, 219, 176, 0.50)',\n  background: 'var(--modal-bg-color)',\n  padding: 3,\n  fontFamily: 'Poppins',\n};\n\nconst titleStyles = {\n  color: 'var(--primary-text-color)',\n  fontSize: '18px',\n  fontStyle: 'normal',\n  fontWeight: 500,\n  fontFamily: 'Poppins',\n  lineHeight: 'normal',\n  letterSpacing: -0.36,\n  marginBottom: 3,\n};\n\nconst ModalLayout = ({ title, open, handleClose, children }) => {\n  return (\n    <>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-title\"\n        aria-describedby=\"modal-description\"\n      >\n        <Box sx={modalStyles}>\n          <Typography variant=\"h2\" sx={titleStyles}>\n            {title}\n          </Typography>\n          <ButtonClose type=\"button\" onClick={handleClose}>\n            <svg\n              style={{ stroke: 'var(--primary-text-color)' }}\n              width=\"18\"\n              height=\"18\"\n            >\n              <use href={sprite + '#icon-x-close'} />\n            </svg>\n          </ButtonClose>\n          {children}\n        </Box>\n      </Modal>\n    </>\n  );\n};\n\nexport default ModalLayout;\n","export const SIDEBARWIDTH = 260;\nexport const SIDEBARMOBILEWIDTH = 225;\n  \n\n\n\n","import { styled } from '@mui/material/styles';\nimport { keyframes } from '@mui/system';\n\nconst slideToRight = keyframes`\n  0% {transform: translateX(-250px)}\n  100% {transform: translateX(0px)}\n`;\n\nconst slideToLeft = keyframes`\n  0% {transform: translateX(150px)}\n  100% {transform: translateX(0px)}\n`;\n\nconst slideToDown = keyframes`\n  0% {transform: translateY(-250px)}\n  100% {transform: translateY(0px)}\n`;\n\nconst shakeAnimation = keyframes`\n  0%, 100% {\n    transform: translateX(0);\n  }\n  10%, 30%, 50%, 70%, 90% {\n    transform: translateX(-2px);\n   \n  }\n  20%, 40%, 60%, 80% {\n    transform: translateX(2px);\n  \n  }\n\n`;\n\nexport const Subtitle = styled('p')(({ isSidebarShown }) => ({\n  display: 'inline-block',\n  color: 'var(--sidebar-secondary-text-color)',\n  fontFamily: 'Poppins',\n  fontSize: '12px',\n  fontWeight: 400,\n  letterSpacing: '-0.24px',\n\n  animation: isSidebarShown ? `${slideToLeft} 400ms` : 'none',\n  animationTimingFunction: 'ease',\n  animationFillMode: 'forwards',\n}));\n\nexport const CreateBoardWrap = styled('div')({\n  paddingBottom: '14px',\n  paddingTop: '14px',\n  borderTop: '1px solid var(--sidebar-border-color)',\n  borderBottom: '1px solid var(--sidebar-border-color)',\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  gap: '8px',\n});\n\nexport const TitleCreate = styled('p')(({ isSidebarShown }) => ({\n  margin: '0px',\n  color: 'var(--sidebar-primary-text-color)',\n  fontFamily: 'Poppins',\n  fontSize: '14px',\n  fontWeight: 500,\n  letterSpacing: '-0.28px',\n\n  transform: 'translateX(-250px)',\n  animation: isSidebarShown ? `${slideToRight} 400ms` : 'none',\n  animationTimingFunction: 'ease',\n\n  animationFillMode: 'forwards',\n}));\n\nexport const HelpBox = styled('div')({\n  borderRadius: '8px',\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'left',\n  backgroundColor: 'var(--sidebar-secondary-bg-color)',\n  overflow: 'hidden',\n});\n\nexport const Image = styled('img')(({ isSidebarShown }) => ({\n  width: '54px',\n  height: '78px',\n  marginBottom: '14px',\n\n  transform: 'translateY(250px)',\n  animation: isSidebarShown ? `${slideToDown} 400ms` : 'none',\n  animationTimingFunction: 'ease',\n\n  animationFillMode: 'forwards',\n}));\n\nexport const HelpText = styled('p')(({ isSidebarShown }) => ({\n  margin: '0px',\n  color: 'var(--sidebar-primary-text-color)',\n  fontFamily: 'Poppins',\n  fontWeight: 400,\n  letterSpacing: -0.15,\n  '& span': {\n    color: 'var(--sidebar-taskpro-link-color)',\n  },\n\n  transform: 'translateX(-250px)',\n  animation: isSidebarShown ? `${slideToRight} 400ms` : 'none',\n  animationTimingFunction: 'ease',\n\n  animationFillMode: 'forwards',\n}));\n\nexport const HelpButton = styled('button')(({ isSidebarShown }) => ({\n  padding: 0,\n  width: '94px',\n  height: '20px',\n  display: 'flex',\n  gap: '8px',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  color: 'var(--sidebar-primary-text-color)',\n  backgroundColor: 'transparent',\n  fontFamily: 'Poppins',\n  fontSize: '12px',\n  fontWeight: 500,\n  lineHeight: 1.5,\n  letterSpacing: '-0.24px',\n  border: 'none',\n  cursor: 'pointer',\n  '&:hover, &:focus': {\n    textDecoration: 'underline',\n    outline: 'none',\n  },\n\n  transform: 'translateX(250px)',\n  animation: isSidebarShown ? `${slideToLeft} 400ms` : 'none',\n  animationTimingFunction: 'ease',\n  animationFillMode: 'forwards',\n}));\n\nexport const HelpIcon = styled('svg')(({ startAnimation }) => ({\n  stroke: 'var(--sidebar-primary-text-color)',\n  width: '20px',\n  height: '20px',\n\n  animation: startAnimation ? `${shakeAnimation} 1s  ease-out` : 'none',\n\n  '&:hover, &:focus': {\n    textDecoration: 'underline',\n    outline: 'none',\n  },\n}));\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"SidebarCustomScroll_container__EnYRA\"};","import { styled } from '@mui/material/styles';\nimport { keyframes } from '@mui/system';\n\nconst slideAround = keyframes`\n  0% {transform: rotate(0deg)}\n  100% {transform: rotate(360deg)}\n`;\n\nexport const BoardItemWrap = styled('div')({\n  paddingTop: '20px',\n  paddingBottom: '20px',\n\n  width: '100%',\n  display: 'flex',\n  flexDirection: 'row',\n  gap: '8px',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n\n  overflow: 'hidden',\n});\n\nexport const BoardItemIcon = styled('svg')(({startAnimation})=> ({\n  width: '18px',\n  height: '18px',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  stroke: 'var(--sidebar-primary-text-color)',\n\n  animation: startAnimation ? `${slideAround} 1s  ease-out` : 'none',\n}));\n\nexport const BoardItemCurrentIcon = styled('svg')({\n  width: '16px',\n  height: '16px',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n});\n\nexport const BoardItemTitleWrap = styled('div')({\n  overflow: 'hidden',\n  whiteSpace: 'nowrap',\n});\n\nexport const BoardItemTitle = styled('p')(\n  ({ titleWidth, titleWrapWidth, current }) => {\n    const slideText = keyframes`\n    0% { transform: translateX(0px); }\n    100% { transform: translateX(${titleWrapWidth - titleWidth}px); }\n  `;\n\n    return {\n      margin: '0px',\n      color: 'var(--sidebar-primary-text-color)',\n      fontFamily: 'Poppins',\n      fontSize: '14px',\n      fontStyle: 'normal',\n      fontWeight: '500',\n      letterSpacing: '-0.28px',\n\n      animationName: titleWidth >= titleWrapWidth && current ? slideText : 'none',\n      animationDuration: `${titleWidth * 30}ms`,\n      animationTimingFunction: 'linear',\n      animationIterationCount: 'infinite',\n      animationDirection: 'alternate',\n    };\n  }\n);\n","import React, { useRef, useEffect } from 'react';\n\nconst MeasureTitleWidth = ({ title, setTitleWidth }) => {\n  const measureRef = useRef(null);\n\n  useEffect(() => {\n    const observer = new ResizeObserver(entries => {\n      for (const entry of entries) {\n        if (entry.target === measureRef.current) {\n          setTitleWidth(entry.contentRect.width);\n        }\n      }\n    });\n\n    const currentRef = measureRef.current;\n\n    if (currentRef) {\n      observer.observe(currentRef);\n    }\n\n    return () => {\n      if (currentRef) {\n        observer.unobserve(currentRef);\n      }\n    };\n  }, [setTitleWidth]);\n\n  return (\n    <span\n      ref={measureRef}\n      style={{\n        position: 'absolute',\n        top: '-9999px',\n        left: '-9999px',\n        visibility: 'hidden',\n        whiteSpace: 'nowrap',\n      }}\n    >\n      {title}\n    </span>\n  );\n};\n\nexport default MeasureTitleWidth;\n","export const arrIcons = [\n  '#icon-Project',\n  '#icon-star',\n  '#icon-loading',\n  '#icon-puzzle',\n  '#icon-container',\n  '#icon-lightning',\n  '#icon-colors',\n  '#icon-hexagon',\n];\n\nexport const arrBG = [\n  'https://res.cloudinary.com/teamprojectavatar/image/upload/v1693617131/bg-img/laptop/1/1-bg-laptop-1x.jpg',\n  'https://res.cloudinary.com/teamprojectavatar/image/upload/v1693617134/bg-img/laptop/1/2-bg-laptop-1x.jpg',\n  'https://res.cloudinary.com/teamprojectavatar/image/upload/v1693617134/bg-img/laptop/1/3-bg-laptop-1x.jpg',\n  'https://res.cloudinary.com/teamprojectavatar/image/upload/v1693617121/bg-img/laptop/1/4-bg-laptop-1x.jpg',\n  'https://res.cloudinary.com/teamprojectavatar/image/upload/v1693617121/bg-img/laptop/1/5-bg-laptop-1x.jpg',\n  'https://res.cloudinary.com/teamprojectavatar/image/upload/v1693617122/bg-img/laptop/1/6-bg-laptop-1x.jpg',\n  'https://res.cloudinary.com/teamprojectavatar/image/upload/v1693617123/bg-img/laptop/1/7-bg-laptop-1x.jpg',\n  'https://res.cloudinary.com/teamprojectavatar/image/upload/v1693617124/bg-img/laptop/1/8-bg-laptop-1x.jpg',\n  'https://res.cloudinary.com/teamprojectavatar/image/upload/v1693617125/bg-img/laptop/1/9-bg-laptop-1x.jpg',\n  'https://res.cloudinary.com/teamprojectavatar/image/upload/v1693617126/bg-img/laptop/1/10-bg-laptop-1x.jpg',\n  'https://res.cloudinary.com/teamprojectavatar/image/upload/v1693617126/bg-img/laptop/1/11-bg-laptop-1x.jpg',\n  'https://res.cloudinary.com/teamprojectavatar/image/upload/v1693617127/bg-img/laptop/1/12-bg-laptop-1x.jpg',\n  'https://res.cloudinary.com/teamprojectavatar/image/upload/v1693617127/bg-img/laptop/1/13-bg-laptop-1x.jpg',\n  'https://res.cloudinary.com/teamprojectavatar/image/upload/v1693617128/bg-img/laptop/1/14-bg-laptop-1x.jpg',\n  'https://res.cloudinary.com/teamprojectavatar/image/upload/v1693617129/bg-img/laptop/1/15-bg-laptop-1x.jpg',\n];\n","import { useFormik } from 'formik';\nimport { Box, Typography } from '@mui/material';\nimport {\n  FormStyled,\n  InputStyled,\n  TransparentSVG,\n  UlStyled,\n  // LiStyled,\n  UlBgStyled,\n  ImgStyled,\n  LiIconsStyled,\n} from './ModalBoard.styled';\n\nimport Notiflix from 'notiflix';\nimport { Report } from 'notiflix';\nimport sprite from '../../assets/images/sprite.svg';\nimport * as Yup from 'yup';\nimport { ButtonWithIcon } from 'components/Buttons/Button';\nimport ModalLayout from 'components/ModalLayout/ModalLayout';\nimport { useState } from 'react';\nimport { arrIcons } from './data';\nimport { arrBG } from './data';\nimport { useDispatch } from 'react-redux';\nimport { API } from 'Services/API';\nimport { setBoardId, setBoardResponse, setBoardsIdArray } from 'redux/boards/boardsAPISlice';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nconst titleStyle = {\n  color: '#FFF',\n  fontSize: 14,\n  fontStyle: 'normal',\n  fontWeight: 500,\n  lineHeight: 'normal',\n  letterSpacing: -0.36,\n  fontFamily: 'Poppins',\n};\nconst ModalBoard = ({ board, boardTitle, open, handleClose }) => {\n  const dispatch = useDispatch();\n  const boardsIdArray = useSelector(state => state.boards.boardsIdArray);\n\n  const [inputValue, setInputValue] = useState(board?.title || '');\n  const [iconId, setIconId] = useState(board?.iconId || arrIcons[0]);\n  const [background, setBackground] = useState(board?.background || 0);\n\n  const [addBoard] = API.useAddBoardsMutation();\n  const [editBoard] = API.useUpdateBoardByIdMutation();\n\n  const navigate = useNavigate();\n\n  const handleSubmit = async title => {\n    try {\n      const FormData = {\n        title,\n        background,\n        iconId,\n      };\n\n      if (boardTitle === 'New board') {\n        const response = await addBoard(FormData);\n        dispatch(setBoardResponse(response));\n        const newBoardId = response.data._id;\n        dispatch(setBoardId({boardId:newBoardId}));\n        dispatch(setBoardsIdArray([...boardsIdArray, newBoardId]))\n        navigate(`/home/${newBoardId}`);\n        setInputValue('');\n        setIconId(arrIcons[0]);\n        setBackground(0);\n        Report.success(\n          'Board added successfully',\n          'You can use your board and add columns to it',\n          'Ok'\n        );\n      }\n      if (boardTitle === 'Edit board') {\n        if (\n          board.title === inputValue &&\n          board.iconId === iconId &&\n          board.background === background\n        ) {\n          Report.warning(\n            'No changes have been selected',\n            'Edit any field to apply the changes',\n            'Ok'\n          );\n          return;\n        }\n\n        const response = await editBoard({ boardId: board._id, FormData });\n        dispatch(setBoardResponse(response));\n        Report.success(\n          'Board edited successfully',\n          'All changes have been made',\n          'Ok'\n        );\n      }\n      handleClose();\n    } catch {\n      Report.failure(\"Board wasn't edited\", 'Changes have not been made', 'Ok');\n    }\n    formik.handleReset();\n  };\n\n  const handleChange = e => {\n    setInputValue(e.currentTarget.value);\n    formik.setFieldValue('title', e.currentTarget.value);\n  };\n\n  const validationSchema = Yup.object({\n    title: Yup.string()\n      .min(2, 'Must be more than 2 symbols')\n      .max(50, 'Must be less than 50 symbols')\n      .required('Title is required')\n      .test(\n        'is-not-cyrillic',\n        'Title must not contain Cyrillic characters',\n        function (value) {\n          if (/[а-яА-Я]/.test(value)) {\n            Notiflix.Notify.warning(\n              'Title field must not contain enemy characters!'\n            );\n\n            return false;\n          }\n          return true;\n        }\n      ),\n    description: Yup.string(),\n  });\n\n  const formik = useFormik({\n    initialValues: { title: inputValue },\n    onSubmit: ({ title }) => handleSubmit(title),\n    validationSchema,\n  });\n\n  return (\n    <>\n      <ModalLayout title={boardTitle} open={open} handleClose={handleClose}>\n        <FormStyled\n          sx={{ width: { 0: '77vw', 375: '287px', 768: '302px' } }}\n          onSubmit={formik.handleSubmit}\n        >\n          <InputStyled\n            id=\"title\"\n            name=\"title\"\n            placeholder={'Title'}\n            onChange={handleChange}\n            onBlur={formik.handleBlur}\n            value={inputValue}\n          />\n          <Typography variant=\"h2\" sx={titleStyle}>\n            Icons\n          </Typography>\n          <UlStyled>\n            {arrIcons.map(icon => {\n              return (\n                <LiIconsStyled\n                  key={icon}\n                  onClick={() => setIconId(icon)}\n                  isSelected={iconId === icon}\n                >\n                  <TransparentSVG>\n                    <use\n                      href={sprite + icon}\n                      style={{\n                        stroke:\n                          iconId === icon\n                            ? '#FFFFFF'\n                            : 'rgba(255, 255, 255, 0.5)',\n                        transition: 'stroke 0.2s ease',\n                      }}\n                    />\n                  </TransparentSVG>\n                </LiIconsStyled>\n              );\n            })}\n          </UlStyled>\n\n          <Typography variant=\"h2\" sx={titleStyle}>\n            Background\n          </Typography>\n          <UlBgStyled>\n            <li\n              key={0}\n              onClick={() => {\n                setBackground(0);\n              }}\n            >\n              <Box\n                sx={{\n                  overflow: 'hidden',\n                  display: 'flex',\n                  justifyContent: 'center',\n                  alignItems: 'center',\n                  width: '28px',\n                  height: '28px',\n                  borderRadius: '6px',\n                  border:\n                    0 === background\n                      ? '2px solid #ffffff'\n                      : '2px solid transparent',\n                  '&:hover, &:focus': {\n                    border: '2px solid #bedbb0',\n                  },\n                }}\n              >\n                <div\n                  style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    width: '100%',\n                    height: '100%',\n                    backgroundColor: '#1F1F1F',\n                    borderRadius: '5px',\n                    cursor: 'pointer',\n                  }}\n                >\n                  <svg\n                    style={{\n                      width: '16px',\n                      height: '16px',\n                      stroke: 'rgba(255, 255, 255, 0.10)',\n                    }}\n                  >\n                    <use href={sprite + '#icon-default-background'}></use>\n                  </svg>\n                </div>\n              </Box>\n            </li>\n            {arrBG.map((bg, index) => {\n              return (\n                <li key={index + 1} onClick={() => setBackground(index + 1)}>\n                  <Box\n                    sx={{\n                      overflow: 'hidden',\n                      display: 'flex',\n                      justifyContent: 'center',\n                      alignItems: 'center',\n                      width: '28px',\n                      height: '28px',\n                      borderRadius: '6px',\n                      border:\n                        index + 1 === background\n                          ? '2px solid #ffffff'\n                          : '2px solid transparent',\n                      '&:hover, &:focus': {\n                        border: '2px solid #bedbb0',\n                      },\n                    }}\n                  >\n                    <ImgStyled src={bg} alt=\"background picture\" />\n                  </Box>\n                </li>\n              );\n            })}\n          </UlBgStyled>\n\n          <ButtonWithIcon\n            title={boardTitle === 'New board' ? 'Create' : 'Edit'}\n            type={'submit'}\n            onClick={() => {\n              if (formik.values.title === '' && !inputValue) {\n                Notiflix.Notify.warning('Title field must be filled in');\n              }\n            }}\n          />\n        </FormStyled>\n      </ModalLayout>\n    </>\n  );\n};\n\nexport default ModalBoard;\n","import { useEffect, useState } from \"react\";\nimport { BoardItemIcon } from \"./SidebarBoardItem-styled\"\nimport sprite from '../../assets/images/sprite.svg';\n\n\nexport const SidebarBoardItemIcon = ({current, iconId}) => {\n\n    const [startAnimation, setStartAnimation] = useState(true);\n\n    useEffect(() => {\n        const randomNumber = Math.floor(Math.random() * (15000 - 7000 + 1)) + 7000;\n        const interval = setInterval(() => {\n          setStartAnimation(true);\n          setTimeout(() => {\n            setStartAnimation(false);\n          }, 1000);\n        }, randomNumber);\n    \n        return () => {\n          clearInterval(interval);\n        };\n      }, []);\n\n    return (\n        <BoardItemIcon\n        startAnimation={startAnimation}\n        sx={{ opacity: current ? 1 : 0.5 }}\n      >\n        <use href={sprite + iconId}></use>\n      </BoardItemIcon>\n    )\n}","import {\n  BoardItemCurrentIcon,\n  BoardItemTitle,\n  BoardItemTitleWrap,\n  BoardItemWrap,\n} from './SidebarBoardItem-styled';\n\nimport sprite from '../../assets/images/sprite.svg';\nimport MeasureTitleWidth from './MeasureTitleWidth';\n\nimport { debounce } from 'lodash';\nimport { Box, List, ListItem, ListItemButton } from '@mui/material';\nimport { useEffect, useState } from 'react';\nimport { API } from 'Services/API';\nimport ModalBoard from 'components/ModalBoard/ModalBoard';\nimport { SidebarBoardItemIcon } from './SidebarBoardItemIcon';\nimport { useDispatch } from 'react-redux';\nimport { setBoardId, setBoardsIdArray } from 'redux/boards/boardsAPISlice';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router';\n\nexport const SidebarBoardItem = ({ board, current }) => {\n  const { _id: id, iconId, title } = board;\n\n  const boardsIdArray = useSelector(state => state.boards.boardsIdArray);\n\n  const dispatch = useDispatch();\n\n  const navigate = useNavigate();\n\n  const [isHovered, setIsHovered] = useState(false);\n  const [titleWidth, setTitleWidth] = useState(0);\n  const [titleWrapWidth, setTitleWrapWidth] = useState(130);\n  const [screenWidth, setScreenWidth] = useState(window.innerWidth);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const [deleteBoard] = API.useDeleteBoardByIdMutation();\n\n  const handleResize = debounce(() => {\n    setScreenWidth(window.innerWidth);\n  }, 200);\n\n  useEffect(() => {\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [handleResize]);\n\n  useEffect(() => {\n    if (screenWidth <= 320) {\n      setTitleWrapWidth(85);\n    } else if (screenWidth <= 768) {\n      setTitleWrapWidth(120);\n    } else setTitleWrapWidth(130);\n  }, [screenWidth, title]);\n\n  const modalStateChange = () => setIsModalOpen(!isModalOpen);\n\n  const handleEditClick = event => {\n    event.stopPropagation();\n    modalStateChange();\n  };\n\n  const handleDeleteClick = event => {\n    event.stopPropagation();\n\n    if (boardsIdArray?.length > 1) {\n      const filteredArray = boardsIdArray?.filter(el => el !== id);\n      dispatch(setBoardsIdArray(filteredArray));\n      dispatch(setBoardId({ boardId: filteredArray[0] }));\n      navigate(`/home/${filteredArray[0]}`);\n    } \n\n    if (boardsIdArray?.length === 1) {\n      dispatch(setBoardsIdArray([]));\n      dispatch(setBoardId({ boardId: '' }));\n      navigate(\"/home\");\n    }\n\n    deleteBoard(id);\n  };\n\n  return (\n    <>\n      <MeasureTitleWidth title={title} setTitleWidth={setTitleWidth} />\n\n      <BoardItemWrap\n        onMouseEnter={() => setIsHovered(true)}\n        onMouseLeave={() => setIsHovered(false)}\n        sx={{\n          pl: { 0: 1.75, 768: 3 },\n          pr: { 0: 1.75, 768: 3 },\n          backgroundColor: current\n            ? 'var(--sidebar-board-item-bg-color-CURRENT)'\n            : 'transparent',\n        }}\n      >\n        <Box\n          sx={{\n            display: 'flex',\n            flexDirection: 'row',\n            gap: { 0: 0.5, 768: 1 },\n            alignItems: 'center',\n          }}\n        >\n          <SidebarBoardItemIcon current={current} iconId={iconId} />\n\n          <BoardItemTitleWrap\n            sx={{\n              width: current\n                ? { 0: 85, 320: 'calc(60vw - 105px)', 375: 120, 768: 130 }\n                : { 0: 135, 320: 'calc(60vw - 55px)', 375: 170, 768: 180 },\n            }}\n          >\n            <BoardItemTitle\n              sx={{ opacity: current ? 1 : 0.5 }}\n              titleWidth={titleWidth}\n              titleWrapWidth={titleWrapWidth}\n              current={current}\n            >\n              {title}\n            </BoardItemTitle>\n          </BoardItemTitleWrap>\n        </Box>\n\n        {isHovered && (\n          <Box\n            sx={{\n              position: 'absolute',\n              right: 0,\n              width: '4px',\n              height: '100%',\n              backgroundColor: 'var(--sidebar-board-item-bg-color-AFTER)',\n              opacity: 0.4,\n              borderRadius: '4px 0px 0px 4px',\n            }}\n          />\n        )}\n\n        {current && (\n          <Box\n            sx={{\n              position: 'absolute',\n              right: 0,\n              width: '4px',\n              height: '100%',\n              backgroundColor: 'var(--sidebar-board-item-bg-color-AFTER)',\n              borderRadius: '4px 0px 0px 4px',\n            }}\n          />\n        )}\n\n        {current && (\n          <List\n            disablePadding\n            sx={{\n              display: 'flex',\n              flexDirection: 'row',\n              gap: 1,\n              alignItems: 'center',\n              justifyContent: 'center',\n            }}\n          >\n            <ListItem disablePadding>\n              <ListItemButton\n                sx={{\n                  p: 0,\n                  m: 0,\n                  pointerEvents: 'auto',\n                  backgroundColor: 'transparent',\n                  opacity: 0.5,\n                  stroke: 'var(--sidebar-primary-text-color)',\n                  '&:hover, &:focus': {\n                    opacity: 1,\n                    backgroundColor: 'transparent',\n                  },\n                }}\n                onClick={handleEditClick}\n              >\n                <BoardItemCurrentIcon>\n                  <use href={sprite + '#icon-pencil'}></use>\n                </BoardItemCurrentIcon>\n              </ListItemButton>\n            </ListItem>\n\n            <ListItem disablePadding>\n              <ListItemButton\n                sx={{\n                  p: 0,\n                  m: 0,\n                  pointerEvents: 'auto',\n                  backgroundColor: 'transparent',\n                  opacity: 0.5,\n                  stroke: 'var(--sidebar-primary-text-color)',\n                  '&:hover, &:focus': {\n                    opacity: 1,\n                    backgroundColor: 'transparent',\n                  },\n                }}\n                onClick={handleDeleteClick}\n              >\n                <BoardItemCurrentIcon>\n                  <use href={sprite + '#icon-trash'}></use>\n                </BoardItemCurrentIcon>\n              </ListItemButton>\n            </ListItem>\n          </List>\n        )}\n      </BoardItemWrap>\n\n      <ModalBoard\n        board={board}\n        boardTitle={'Edit board'}\n        open={isModalOpen}\n        handleClose={modalStateChange}\n      />\n    </>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { Droppable } from \"react-beautiful-dnd\";\n\nexport const StrictModeDroppable = ({ children, ...props }) => {\n  const [enabled, setEnabled] = useState(false);\n\n  useEffect(() => {\n    const animation = requestAnimationFrame(() => setEnabled(true));\n\n    return () => {\n      cancelAnimationFrame(animation);\n      setEnabled(false);\n    };\n  }, []);\n\n  if (!enabled) {\n    return null;\n  }\n\n  return <Droppable {...props}>{children}</Droppable>;\n};","import { List, ListItem, ListItemButton } from '@mui/material';\nimport { SidebarBoardItem } from './SidebarBoardItem';\nimport { useEffect, useState } from 'react';\n\nimport { API } from 'Services/API';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setBoardId, setBoardsIdArray } from 'redux/boards/boardsAPISlice';\n\nimport { DragDropContext, Draggable } from 'react-beautiful-dnd';\nimport { StrictModeDroppable as Droppable } from 'helpers/StrictModeDroppable';\n\nexport const SidebarBoardList = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const { data } = API.useGetBoardsQuery();\n  const [boardsArray, setBoardsArray] = useState(data || []);\n\n  const boardId = useSelector(state => state.boards.boardId);\n  const [currentItemId, setCurrentItemId] = useState(boardId || '');\n\n  const boardsIdArray = useSelector(state => state.boards.boardsIdArray);\n\n\n  useEffect(() => {\n    if (\n      (boardsIdArray?.length === 0 && data?.length) ||\n      boardsIdArray?.length !== data?.length\n    ) {\n      dispatch(setBoardsIdArray(data?.map(el => el._id)));\n    }\n    \n    let myArray\n    if (boardsIdArray?.length && data?.length) {\n      myArray = boardsIdArray.map(el => {\n        return data.find(board => board._id === el)\n      })\n\n      const newItems = data.filter(board => {\n        return !boardsIdArray.includes(board._id)\n      })\n\n      if (newItems?.length) myArray = [...newItems, ...myArray]\n    }\n\n    setBoardsArray(myArray || data);\n    setCurrentItemId(boardId);\n  }, [boardId, boardsIdArray, data, dispatch]);\n\n\n  const handleOnDragEnd = result => {\n    if (!result.destination) return;\n\n    const boards = [...boardsArray];\n\n    const [reorderedBoard] = boards.splice(result.source.index, 1);\n\n    boards.splice(result.destination.index, 0, reorderedBoard);\n\n    const newBoardsIdArray = boards.map(board => board._id);\n    dispatch(setBoardsIdArray(newBoardsIdArray));\n\n    setBoardsArray(boards);\n  };\n\n  const handleButtonClick = id => {\n    setCurrentItemId(id);\n    dispatch(setBoardId({ boardId: id }));\n    navigate(`/home/${id}`);\n  };\n\n  return (\n    <>\n      <DragDropContext onDragEnd={handleOnDragEnd}>\n        <Droppable droppableId=\"boardsArray\">\n          {provided => (\n            <List\n              {...provided.droppableProps}\n              ref={provided.innerRef}\n              disablePadding\n              sx={{\n                display: 'flex',\n                flexDirection: 'column',\n                gap: 0.5,\n                mb: 3,\n              }}\n            >\n              {boardsArray?.map((board, index) => (\n                <Draggable\n                  key={board._id}\n                  draggableId={board._id.toString()}\n                  index={index}\n                >\n                  {provided => (\n                    <ListItem\n                      {...provided.draggableProps}\n                      {...provided.dragHandleProps}\n                      ref={provided.innerRef}\n                      disablePadding\n                    >\n                      <ListItemButton\n                        sx={{\n                          p: 0,\n                          m: 0,\n                          // pointerEvents:\n                          //   currentItemId === board._id ? 'none' : 'auto',\n                          '&:hover, &:focus': {\n                            backgroundColor:\n                              'var(--sidebar-board-item-bg-color-CURRENT)',\n                          },\n                        }}\n                        onClick={() => handleButtonClick(board._id)}\n                      >\n                        <SidebarBoardItem\n                          board={board}\n                          current={currentItemId === board._id}\n                        />\n                      </ListItemButton>\n                    </ListItem>\n                  )}\n                </Draggable>\n              ))}\n              {provided.placeholder}\n            </List>\n          )}\n        </Droppable>\n      </DragDropContext>\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const LogOutBtnStyled = styled.button`\n  display: flex;\n  gap: 14px;\n  padding: 0px;\n  justify-content: center;\n  align-items: center;\n  height: 32px;\n  width: 105px;\n  border: none;\n  background-color: transparent;\n  cursor: pointer;\n\n  color: var(--sidebar-icon-logout-color);\n  &:hover,\n  &:focus {\n    color: var(--sidebar-icon-logout-color-HOVER-FOCUS);\n    transition: color 300ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n`;\n\nexport const SpanStyled = styled.span`\n  font-size: 14px;\n  font-weight: 500;\n  color: var(--sidebar-primary-text-color);\n  font-family: 'Poppins';\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\nexport const Icon = styled.svg`\n  width: 32px;\n  height: 32px;\n  fill: none;\n  stroke: currentColor;\n  transition: stroke 300ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n","import { useDispatch } from 'react-redux';\nimport sprite from '../../assets/images/sprite.svg';\nimport { Icon, LogOutBtnStyled, SpanStyled } from './logoutBtn.styled';\nimport { useLogOutMutation } from 'Services/API_Component/authAPI';\nimport { logout, setError, setIsLoggedIn } from 'redux/auth/authAPISlice';\n\nconst LogoutBtn = () => {\n  const dispatch = useDispatch();\n  const [logOut] = useLogOutMutation();\n\n  const handleLogOut = async () => {\n    try {\n      await logOut().unwrap();\n      dispatch(logout());\n      dispatch(setIsLoggedIn(false));\n    } catch (error) {\n      dispatch(setError(error));\n    }\n  };\n\n  return (\n    <>\n      <LogOutBtnStyled onClick={handleLogOut}>\n        <Icon width=\"32px\" height=\"32px\">\n          <use href={`${sprite}#icon-logout`} />\n        </Icon>\n        <SpanStyled>Log out</SpanStyled>\n      </LogOutBtnStyled>\n    </>\n  );\n};\n\nexport default LogoutBtn;\n","import styled from '@emotion/styled';\nimport { styled as MUI } from '@mui/material/styles';\n\nexport const FormStyled = MUI('form')({\n  display: 'flex',\n  flexDirection: 'column',\n  marginBottom: '0px',\n  overflow: 'hidden',\n});\n\nconst inputStyles = `\n  width: 100%;\n  padding: 14px 18px;\n  margin-bottom: 14px;\n  font-family: Poppins;\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 21px;\n  letter-spacing: -0.28px;\n  caret-color: white;\n  border-radius: 8px;\n  color:var(--primary-text-color);\n  border: 1px solid var(--input-border-color);\n  opacity: 0.6;\n  background-color: var(--bcg-modal-color);\n  transition: border-color 0.3s ease;\n  outline: none;\n\n  &::placeholder {\n    color: var(--primary-text-color);\n    font-size: 14px;\n    line-height: 21px;\n    font-family: 'Poppins';\n    letter-spacing: -0.28px;\n  }\n\n  &:focus {\n    -webkit-text-fill-color: var(--primary-text-color);\n    opacity: 1;\n  \n  }\n  &:active {\n    background-color: var(--modal-bg-color);\n    border: 1px solid var(--button-bg-color-hover);\n    outline:none;\n  }\n`;\n\nexport const InputStyled = styled.input`\n  ${inputStyles}\n\n`;\n\nexport const TextareaStyled = styled.textarea`\n  ${inputStyles}\n  min-height: 155px;\n  text-align: top;\n`;\n\nexport const LabelColorBox = styled.div`\n  display: flex;\n  gap: 4px;\n`;\n","import { Report } from 'notiflix';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport Notiflix from 'notiflix';\nimport { FormStyled, InputStyled, TextareaStyled } from './ModalHelp.styled';\nimport { ButtonWithoutIcon } from 'components/Buttons/Button';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { API } from 'Services/API';\nimport { setError } from 'redux/auth/authAPISlice';\nimport ModalLayout from 'components/ModalLayout/ModalLayout';\n\nconst ModalHelp = ({ title, open, handleClose }) => {\n  const dispatch = useDispatch();\n  const [helpUser] = API.useHelpUserMutation();\n  const email = useSelector(state => state.auth.user.email);\n  const handleSubmit = async () => {\n    try {\n      const response = await helpUser({\n        email: formik.values.email,\n        comment: formik.values.comment,\n      });\n      if (response) {\n        handleClose();\n\n        Report.success(\n          'Email successfully sent',\n          'Our developer has engaged in an epic battle to provide you with an answer. Brace yourself for the victory writing, and in the meantime, hold tight!',\n          'Ok'\n        );\n      }\n      formik.resetForm();\n    } catch (error) {\n      if (error.status === 400) {\n        console.log('All field must be filled in');\n      } else {\n        console.log('An error occurred:', error.data.message);\n        dispatch(setError(error));\n      }\n    }\n  };\n\n  const validationSchema = Yup.object({\n    email: Yup.string()\n      .email('Please enter a valid email address')\n      .matches(\n        /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/,\n        'Please enter a valid email address'\n      )\n      .required('Email is required'),\n    comment: Yup.string().required('Comment is required'),\n  });\n\n  const formik = useFormik({\n    initialValues: { email: email, comment: '' },\n    onSubmit: ({ title }) => handleSubmit(title),\n    validationSchema,\n  });\nconsole.log(formik.values.email)\n  return (\n    <>\n      <ModalLayout title={'Need help'} open={open} handleClose={handleClose}>\n        <FormStyled sx={{width: {0: \"77vw\", 375: \"287px\", 768: \"352px\"}}} onSubmit={formik.handleSubmit}>\n          <InputStyled\n            id=\"email\"\n            name=\"email\"\n            placeholder=\"Email address\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.email}\n          />\n          <TextareaStyled\n            id=\"comment\"\n            name=\"comment\"\n            placeholder=\"Comment\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.comment}\n          />\n\n          <ButtonWithoutIcon\n            title={'Send'}\n            type={'submit'}\n            sx={{ marginTop: 24, background: 'var(--primary-text-color)' }}\n             onClick={() => {\n               if (!formik.values.email) {\n                 Notiflix.Notify.warning('Email field must be filled in');\n               } else if (formik.values.comment === '') {\n                 Notiflix.Notify.warning('Comment field must be filled in');\n               }else if (!validationSchema.isValidSync({ email: formik.values.email })) {\n              Notiflix.Notify.failure('Please enter a valid email address');\n               }\n            }}\n          >\n            Send\n          </ButtonWithoutIcon>\n        </FormStyled>\n      </ModalLayout>\n    </>\n  );\n};\n\nexport default ModalHelp;\n","import { useEffect, useState } from 'react';\nimport sprite from '../../assets/images/sprite.svg';\nimport { HelpIcon } from './SidebarContent-styled';\n\n\n\nexport const SidebarHelpIcon = () => {\n  const [startAnimation, setStartAnimation] = useState(true);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setStartAnimation(true);\n      setTimeout(() => {\n        setStartAnimation(false);\n      }, 1000);\n    }, 7000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  return (\n    <HelpIcon startAnimation={startAnimation}>\n      <use href={sprite + '#icon-help'}></use>\n    </HelpIcon>\n  );\n};\n","import {\n  CreateBoardWrap,\n  HelpBox,\n  HelpButton,\n  HelpText,\n  Image,\n  Subtitle,\n  TitleCreate,\n} from './SidebarContent-styled';\nimport { Box } from '@mui/material';\nimport { useState } from 'react';\n\nimport styles from './SidebarCustomScroll.module.css';\n\nimport AloeVera from '../../assets/images/aloe-vera.png';\n\nimport { SidebarLogo } from 'components/Logo/Logo';\nimport { ButtonSidebar } from 'components/Buttons/Button';\nimport { SidebarBoardList } from './SidebarBoardList';\n\nimport LogoutBtn from 'components/logoutBtn/logoutBtn';\nimport ModalBoard from 'components/ModalBoard/ModalBoard';\nimport ModalHelp from 'components/ModalHelp/ModalHelp';\nimport { SidebarHelpIcon } from './SidebarHelpIcon';\n\nexport const SidebarContent = ({ isSidebarShown }) => {\n  const [isModalBoardOpen, setIsModalBoardOpen] = useState(false);\n  const [isModalHelpOpen, setIsModalHelpOpen] = useState(false);\n\n  const modalBoardStateChange = () => setIsModalBoardOpen(!isModalBoardOpen);\n  const modalHelpStateChange = () => setIsModalHelpOpen(!isModalHelpOpen);\n\n  return (\n    <>\n      <Box\n        className={styles.container}\n        sx={{\n          pt: 3,\n          pb: 3,\n          display: 'flex',\n          flexGrow: 1,\n          flexDirection: 'column',\n          justifyContent: 'space-between',\n        }}\n      >\n        <Box>\n          <Box sx={{ pl: { 0: 1.75, 768: 3 }, pr: { 0: 1.75, 768: 3 } }}>\n            <SidebarLogo sx={{ mb: 7.5 }} isSidebarShown={isSidebarShown} />\n\n            <Subtitle sx={{ mb: 1 }} isSidebarShown={isSidebarShown}>\n              My boards\n            </Subtitle>\n\n            <CreateBoardWrap sx={{ mb: 5 }}>\n              <TitleCreate isSidebarShown={isSidebarShown}>\n                Create a <br /> new board\n              </TitleCreate>\n              <ButtonSidebar onClick={modalBoardStateChange} />\n            </CreateBoardWrap>\n          </Box>\n          <SidebarBoardList />\n        </Box>\n\n        <Box sx={{ pl: { 0: 1.75, 768: 3 }, pr: { 0: 1.75, 768: 3 } }}>\n          <HelpBox sx={{ p: { 0: 1.75, 768: 2.5 }, mb: 3 }}>\n            <Image\n              src={AloeVera}\n              alt={'aloe vera'}\n              isSidebarShown={isSidebarShown}\n            />\n            <HelpText\n              isSidebarShown={isSidebarShown}\n              sx={{\n                mb: 2.25,\n                fontSize: { 0: '12px', 768: '14px' },\n                lineHeight: { 0: '16px', 768: '20px' },\n              }}\n            >\n              If you need help with <span>TaskPro</span>, check out our support\n              resources or reach out to our customer support team.\n            </HelpText>\n            <HelpButton\n              type=\"button\"\n              isSidebarShown={isSidebarShown}\n              onClick={modalHelpStateChange}\n            >\n              <SidebarHelpIcon />\n              Need help?\n            </HelpButton>\n          </HelpBox>\n          <LogoutBtn />\n        </Box>\n      </Box>\n\n      <ModalBoard\n        boardTitle={'New board'}\n        open={isModalBoardOpen}\n        handleClose={modalBoardStateChange}\n      />\n      <ModalHelp\n        title={'Need help'}\n        open={isModalHelpOpen}\n        handleClose={modalHelpStateChange}\n      />\n    </>\n  );\n};\n","import { Box, Drawer } from '@mui/material';\n\nimport { SidebarContent } from './SidebarContent';\nimport { SIDEBARMOBILEWIDTH, SIDEBARWIDTH } from './SidebarCONSTANTS';\n\nexport const Sidebar = ({ ...props }) => {\n  const { window, isMobileSidebar, handleSidebarToggle } = props;\n  const container =\n    window !== undefined ? () => window().document.body : undefined;\n\n  return (\n    <Box\n      component=\"nav\"\n      sx={{ width: { 1440: SIDEBARWIDTH }, flexShrink: { 1440: 0 } }}\n      aria-label=\"sidebar options\"\n    >\n      <Drawer\n        container={container}\n        variant=\"temporary\"\n        open={isMobileSidebar}\n        onClose={handleSidebarToggle}\n        ModalProps={{ keepMounted: true }}\n        slotProps={{\n          backdrop: {\n            style: {\n              backgroundColor: 'var(--sidebar-backdrop-color)',\n            },\n          },\n        }}\n        sx={{\n          display: { 0: 'block', 1440: 'none' },\n          '& .MuiDrawer-paper': {\n            boxSizing: 'border-box',\n            boxShadow: 'none',\n            border: 'none',\n            overflow: 'hidden',\n            width: {\n              0: 192,\n              320: '60vw',\n              375: SIDEBARMOBILEWIDTH,\n              768: SIDEBARWIDTH,\n            },\n            backgroundColor: 'var(--sidebar-primary-bg-color)',\n          },\n        }}\n      >\n        <SidebarContent isSidebarShown={isMobileSidebar} />\n      </Drawer>\n\n      <Drawer\n        variant=\"permanent\"\n        open\n        sx={{\n          display: { 0: 'none', 1440: 'block' },\n          '& .MuiDrawer-paper': {\n            boxSizing: 'border-box',\n            boxShadow: 'none',\n            border: 'none',\n            overflow: 'hidden',\n            width: SIDEBARWIDTH,\n            backgroundColor: 'var(--sidebar-primary-bg-color)',\n          },\n        }}\n      >\n        <SidebarContent isSidebarShown={true} />\n      </Drawer>\n    </Box>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const HeaderContainer = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  max-width: 100%;\n  width: auto;\n  height:68px;\n  padding: 18px 24px;\n  background: var(--header-bg-color);\n  color: var(--primary-text-color);\n\n  @media (max-width: 1440px) {\n    padding: 18px 32px;\n  }\n  @media (max-width: 768px) {\n    padding: 14px 20px;\n    height:60px;\n  }\n`;\n\nexport const ThemeContainer = styled.div`\n  position: relative;\n  display: inline-block;\n  width: 70px;\n  height: auto;\n  margin-right: 14px;\n  margin-left: auto;\n`;\n\nexport const ThemeWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  color: var(--primary-text-color);\n  font-size: 14px;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n  transition: color 300ms cubic-bezier(0.4, 0, 0.2, 1);\n  svg {\n    stroke: var(--primary-text-color);\n    transition: stroke 300ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n  &:hover {\n    svg {\n      stroke: var(--header-theme-color);\n    }\n    color: var(--header-theme-color);\n   \n  }\n`;\n\nexport const ThemeUL = styled.ul`\n  position: absolute;\n  top: 45px;\n  left: -12px;\n  margin: 0px;\n  max-height: 0px;\n  padding: 0 44px 0 18px;\n  background: var(--modal-bg-color);\n  overflow: hidden;\n  list-style: none;\n  border-radius: 8px;\n  \n  &.visible {\n    width: 100px;\n    max-height: 107px;\n    padding: 18px 44px 18px 18px;\n    border: 1px solid var(--button-bg-color);\n    box-shadow: 0px 4px 16px 0px rgba(17, 17, 17, 0.1);\n  }\n  @media (max-width: 768px) {\n    top: 41px;\n  }\n`;\n\nexport const ThemeButton = styled.button`\n  border: none;\n  background: transparent;\n  text-transform: capitalize;\n  cursor: ${({ disabled }) => (disabled ? '' : 'pointer')};\n  color: ${({ selected }) =>\n    selected ? 'var(--button-bg-color)' : 'var(--secondary-text-color)'};\n  }\n`;\n","import { IconButton } from '@mui/material';\nimport MenuIcon from '@mui/icons-material/Menu';\n\nexport const NavBtn = ({ handleSidebarToggle }) => {\n  return (\n    <>\n      <IconButton\n        color=\"inherit\"\n        aria-label=\"open sidebar options\"\n        edge=\"start\"\n        onClick={handleSidebarToggle}\n        sx={{ width: 32, height: 32, display: { 1440: 'none' } ,\n        transition: \"color 300ms cubic-bezier(0.4, 0, 0.2, 1)\",\n        '&:hover': {\n          color: 'var(--header-theme-color)',\n          background: \"inherit\",\n        },}}\n      >\n        <MenuIcon />\n      </IconButton>\n    </>\n  );\n};\n","import styled, { css } from 'styled-components';\nimport { styled as MUI } from '@mui/material/styles';\nimport { Form, Field } from 'formik';\n\nexport const Container = MUI('div')({\n  backgroundColor: 'var(--input-bcg-color)',\n  marginLeft: 'auto',\n  marginRight: 'auto',\n  borderRadius: '8px',\n});\n\nexport const FormWrap = styled.div`\n  background-color: var(--modal-bg-color);\n  display: flex;\n  flex-direction: column;\n  justify-content: right;\n  align-items: center;\n  min-width: 100%;\n`;\n\nexport const AvatarWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 25px;\n`;\nexport const ImgWrapper = styled.div`\n  position: relative;\n  width: 68px;\n  height: 68px;\n  border-radius: 8px;\n  transition: all 0.3s ease;\n`;\nexport const IconAvatar = styled.svg`\n  width: 68px;\n  height: 68px;\n  --color1: var(--avatar-bcg-color);\n  --color2: var(--avatar-fill-color);\n`;\n\nexport const Img = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  border-radius: 8px;\n`;\nexport const IconButton = styled.button`\n  border: none;\n  border-radius: 6px;\n  cursor: pointer;\n  position: absolute;\n  top: 101%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 24px;\n  height: 24px;\n  background-color: var(--icon-plus-bcg);\n  transition: all 0.3s ease;\n\n  &:hover {\n    transform: translate(-50%, -50%) scale(1.1);\n    outline: none;\n  }\n\n  &:focus {\n    background-color: var(--icon-plus-bcg-hover-focus);\n    outline: none;\n  }\n`;\nexport const IconPlus = styled.svg`\n  display: block;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 10px;\n  height: 10px;\n  stroke: var(--icon-add-avatar);\n  // stroke: var(--icon-add-color);\n\n  ${IconButton}:hover & {\n    transform: translate(-50%, -50%) scale(1.1);\n  }\n\n  ${IconButton}:focus & {\n    opacity: 1;\n    outline: none;\n  }\n`;\n\nexport const FormikForm = styled(Form)`\n  width: 100%;\n  display: flex;\n  gap: 14px;\n\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\nexport const Label = styled.label`\n  display: block;\n  width: 100%;\n`;\nexport const FormikInput = styled(Field)`\n  width: 100%;\n  padding: 14px 18px;\n  font-family: Poppins;\n  font-size: 14px;\n  line-height: normal;\n  letter-spacing: -0.28px;\n\n  color: var(--primary-text-color);\n  border-radius: 8px;\n  opacity: 0.4;\n  border: 1px solid var(--input-border-color);\n\n  background: var(--bcg-modal-color);\n  transition: all 0.3s ease;\n\n  &::placeholder {\n    color: var(--primary-text-color);\n    font-size: 14px;\n    font-family: 'Poppins';\n    letter-spacing: -0.28px;\n  }\n\n  &:focus {\n    opacity: 1;\n    outline: none;\n  }\n`;\nexport const Wrap = styled.div`\n  display: block;\n  position: relative;\n`;\nexport const Icon = styled.svg`\n  width: 18px;\n  height: 18px;\n  stroke: var(--primary-text-color);\n  fill: none;\n  display: block;\n`;\nexport const IconBtn = styled(({ active, ...rest }) => <button {...rest} />)`\n  position: absolute;\n  right: 12px;\n  top: 50%;\n  background-color: transparent;\n  border: none;\n  transform: translateY(-50%);\n  cursor: pointer;\n  opacity: 0.4;\n  & svg {\n    stroke: var(--primary-text-color);\n  }\n\n  &:focus {\n    outline: none;\n  }\n  ${props =>\n    props.active &&\n    css`\n      opacity: 1;\n      svg {\n        stroke: var(--input-border-color);\n      }\n    `}\n`;\n\n// export const Button = styled.button`\n//   color: var(--btn-text-color);\n//   text-align: center;\n//   font-family: Poppins;\n//   font-size: 14px;\n//   padding: 14px 0;\n//   -webkit-tap-highlight-color: transparent;\n//   font-weight: 500;\n//   line-height: normal;\n//   letter-spacing: -0.28px;\n//   font-size: 14px;\n//   font-weight: 500;\n//   letter-spacing: -0.28px;\n//   margin-top: 10px;\n//   width: 100%;\n//   border: none;\n//   border-radius: 8px;\n//   background: var(--input-border-color);\n//   opacity: 1;\n//   outline: none;\n//   cursor: pointer;\n\n//   &:disabled {\n//     // opacity: 0.6;\n//     //  background: var(--input-border-color);\n//     cursor: not-allowed;\n//   }\n//   &:focus {\n//     opacity: 1;\n//     -webkit-tap-highlight-color: none;\n//   }\n// `;\n\n// export const Error = styled(ErrorMessage)`\n//   font-family: 'Roboto';\n//   opacity: 0.5;\n//   color: var(--secondary-text-color);\n//   font-size: 14px;\n//   margin-top: 5px;\n//   padding-left: 5px;\n//   max-width: 200px;\n// `;\n","export const selectUser = state => state.auth.user;\nexport const selectIsLoggedIn = state => state.auth.isLoggedIn;\nexport const selectTheme = state => state.auth.user.theme;\nexport const selectIsFetchingCurrent = state =>\n  state.auth.isFetchingCurrentUser;\n   export const selectAvatar = state => state.auth.user.avatarURL;\n\nconst authSelectors = {\n  selectUser,\n  selectIsLoggedIn,\n  selectTheme,\n  selectIsFetchingCurrent,\n  selectAvatar,\n};\nexport default authSelectors;\n","import { ErrorMessage, Formik } from 'formik';\nimport { validationSchema } from 'validationSchemas/validationSchema';\nimport UI_MSGS from 'constants/AuthUIConstants';\n\nimport Sprite from '../../assets/images/sprite.svg';\nimport { useState } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Notify, Report } from 'notiflix';\nimport { setAvatar, setUser } from 'redux/user/userAPISlice';\n\nimport {\n  Container,\n  FormWrap,\n  AvatarWrapper,\n  IconAvatar,\n  IconButton,\n  IconPlus,\n  Img,\n  ImgWrapper,\n  FormikForm,\n  Label,\n  FormikInput,\n  Wrap,\n  Icon,\n  IconBtn,\n} from './ModalEditProfile.styled';\nimport { notifyInit } from 'helpers/notifyInit';\n\nimport { selectAvatar } from 'redux/auth/authSelectors';\nimport Loader from 'components/Loader/Loader';\nimport {\n  useUpdateAvatarMutation,\n  useUpdateUserMutation,\n} from 'Services/API_Component';\nimport ModalLayout from 'components/ModalLayout/ModalLayout';\nimport { ButtonWithoutIcon } from 'components/Buttons/Button';\n\nexport const ModalEditProfile = ({ title, open, handleClose }) => {\n  const [showPassword, setShowPassword] = useState(false);\n  const togglePassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const [updateAvatar, { isLoading }] = useUpdateAvatarMutation();\n  const [updateUser, { isLoading: isUpdateUserLoading }] =\n    useUpdateUserMutation();\n\n  const dispatch = useDispatch();\n  const currentImage = useSelector(selectAvatar);\n\n  const user = useSelector(state => state.auth.user);\n  // const currentImage=useSelector(state=>state.auth.user.avatarURL)\n\n  const handleAvatarChange = async event => {\n    const file = event.target.files[0];\n\n    if (!file) {\n      return;\n    }\n\n    const formData = new FormData();\n\n    formData.append('avatarURL', file);\n\n    try {\n      const response = await updateAvatar(formData);\n\n      if (response.data?.avatarURL) {\n        const newAvatarURL = response.data.avatarURL;\n\n        dispatch(setAvatar(newAvatarURL));\n        Report.success('Successful', 'Avatar updated successfully!', 'Okay');\n        // handleClose();\n      } else {\n        Report.failure('Error!', 'Error updating avatar!', 'Okay');\n      }\n    } catch (error) {\n      Report.failure('Error!', `'An error occurred:' ${error}`, 'Okay');\n    }\n    // handleClose();\n  };\n\n  const handleSubmit = async values => {\n    const trimmedValues = {\n      name: values.name.trim(),\n      email: values.email.trim(),\n      password: values.password.trim(),\n    };\n    try {\n      const response = await updateUser(trimmedValues);\n\n      if (response.error) {\n        Notify.failure('Error updating the profile:', response.error);\n      } else {\n        dispatch(setUser(trimmedValues));\n\n        Report.success('Successful', 'User profile updated!', 'Okay');\n        handleClose();\n      }\n    } catch (error) {\n      Notify.failure('Error updating the profile:', error);\n    }\n  };\n\n  return (\n    <>\n      <ModalLayout title={title} open={open} handleClose={handleClose}>\n        {(isLoading || isUpdateUserLoading) && <Loader />}\n        <Container sx={{ width: { 0: '77vw', 375: '287px', 768: '352px' } }}>\n          <FormWrap>\n            <AvatarWrapper>\n              <ImgWrapper>\n                {currentImage.includes('gravatar') ? (\n                  <IconAvatar aria-label=\"User picture\">\n                    <use href={`${Sprite}#icon-user`}></use>\n                  </IconAvatar>\n                ) : (\n                  <Img src={currentImage} alt=\"User picture\" />\n                )}\n\n                <IconButton\n                  onClick={() => document.getElementById('avatarURL').click()}\n                  aria-label=\"add avatar\"\n                >\n                  <IconPlus>\n                    <use href={`${Sprite}#icon-plus`}></use>\n                  </IconPlus>\n                  <input\n                    id=\"avatarURL\"\n                    name=\"avatarURL\"\n                    type=\"file\"\n                    accept=\"image/*\"\n                    onChange={handleAvatarChange}\n                    style={{ display: 'none' }}\n                  />\n                </IconButton>\n              </ImgWrapper>\n            </AvatarWrapper>\n\n            <Formik\n              initialValues={{\n                name: `${user.name}`,\n                email: `${user.email}`,\n                password: '',\n              }}\n              validationSchema={validationSchema}\n              onSubmit={handleSubmit}\n            >\n              {({\n                values,\n                errors,\n                touched,\n                dirty,\n                handleBlur,\n                handleChange,\n                isValid,\n              }) => (\n                <>\n                  <FormikForm>\n                    <Label htmlFor=\"name\">\n                      <FormikInput\n                        autoComplete=\"off\"\n                        id=\"name\"\n                        name=\"name\"\n                        type=\"text\"\n                        placeholder=\"Enter your name\"\n                        value={values.name}\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        title={UI_MSGS.INPUT_NAME_TITLE}\n                      />\n                      {touched.name && errors.name && dirty && (\n                        <ErrorMessage\n                          name=\"name\"\n                          render={msg => {\n                            Notify.warning(` ${msg}`, notifyInit);\n                          }}\n                        />\n                      )}\n                    </Label>\n\n                    <Label htmlFor=\"email\">\n                      <FormikInput\n                        autoComplete=\"off\"\n                        id=\"email\"\n                        name=\"email\"\n                        type=\"email\"\n                        placeholder=\"Enter your email\"\n                        value={values.email}\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        title={UI_MSGS.INPUT_EMAIL_TITLE}\n                      />\n                      {touched.email && errors.email && dirty && (\n                        <ErrorMessage\n                          name=\"email\"\n                          render={msg => {\n                            Notify.warning(` ${msg}`, notifyInit);\n                          }}\n                        />\n                      )}\n                    </Label>\n\n                    <Label htmlFor=\"password\">\n                      <Wrap>\n                        <FormikInput\n                          autoComplete=\"off\"\n                          id=\"password\"\n                          name=\"password\"\n                          type={showPassword ? 'text' : 'password'}\n                          placeholder=\"Create a password\"\n                          value={values.password}\n                          onBlur={handleBlur}\n                          onChange={handleChange}\n                          title={UI_MSGS.INPUT_PWD_TITLE}\n                        />\n                        <IconBtn\n                          type=\"button\"\n                          onClick={togglePassword}\n                          active={showPassword}\n                          className={showPassword ? 'active' : ''}\n                          aria-label=\"Toggle Password Visibility\"\n                        >\n                          <Icon>\n                            <use href={`${Sprite}#icon-eye`}></use>\n                          </Icon>\n                        </IconBtn>\n                      </Wrap>\n\n                      {touched.password&&errors.password && dirty && (\n                        <ErrorMessage\n                          name=\"password\"\n                          render={msg => {\n                            Notify.warning(` ${msg}`, notifyInit);\n                          }}\n                        />\n                      )}\n                    </Label>\n\n                    {/* <Button\n                      type=\"submit\"\n                      disabled={!dirty || !isValid}\n                      aria-label=\"Submit\"\n                    >\n                      Send\n                    </Button> */}\n                    <ButtonWithoutIcon\n                      title={'Send'}\n                      type={'submit'}\n                      disabled={!isValid}\n                    ></ButtonWithoutIcon>\n                  </FormikForm>\n                </>\n              )}\n            </Formik>\n          </FormWrap>\n        </Container>\n      </ModalLayout>\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const UserInfoContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  color: var(--primary-text-color);\n  transition: color 300ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n     color: var(--header-theme-color);\n  }\n`;\n\nexport const UserName = styled.p`\n    margin-right: 8px;\n    \n    font-size: 14px;\n    font-weight: 500;\n    letter-spacing: -0.28px;\n`;\n\nexport const EmptyAvatar = styled.div`\n    width: 32px;\n    height: 32px;\n    background: var(--primary-text-color);\n    border-radius: 8px;\n`;\n\nexport const ImgAvatar = styled.img`\n    width: 32px;\n    height: 32px;\n    border-radius: 8px;\n`;","import { useState } from 'react';\nimport { ModalEditProfile } from 'components/ModalEditProfile/ModalEditProfile';\nimport {\n  EmptyAvatar,\n  ImgAvatar,\n  UserInfoContainer,\n  UserName,\n} from './UserInfo.styled';\n\nexport const UserInfo = ({ name = 'User', avatarURL }) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const modalStateChange = () => setIsModalOpen(!isModalOpen);\n\n  return (\n    <>\n      <UserInfoContainer onClick={modalStateChange}>\n        <UserName>{name}</UserName>\n        <div>\n          {avatarURL ? (\n            <ImgAvatar src={avatarURL} alt=\"User Avatar\" />\n          ) : (\n            <EmptyAvatar />\n          )}\n        </div>\n      </UserInfoContainer>\n\n      <ModalEditProfile\n        title={'Edit  profile'}\n        open={isModalOpen}\n        handleClose={modalStateChange}\n      />\n    </>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport {\n  HeaderContainer,\n  ThemeButton,\n  ThemeContainer,\n  ThemeUL,\n  ThemeWrap,\n} from './Header.styled';\nimport sprite from '../../assets/images/sprite.svg';\nimport { NavBtn } from './NavBtn/NavBtn';\nimport { UserInfo } from './UserInfo/UserInfo';\nimport { useSelector } from 'react-redux';\nimport { selectUser } from 'redux/auth/authSelectors';\nimport { API } from 'Services/API';\n\nexport const Header = ({ handleSidebarToggle }) => {\n  const { avatarURL, name, theme } = useSelector(selectUser);\n  const [themeListVisible, setThemeListVisible] = useState(false);\n  const [selectedTheme, setSelectedTheme] = useState(theme);\n  const [themeUser] = API.useThemeUserMutation();\n  const themeList = ['light', 'dark', 'violet'];\n\n  const handleThemeList = () => {\n    setThemeListVisible(!themeListVisible);\n  };\n\n  const closeThemeList = () => {\n    setThemeListVisible(false);\n  };\n\n  const handleThemeChange = async (e) => {\n    setSelectedTheme(e.target.value);\n    try {\n      await themeUser({theme: e.target.value});\n      closeThemeList();\n    } catch (error) {\n      console.error('Error updating theme:', error);\n    };\n  };\n  \n\n  useEffect(() => {\n    document.body.classList.add(selectedTheme);\n    return () => {\n      document.body.classList.remove(selectedTheme);\n    };\n  }, [selectedTheme]);\n\n  useEffect(() => {\n    const handleWindowClick = event => {\n      if (event.target.nodeName !== 'BUTTON') {\n        closeThemeList();\n      }\n    };\n\n    const handleKeyDown = event => {\n      if (event.key === 'Escape') {\n        closeThemeList();\n      }\n    };\n\n    window.addEventListener('mousedown', handleWindowClick);\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('mousedown', handleWindowClick);\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [themeListVisible]);\n\n  return (\n    <HeaderContainer>\n      <NavBtn handleSidebarToggle={handleSidebarToggle} />\n      <ThemeContainer>\n        <ThemeWrap onClick={handleThemeList}>\n          <p>Theme</p>\n          <svg width=\"16px\" height=\"16px\">\n            <use href={sprite + '#icon-drop-down'}></use>\n          </svg>\n        </ThemeWrap>\n        <ThemeUL className={themeListVisible ? 'visible' : ''}>\n          {themeList.map(theme => (\n            <li key={theme}>\n              <ThemeButton\n                selected={selectedTheme === theme}\n                disabled={selectedTheme === theme}\n                value={theme}\n                onClick={handleThemeChange}\n              >\n                {theme}\n              </ThemeButton>\n            </li>\n          ))}\n        </ThemeUL>\n      </ThemeContainer>\n      <UserInfo name={name} avatarURL={avatarURL} />\n    </HeaderContainer>\n  );\n};\n","import { Box, Button, Typography } from '@mui/material';\nimport ModalBoard from 'components/ModalBoard/ModalBoard';\nimport { SIDEBARWIDTH } from 'components/Sidebar/SidebarCONSTANTS';\nimport { useState } from 'react';\n\nexport const DefaultScreenPage = () => {\n  const [isModalBoardOpen, setIsModalBoardOpen] = useState(false);\n  const modalBoardStateChange = () => setIsModalBoardOpen(!isModalBoardOpen);\n  return (\n    <>\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          pt: { 0: 9.25, 768: 11, 1440: 9.75 },\n          pb: { 0: 3, 768: 4, 1440: 1 },\n          pl: { 0: 2.5, 768: 4, 1440: 3 },\n          pr: { 0: 2.5, 768: 4, 1440: 3 },\n          height: '100vh',\n          width: { 0: '100vw', 1440: `calc(100vw - ${SIDEBARWIDTH}px)` },\n          flexGrow: 1,\n          backgroundColor: 'var(--primary-bg-color)',\n        }}\n      >\n        <Box sx={{ width: '486px' }}>\n          <Typography\n            sx={{\n              padding: 0,\n              margin: 0,\n              color: 'var(--secondary-text-color)',\n              textAlign: 'center',\n              fontFamily: 'Poppins',\n              fontSize: { 0: '12px', 768: '14px' },\n              fontStyle: 'normal',\n              fontWeight: 400,\n              lineHeight: { 0: '16px', 768: '18px' },\n              letterSpacing: { 0: '-0.24px', 768: '-0.28px' },\n            }}\n          >\n            Before starting your project, it is essential{' '}\n            <Button\n              onClick={modalBoardStateChange}\n              type=\"button\"\n              sx={{\n                verticalAlign: 'baseline',\n                padding: 0,\n                margin: 0,\n                color: 'var(--default-screen-page-link-color)',\n                backgroundColor: 'transparent',\n                fontFamily: 'Poppins',\n                border: 'none',\n                cursor: 'pointer',\n                textDecoration: 'none',\n                outline: 'none',\n                textTransform: 'lowercase',\n                fontSize: { 0: '12px', 768: '14px' },\n\n                '&:hover, &:focus': {\n                  textDecoration: 'underline',\n                  backgroundColor: 'transparent',\n                },\n              }}\n            >\n              to create a board\n            </Button>{' '}\n            to visualize and track all the necessary tasks and milestones. This\n            board serves as a powerful tool to organize the workflow and ensure\n            effective collaboration among team members.\n          </Typography>\n        </Box>\n      </Box>\n\n      <ModalBoard\n        boardTitle={'New board'}\n        open={isModalBoardOpen}\n        handleClose={modalBoardStateChange}\n      />\n    </>\n  );\n};\n","import { AppBar, Box } from '@mui/material';\n\nimport { useState } from 'react';\nimport { SIDEBARWIDTH } from 'components/Sidebar/SidebarCONSTANTS';\nimport { Sidebar } from 'components/Sidebar/Sidebar';\nimport { Header } from 'components/Header/Header';\nimport { Outlet } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { selectIsLoggedIn } from 'redux/auth/authSelectors';\nimport { DefaultScreenPage } from 'pages/ScreensPage/DefaultScreenPage';\nimport { API } from 'Services/API';\n\nconst HomePage = () => {\n  const isLoggdIn = useSelector(selectIsLoggedIn);\n  const [isMobileSidebar, setIsMobileSidebar] = useState(false);\n  const handleSidebarToggle = () => setIsMobileSidebar(!isMobileSidebar);\n\n  const { data: boards } = API.useGetBoardsQuery();\n\n  return (\n    isLoggdIn && (\n      <Box sx={{ display: 'flex', overflowX: 'hidden' }}>\n        <AppBar\n          position=\"fixed\"\n          sx={{\n            width: { 1440: `calc(100% - ${SIDEBARWIDTH}px)` },\n            height: { 768: 68 },\n            ml: { 1440: `${SIDEBARWIDTH}px` },\n            boxShadow: 'none',\n            backgroundColor: '#161616',\n          }}\n        >\n          <Header handleSidebarToggle={handleSidebarToggle} />\n        </AppBar>\n\n        <Sidebar\n          isMobileSidebar={isMobileSidebar}\n          handleSidebarToggle={handleSidebarToggle}\n        />\n\n        {boards?.length === 0 ? <DefaultScreenPage /> : <Outlet />}\n      </Box>\n    )\n  );\n};\n\nexport default HomePage;\n"],"names":["API","useRegisterMutation","useLogInMutation","useLogOutMutation","useUpdateAvatarMutation","useGetCurrentUserQuery","useHelpUserMutation","useThemeUserMutation","useUpdateUserMutation","useGetBoardsQuery","useGetBoardContentByIdQuery","useGetBoardByIdQuery","useAddBoardsMutation","useDeleteBoardByIdMutation","useUpdateBoardByIdMutation","useAddColumnMutation","useUpdateColumnByIdMutation","useDeleteColumnByIdMutation","useGetAllCardsQuery","useAddCardMutation","useUpdateCardByIdMutation","useDeleteCardByIdMutation","useUpdateCardColumnByIdMutation","useLoginGoogleUserMutation","slideLigtning","keyframes","_templateObject","_taggedTemplateLiteral","slideToRight","_templateObject2","SidebarLogoIcon","styled","fill","width","height","animation","concat","animationTimingFunction","SidebarLogoWrap","_ref","display","justifyContent","alignItems","gap","transform","isSidebarShown","animationFillMode","SidebarLogoIconWrap","backgroundColor","borderRadius","overflow","SidebarLogoText","margin","color","fontFamily","fontSize","fontWeight","letterSpacing","StartPageLogoWrap","StartPageLogoIconWrap","StartPageLogoIcon","StartPageLogoText","SidebarLogo","sx","_jsx","_Fragment","children","_jsxs","href","sprite","StartPageLogo","_ref2","style","FormStyled","MUI","flexDirection","ButtonClose","InputStyled","TransparentSVG","_templateObject3","UlStyled","_templateObject4","UlBgStyled","_templateObject5","ImgStyled","_templateObject6","_templateObject7","LiIconsStyled","_templateObject8","modalStyles","position","top","left","border","background","padding","titleStyles","fontStyle","lineHeight","marginBottom","title","open","handleClose","Modal","onClose","Box","Typography","variant","type","onClick","stroke","SIDEBARWIDTH","SIDEBARMOBILEWIDTH","slideToLeft","slideToDown","shakeAnimation","Subtitle","CreateBoardWrap","paddingBottom","paddingTop","borderTop","borderBottom","TitleCreate","HelpBox","Image","_ref3","HelpText","_ref4","HelpButton","_ref5","cursor","textDecoration","outline","HelpIcon","_ref6","startAnimation","slideAround","BoardItemWrap","BoardItemIcon","BoardItemCurrentIcon","BoardItemTitleWrap","whiteSpace","BoardItemTitle","titleWidth","titleWrapWidth","current","slideText","animationName","animationDuration","animationIterationCount","animationDirection","setTitleWidth","measureRef","useRef","useEffect","observer","ResizeObserver","entries","_step","_iterator","_createForOfIteratorHelper","s","n","done","entry","value","target","contentRect","err","e","f","currentRef","observe","unobserve","ref","visibility","arrIcons","arrBG","titleStyle","board","boardTitle","dispatch","useDispatch","boardsIdArray","useSelector","state","boards","_useState","useState","_useState2","_slicedToArray","inputValue","setInputValue","_useState3","iconId","_useState4","setIconId","_useState5","_useState6","setBackground","_API$useAddBoardsMuta","addBoard","_API$useUpdateBoardBy","editBoard","navigate","useNavigate","handleSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","FormData","response","newBoardId","_response","wrap","_context","prev","next","sent","setBoardResponse","data","_id","setBoardId","boardId","setBoardsIdArray","_toConsumableArray","Report","abrupt","t0","formik","handleReset","stop","_x","apply","arguments","validationSchema","Yup","min","max","required","test","Notiflix","description","useFormik","initialValues","onSubmit","ModalLayout","id","name","placeholder","onChange","currentTarget","setFieldValue","onBlur","handleBlur","map","icon","isSelected","transition","bg","index","src","alt","ButtonWithIcon","values","SidebarBoardItemIcon","setStartAnimation","randomNumber","Math","floor","random","interval","setInterval","setTimeout","clearInterval","opacity","SidebarBoardItem","isHovered","setIsHovered","setTitleWrapWidth","_useState7","window","innerWidth","_useState8","screenWidth","setScreenWidth","_useState9","_useState10","isModalOpen","setIsModalOpen","_API$useDeleteBoardBy","deleteBoard","handleResize","debounce","addEventListener","removeEventListener","modalStateChange","MeasureTitleWidth","onMouseEnter","onMouseLeave","pl","pr","right","List","disablePadding","ListItem","ListItemButton","p","m","pointerEvents","event","stopPropagation","length","filteredArray","filter","el","ModalBoard","StrictModeDroppable","props","_objectWithoutProperties","_excluded","enabled","setEnabled","requestAnimationFrame","cancelAnimationFrame","Droppable","_objectSpread","SidebarBoardList","boardsArray","setBoardsArray","currentItemId","setCurrentItemId","myArray","find","newItems","includes","DragDropContext","onDragEnd","result","destination","_boards$splice","splice","source","reorderedBoard","newBoardsIdArray","droppableId","provided","droppableProps","innerRef","mb","Draggable","draggableId","toString","draggableProps","dragHandleProps","LogOutBtnStyled","SpanStyled","Icon","_useLogOutMutation","logOut","handleLogOut","unwrap","logout","setIsLoggedIn","setError","inputStyles","TextareaStyled","_API$useHelpUserMutat","helpUser","email","auth","user","comment","resetForm","status","console","log","message","matches","handleChange","ButtonWithoutIcon","marginTop","isValidSync","SidebarHelpIcon","SidebarContent","isModalBoardOpen","setIsModalBoardOpen","isModalHelpOpen","setIsModalHelpOpen","modalBoardStateChange","modalHelpStateChange","className","styles","pt","pb","flexGrow","ButtonSidebar","AloeVera","LogoutBtn","ModalHelp","Sidebar","Object","assign","_objectDestructuringEmpty","isMobileSidebar","handleSidebarToggle","container","undefined","document","body","component","flexShrink","Drawer","ModalProps","keepMounted","slotProps","backdrop","boxSizing","boxShadow","HeaderContainer","ThemeContainer","ThemeWrap","ThemeUL","ThemeButton","disabled","selected","NavBtn","IconButton","edge","MenuIcon","Container","marginLeft","marginRight","FormWrap","AvatarWrapper","ImgWrapper","IconAvatar","Img","IconPlus","FormikForm","Form","Label","_templateObject9","FormikInput","Field","_templateObject10","Wrap","_templateObject11","_templateObject12","IconBtn","active","rest","_templateObject13","css","_templateObject14","selectUser","selectIsLoggedIn","isLoggedIn","selectAvatar","avatarURL","ModalEditProfile","showPassword","setShowPassword","togglePassword","_useUpdateAvatarMutat","_useUpdateAvatarMutat2","updateAvatar","isLoading","_useUpdateUserMutatio","_useUpdateUserMutatio2","updateUser","isUpdateUserLoading","currentImage","handleAvatarChange","file","formData","_response$data","newAvatarURL","files","append","setAvatar","_callee2","trimmedValues","_context2","trim","password","error","Notify","setUser","_x2","Loader","Sprite","getElementById","click","accept","Formik","errors","touched","dirty","isValid","htmlFor","autoComplete","UI_MSGS","ErrorMessage","render","msg","notifyInit","UserInfoContainer","UserName","EmptyAvatar","ImgAvatar","UserInfo","_ref$name","Header","_useSelector","theme","themeListVisible","setThemeListVisible","selectedTheme","setSelectedTheme","_API$useThemeUserMuta","themeUser","closeThemeList","handleThemeChange","classList","add","remove","handleWindowClick","nodeName","handleKeyDown","key","DefaultScreenPage","textAlign","Button","verticalAlign","textTransform","isLoggdIn","setIsMobileSidebar","overflowX","AppBar","ml","Outlet"],"sourceRoot":""}