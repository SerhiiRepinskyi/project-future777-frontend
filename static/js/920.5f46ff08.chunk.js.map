{"version":3,"file":"static/js/920.5f46ff08.chunk.js","mappings":"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","sources":["Services/API.js","components/Buttons/Button.jsx","components/HeaderDashboard/HeaderDashboard.styled.jsx","components/ModalBoard/ModalBoard.styled.jsx","components/ModalBoard/data.jsx","components/ModalLayout/ModalLayout.jsx","components/Sidebar/SidebarCONSTANTS.js","components/AddCard/AddCard.styled.jsx","components/AddColumn/AddColumn.jsx","components/TaskCard/TaskCard.styled.jsx","components/TaskCard/TaskCard.jsx","components/ColorRadioButtons/ColorRadioButtons.jsx","components/Icons/DropDownIcon/DropDownIcon.styled.jsx","components/Icons/DropDownIcon/DropDownIcon.jsx","components/Popup/Popup.jsx","components/DatePicker/DatePicker.jsx","components/AddCard/AddCard.jsx","components/Column/Column.styled.jsx","components/Column/Column.jsx","components/HeaderDashboard/Filter.styled.jsx","components/HeaderDashboard/Filter.jsx","components/HeaderDashboard/HeaderDashboard.jsx","pages/ScreensPage/ScreenPage.styled.jsx","pages/ScreensPage/ScreensPage.jsx"],"sourcesContent":["import {\n  useRegisterMutation,\n  useLogInMutation,\n  useLogOutMutation,\n  useGetCurrentUserQuery,\n  useUpdateUserMutation,\n  useThemeUserMutation,\n  useAvatarUserMutation,\n  useHelpUserMutation,\n  useGetBoardsQuery,\n  useGetBoardByIdQuery,\n  useAddBoardsMutation,\n  useDeleteBoardByIdMutation,\n  useUpdateBoardByIdMutation,\n  useAddColumnMutation,\n  useUpdateColumnByIdMutation,\n  useDeleteColumnByIdMutation,\n  useGetAllCardsQuery,\n  useAddCardMutation,\n  useUpdateCardByIdMutation,\n  useDeleteCardByIdMutation,\n  useUpdateCardColumnByIdMutation,\n} from './API_Component';\n\nexport const API = {\n  useRegisterMutation,\n  useLogInMutation,\n  useLogOutMutation,\n  useAvatarUserMutation,\n  useGetCurrentUserQuery,\n  useHelpUserMutation,\n  useThemeUserMutation,\n  useUpdateUserMutation,\n  useGetBoardsQuery,\n  useGetBoardByIdQuery,\n  useAddBoardsMutation,\n  useDeleteBoardByIdMutation,\n  useUpdateBoardByIdMutation,\n  useAddColumnMutation,\n  useUpdateColumnByIdMutation,\n  useDeleteColumnByIdMutation,\n  useGetAllCardsQuery,\n  useAddCardMutation,\n  useUpdateCardByIdMutation,\n  useDeleteCardByIdMutation,\n  useUpdateCardColumnByIdMutation,\n};\n","import * as React from 'react';\nimport Button from '@mui/material/Button';\n\nimport { Box, IconButton } from '@mui/material';\n\nimport sprite from '../../assets/images/sprite.svg';\n\n// Кнопка для модалок с иконкой\nexport const ButtonWithIcon = ({ title, onClick, type }) => {\n  return (\n    <Button\n      onClick={onClick}\n      type={type}\n      variant=\"contained\"\n      disableElevation\n      sx={{\n        display: 'flex',\n        gap: '8px',\n        color: '#161616',\n        fontFamily: 'Poppins, sans-serif',\n        alignItems: 'center',\n        textTransform: 'none',\n        borderRadius: '8px',\n        letterSpacing: '-0.02em',\n        fontSize: '14px',\n        background: '#BEDBB0',\n        lineHeight: '21px',\n        fontWeight: '500',\n        fontStyle: 'normal',\n        width: '100%',\n        height: '56px',\n        '&:hover': {\n          background: '#9DC888',\n        },\n      }}\n    >\n      <Box\n        sx={{\n          width: '28px',\n          height: '28px',\n          background: '#161616',\n          borderRadius: '6px',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <svg width=\"14\" height=\"14\" stroke=\"#ffffff\">\n          <use href={sprite + '#icon-add'}></use>\n        </svg>\n      </Box>\n      {title}\n    </Button>\n  );\n};\n\n// Кнопка для модалок без иконки\nexport const ButtonWithoutIcon = ({ title, onClick, type }) => {\n  return (\n    <Button\n      type={type}\n      onClick={onClick}\n      disableElevation\n      sx={{\n        display: 'flex',\n        color: '#161616',\n        fontFamily: 'Poppins, sans-serif',\n        alignItems: 'center',\n        textTransform: 'none',\n        borderRadius: '8px',\n        marginTop: '24px',\n        letterSpacing: '-0.02em',\n        fontSize: '14px',\n        background: '#BEDBB0',\n        lineHeight: '21px',\n        fontWeight: '500',\n        fontStyle: 'normal',\n        width: '100%',\n        height: '56px',\n        '&:hover': {\n          background: '#BEDBB0',\n        },\n      }}\n    >\n      {title}\n    </Button>\n  );\n};\n\n// Кнопка для добавления колонки\nexport const ButtonAdd = ({ onClick }) => {\n  return (\n    <Button\n      onClick={onClick}\n      variant=\"contained\"\n      disableElevation\n      sx={{\n        display: 'flex',\n        gap: '8px',\n        color: '#FFFFFF',\n        fontFamily: 'Poppins, sans-serif',\n        alignItems: 'center',\n        textTransform: 'none',\n        borderRadius: '8px',\n        letterSpacing: '-0.02em',\n        fontSize: '14px',\n        background: '#121212',\n        lineHeight: '21px',\n        fontWeight: '500',\n        fontStyle: 'normal',\n        width: '334px',\n        height: '56px',\n        '&:hover': {\n          background: '#121212',\n        },\n      }}\n    >\n      <Box\n        sx={{\n          width: '28px',\n          height: '28px',\n          background: 'white',\n          borderRadius: '6px',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <svg width=\"14\" height=\"14\" stroke=\"#121212\">\n          <use href={sprite + '#icon-add'}></use>\n        </svg>\n      </Box>\n      Add another column\n    </Button>\n  );\n};\n\n//Кнопка для Sidebar\nexport const ButtonSidebar = ({ onClick }) => {\n  return (\n    <IconButton\n      type=\"button\"\n      onClick={onClick}\n      sx={{\n        width: '40px',\n        height: '36px',\n        borderRadius: '6px',\n        background: 'var(--sidebar-icon-plus-bg-color)',\n\n        '&:hover, &:focus': {\n          background: 'var(--sidebar-icon-plus-bg-color-HOVER-FOCUS)',\n        },\n      }}\n    >\n      <svg width=\"20\" height=\"20\" stroke=\"var(--sidebar-icon-plus-color)\">\n        <use href={sprite + '#icon-add'}></use>\n      </svg>\n    </IconButton>\n  );\n};\n\n","import styled from '@emotion/styled';\nexport const Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  padding-bottom: 15px;\n  // padding: 14px 24px;\n  // background: #1f1f1f;\n  font-family: Poppins;\n\n  //   @media (min-width: 1280px) {\n  //       height: 48px;\n  //   };\n  //   @media (min-width: 768px) {\n  //       height: 80px;\n  //   };\n  //   @media (min-width: 375px) {\n  //       height: 134px;\n  //   };\n  //   @media (max-width: 374px) {\n  //       max-height: 134px;\n  //   };\n`;\n\nexport const TitleDashBoard = styled.p`\n  font-size: 18px;\n  font-weight: 500;\n  letter-spacing: -0.36px;\n  margin: 0;\n  color: #ffffff;\n`;\n\nexport const FilterButton = styled.button`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 2px;\n  background-color: transparent;\n  border: none;\n  outline: none;\n  opacity: 0.8;\n  color: #ffffffcc;\n  cursor: pointer;\n`;\nexport const TitleFilter = styled.p`\n  font-size: 14px;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n  color: #ffffffcc;\n  margin-left: 8px;\n  font-family: Poppins;\n`;\n","import styled from '@emotion/styled';\n\nexport const ButtonClose = styled.button`\n  margin: 0;\n  padding: 0;\n  position: absolute;\n  right: 10px;\n  top: 10px;\n  width: 24px;\n  height: 24px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: rgba(255, 255, 255, 0.5);\n\n  background-color: transparent;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    border: 1px solid #ffffff;\n    color: rgba(255, 255, 255, 1);\n  }\n`;\n\nexport const FormStyled = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n  margin-bottom: 24px;\n`;\n\nexport const InputStyled = styled.input`\n  resize: none;\n  color: #ffffff;\n  padding: 14px 14px;\n  background-color: transparent;\n  border: 1px solid rgba(190, 219, 176, 0.4);\n  border-radius: 8px;\n  margin-bottom: 10px;\n  :focus {\n    border: 1px solid #bedbb0;\n    outline: none;\n  }\n  ::placeholder {\n    color: #ffffff;\n    opacity: 30%;\n  }\n`;\n\nexport const TransparentSVG = styled.svg`\n  width: 18px;\n  height: 18px;\n  stroke: rgba(255, 255, 255, 0.5);\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    // width: 24px;\n    // height: 24px;\n    stroke: #bedbb0;\n  }\n`;\n\nexport const UlStyled = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 8px;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  margin-bottom: 14px;\n`;\n\nexport const UlBgStyled = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 4px;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  margin-bottom: 14px;\n  width: 270px;\n`;\n\nexport const LiStyled = styled.li`\n  display: flex;\n  width: 28px;\n  height: 28px;\n  border-radius: 14px;\n`;\n\nexport const ImgStyled = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  object-position: center;\n  border-radius: 5px;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    border: 1px solid #bedbb0;\n  }\n`;\n\nexport const LiIconsStyled = styled.li`\n  display: flex;\n  width: 18px;\n  height: 18px;\n`;\n","export const arrIcons = [\n  '#icon-Project',\n  '#icon-star',\n  '#icon-loading',\n  '#icon-puzzle',\n  '#icon-container',\n  '#icon-lightning',\n  '#icon-colors',\n  '#icon-hexagon',\n];\n\nexport const arrBG = [\n  'https://res.cloudinary.com/dpurp913m/image/upload/v1693060747/teamProject/bcg-laptop-22_w6d1ix.jpg',\n  'https://res.cloudinary.com/dpurp913m/image/upload/v1693060747/teamProject/bcg-laptop-21_lhyxtz.jpg',\n  'https://res.cloudinary.com/dpurp913m/image/upload/v1693060747/teamProject/bcg-laptop-23_nvf3nr.jpg',\n  'https://res.cloudinary.com/dpurp913m/image/upload/v1693060747/teamProject/bcg-laptop-19_jgsoar.jpg',\n  'https://res.cloudinary.com/dpurp913m/image/upload/v1693060746/teamProject/bcg-laptop-18_lz8hnp.jpg',\n  'https://res.cloudinary.com/dpurp913m/image/upload/v1693060746/teamProject/bcg-laptop-16_hbougf.jpg',\n  'https://res.cloudinary.com/dpurp913m/image/upload/v1693060746/teamProject/bcg-laptop-15_p5qieq.jpg',\n  'https://res.cloudinary.com/dpurp913m/image/upload/v1693060746/teamProject/bcg-laptop-13_kzosan.jpg',\n  'https://res.cloudinary.com/dpurp913m/image/upload/v1693060746/teamProject/bcg-laptop-12_nehdkx.jpg',\n  'https://res.cloudinary.com/dpurp913m/image/upload/v1693060747/teamProject/bcg-laptop-24_ob1z2m.jpg',\n  'https://res.cloudinary.com/dpurp913m/image/upload/v1693060747/teamProject/bcg-laptop-25_cdzpq5.jpg',\n  'https://res.cloudinary.com/dpurp913m/image/upload/v1693060747/teamProject/bcg-laptop-20_je1cm3.jpg',\n  'https://res.cloudinary.com/dpurp913m/image/upload/v1693060746/teamProject/bcg-laptop-17_ypzhw7.jpg',\n  'https://res.cloudinary.com/dpurp913m/image/upload/v1693060746/teamProject/bcg-laptop-14_gvggrl.jpg',\n  'https://res.cloudinary.com/dpurp913m/image/upload/v1693060746/teamProject/bcg-laptop-11_rfi4bm.jpg',\n];\n","import { Modal, Box, Typography, useMediaQuery } from '@mui/material';\nimport sprite from '../../assets/images/sprite.svg';\nimport { ButtonClose } from 'components/ModalBoard/ModalBoard.styled';\n\n// import { useState } from 'react';\n\nconst ModalStyles = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 350,\n  borderRadius: 8 / 4,\n  border: '1px solid rgba(190, 219, 176, 0.50)',\n  background: '#151515',\n  padding: 24/8,\n};\n\nconst titleStyles = {\n  color: '#FFF',\n  fontSize: 18,\n  fontStyle: 'normal',\n  fontWeight: 500,\n  lineHeight: 'normal',\n  letterSpacing: -0.36,\n  marginBottom: 24 / 8,\n};\n\nconst ModalLayout = ({ title, open, handleClose, children }) => {\n   const adaptiveStyle = useMediaQuery('(min-width: 1440px)');\n  //   const [open, setOpen] = useState(false);\n  //   const handleOpen = () => setOpen(true);\n  //   const handleClose = () => setOpen(false);\n\n  return (\n    <>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box sx={{ ...ModalStyles, width: adaptiveStyle ? 350 : 335 }}>\n          <Typography variant=\"h2\" sx={titleStyles}>\n            {title}\n          </Typography>\n          <ButtonClose type=\"button\" onClick={handleClose}>\n            <svg style={{ stroke: 'currentcolor' }} width=\"18\" height=\"18\">\n              <use href={sprite + '#icon-x-close'} />\n            </svg>\n          </ButtonClose>\n          {children}\n        </Box>\n      </Modal>\n    </>\n  );\n};\n\nexport default ModalLayout;\n","export const SIDEBARWIDTH = 260;\nexport const SIDEBARMOBILEWIDTH = 225;\n  \n\n\n\n","import styled from '@emotion/styled';\nimport RadioButtonIcon from '@mui/material/Radio';\n\nexport const ComponentWrapper = styled.div`\n  padding: 0px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const FormStyled = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n  margin-bottom: 0px;\n`;\n\nexport const InputStyled = styled.input`\n  resize: none;\n  color: #ffffff;\n  padding: 14px 14px;\n  background-color: transparent;\n  border: 1px solid #bedbb0;\n  border-radius: 8px;\n  :focus {\n    border: 2px solid #bedbb0;\n    outline: none;\n  }\n  ::placeholder {\n    color: #ffffff;\n    opacity: 30%;\n  }\n`;\n\nexport const TextareaStyled = styled.textarea`\n  display: flex;\n  min-height: 155px;\n  color: #ffffff;\n  resize: none;\n  padding: 14px 14px;\n  background-color: transparent;\n  border: 1px solid #bedbb0;\n  border-radius: 8px;\n  text-align: top;\n  :focus {\n    border: 2px solid #bedbb0;\n    outline: none;\n  }\n  ::placeholder {\n    color: #ffffff;\n    opacity: 30%;\n  }\n`;\n\nexport const LabelColorBox = styled.div`\n  display: flex;\n  gap: 4px;\n`;\n\nexport const RadioIcon = styled(RadioButtonIcon)`\n  width: 14px;\n  height: 14px;\n  border-radius: 50%;\n  background-color: #8fa1d0;\n`;\n\nexport const RadioIconChecked = styled(RadioButtonIcon)`\n  width: 14px;\n  height: 14px;\n  border-radius: 50%;\n  border: solid 2px #8fa1d0;\n  background-color: none;\n`;\n\nexport const SubWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: left;\n  gap: 4px;\n`;\n\nexport const DateWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 4px;\n`;\n\nexport const DateText = styled.p`\n  color: #bedbb0;\n  font-size: 14px;\n  margin: 0;\n`;\n\nexport const SubTitle = styled.p`\n  color: #ffffff;\n  font-size: 12px;\n  opacity: 50%;\n  margin: 0;\n`;\n","import React from 'react';\nimport { API } from 'Services/API';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { FormStyled, InputStyled } from '../AddCard/AddCard.styled';\nimport { ButtonWithIcon } from 'components/Buttons/Button';\nimport ModalLayout from '../ModalLayout/ModalLayout';\n\nconst AddColumn = ({ open, modalType, boardId, close }) => {\n  const [addColumn] = API.useAddColumnMutation();\n\n  const validationSchema = Yup.object({\n    title: Yup.string()\n      .min(2, 'Must be more then 2 symbols')\n      .required('Title is required')\n      .matches(\n        /^(\\w*)$/,\n        'Title may contain only letters, apostrophe, dash and spaces.'\n      ),\n  });\n\n  const formik = useFormik({\n    initialValues: { title: '' },\n    onSubmit: title => handleSubmit(title),\n    validationSchema,\n  });\n\n  const handleSubmit = async title => {\n\n    try {\n      await addColumn({ boardId, title });\n\n      close();\n    } catch (error) {\n      console.log(error.message);\n    }\n\n    formik.handleReset();\n  };\n\n  return (\n    <ModalLayout title={modalType} open={open} handleClose={close}>\n      <FormStyled onSubmit={formik.handleSubmit}>\n        <InputStyled\n          id=\"title\"\n          name=\"title\"\n          placeholder=\"Title\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.title}\n        />\n        <ButtonWithIcon\n          title={modalType === 'Add column' ? 'Add' : 'Edit'}\n          type={'submit'}\n        />\n      </FormStyled>\n    </ModalLayout>\n  );\n};\n\nexport default AddColumn;\n","import styled from '@emotion/styled';\nconst getPriorityColor = priority => {\n  switch (priority) {\n    case 1:\n      return '#BEDBB0';\n    case 2:\n      return '#8FA1D0';\n    case 3:\n      return '#E09CB5';\n    default:\n      return '#bababa';\n  }\n};\nexport const TypographyStylesTitle = {\n  color: '#FFF',\n  fontSize: '14px',\n  fontWeight: '600',\n  letterSpacing: '-0.28px',\n  marginBottom: '8px',\n};\nexport const TypographyStylesDescription = {\n  color: 'rgba(255, 255, 255, 0.50)',\n  fontSize: '12px',\n  fontWeight: '400',\n  letterSpacing: '-0.24px',\n  whitespace: 'nowrap',\n  lineHeight: '16px',\n  width: '290px' /* Задаємо фіксовану ширину, де текст буде обрізаний */,\n  whiteSpace: 'nowrap' /* Забороняємо перенесення тексту на новий рядок */,\n  overflow:\n    'hidden' /* Приховуємо будь-який текст, який не поміщається в обрізаному вікні */,\n  textOverflow: 'ellipsis',\n};\nexport const TypographyStylesPriority = {\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'start',\n  gap: '4px',\n  color: ' rgba(255, 255, 255, 0.50)',\n  fontFamily: 'Poppins',\n  fontSize: '8px',\n\n  fontWeight: '400',\n  lineHeigt: 'normal',\n  letterSpacing: '-0.16px',\n};\nexport const CardContentStyles = {\n  borderBottom: '1px solid rgba(255, 255, 255, 0.10)',\n  padding: '0px',\n  paddingBottom: '14px',\n  marginBottom: '14px',\n};\nexport const ActionsBox = {\n  display: 'flex',\n  alignItems: 'base-line',\n  justifyContent: 'center',\n  gap: '14px',\n};\nexport const CardActionsStyled = {\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n};\nexport const Circle = styled.div`\n  width: 12px;\n  height: 12px;\n  border-radius: 50%;\n  background-color: ${props => getPriorityColor(props.priority)};\n`;\nexport const CardStyles = styled.div`\n  width: 334px;\n  height: 154px;\n  padding-top: 14px;\n  padding-bottom: 14px;\n  padding-left: 24px;\n  padding-right: 20px;\n  background-color: #121212;\n  border-radius: 8px;\n  border-left: 4px solid ${props => getPriorityColor(props.priority)};\n`;\nexport default getPriorityColor;\n","import React from 'react';\nimport { format } from 'date-fns';\nimport { useState } from 'react';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport CardActions from '@mui/material/CardActions';\nimport { IconButton } from '@mui/material';\nimport MenuItem from '@mui/material/MenuItem';\nimport Menu from '@mui/material/Menu';\nimport Box from '@mui/material/Box';\nimport sprite from '../../assets/images/sprite.svg';\nimport { styled } from '@mui/material';\nimport getPriorityColor from './TaskCard.styled';\n\nimport { deleteCard, setCardData } from '../../redux/tasks/cardsAPISlice';\nimport { useDispatch } from 'react-redux';\nimport { API } from 'Services/API';\n\nimport {\n  TypographyStylesTitle,\n  TypographyStylesDescription,\n  TypographyStylesPriority,\n  CardContentStyles,\n  ActionsBox,\n  CardActionsStyled,\n  Circle,\n} from './TaskCard.styled';\nconst StyledIconButton = styled(IconButton)`\n  &:hover svg {\n    stroke: #bedbb0;\n    stroke-opacity: 1;\n    transition: stroke 0.3s;\n  }\n`;\n\nconst CardStyles = styled(Card)`\n  width: 334px;\n  height: 154px;\n  padding-top: 14px;\n  padding-bottom: 14px;\n  padding-left: 24px;\n  padding-right: 20px;\n  background-color: #121212;\n  border-radius: 8px;\n  border-left: 4px solid ${props => getPriorityColor(props.priority)};\n`;\n\nconst ListMenuStyles = styled(MenuItem)`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  color: rgba(255, 255, 255, 0.5);\n  font-family: 'Poppins';\n  font-size: 14px;\n\n  font-weight: 400px;\n\n  &:hover {\n    color: #bedbb0;\n  }\n  &:hover svg {\n    stroke: #bedbb0;\n    stroke-opacity: 1;\n    transition: stroke 0.3s;\n  }\n`;\nfunction TaskCard({ title, description, priority, deadline, moveCard, id }) {\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [updateCardById] = API.useUpdateCardByIdMutation();\n  const [deleteCardById] = API.useDeleteCardByIdMutation();\n  const dispatch = useDispatch();\n\n  const date = new Date(`${deadline}`);\n  const formattedDate = format(date, 'dd/MM/yyyy');\n\n  const handleOpenMenu = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleCloseMenu = () => {\n    setAnchorEl(null);\n  };\n\n  const handleMoveCard = newColumn => {\n    handleCloseMenu();\n    moveCard(newColumn);\n  };\n  const handleDeleteCard = async () => {\n    try {\n      const response = await deleteCardById({ id });\n      dispatch(deleteCard(response));\n    } catch (error) {\n      console.error('Error deleting card:', error);\n    }\n  };\n\n  const handleUpdateCard = async () => {\n    try {\n      const updatedData = {\n        title,\n        description,\n        priority,\n        deadline,\n\n        /* об'єкт з оновленими даними картки */\n      };\n      const response = await updateCardById({ id, updatedData });\n      dispatch(setCardData(response));\n    } catch (error) {\n      console.error('Error updating card:', error);\n    }\n  };\n\n  return (\n    <CardStyles priority={priority}>\n      <CardContent sx={CardContentStyles}>\n        <Typography sx={TypographyStylesTitle} variant=\"h4\" component=\"div\">\n          Заголовок картки {title}\n        </Typography>\n        <Typography sx={TypographyStylesDescription} variant=\"body2\">\n          Текст або вміст картки буде тут. {description}\n        </Typography>\n      </CardContent>\n      <CardActions sx={CardActionsStyled}>\n        <Box sx={ActionsBox}>\n          <Typography sx={TypographyStylesPriority} variant=\"body2\">\n            Priority:\n            <Circle priority={priority} />\n            <Typography variant=\"subText\">{priority}</Typography>\n          </Typography>\n          <Typography sx={TypographyStylesPriority} variant=\"body2\">\n            Deadline:\n            <Box\n              sx={{\n                width: '14px',\n                height: '14px',\n                color: '#fff',\n                fontFamily: 'Poppins',\n                fontSize: '10px',\n                fontStyle: 'normal',\n                fontWeight: 400,\n                lineHeight: 'normal',\n                letterSpacing: '-0.2px',\n              }}\n            >\n              {' '}\n              {formattedDate}\n            </Box>\n          </Typography>\n        </Box>\n        <Box>\n          <StyledIconButton onClick={handleOpenMenu} aria-label=\"next-colomn\">\n            <svg stroke=\"#fff\" strokeOpacity=\"0.5\" width=\"16\" height=\"16\">\n              <use href={sprite + '#icon-active'} />\n            </svg>\n          </StyledIconButton>\n          <StyledIconButton onClick={handleUpdateCard} aria-label=\"edit\">\n            <svg stroke=\"#fff\" strokeOpacity=\"0.5\" width=\"16\" height=\"16\">\n              <use href={sprite + '#icon-pencil'} />\n            </svg>\n          </StyledIconButton>\n          <StyledIconButton onClick={handleDeleteCard} aria-label=\"remove\">\n            <svg stroke=\"#fff\" strokeOpacity=\"0.5\" width=\"16\" height=\"16\">\n              <use href={sprite + '#icon-trash'} />\n            </svg>\n          </StyledIconButton>\n        </Box>\n      </CardActions>\n      <Menu\n        anchorEl={anchorEl}\n        open={Boolean(anchorEl)}\n        onClose={handleCloseMenu}\n        PaperProps={{\n          sx: {\n            backgroundColor: '#151515',\n            width: '135px',\n          },\n        }}\n      >\n        {/* List of columns to move the card */}\n        <ListMenuStyles onClick={() => handleMoveCard('Column 1')}>\n          {' '}\n          <Box> In progress </Box>\n          <Box>\n            {' '}\n            <svg stroke=\"#fff\" strokeOpacity=\"0.5\" width=\"16\" height=\"16\">\n              <use href={sprite + '#icon-active'} />\n            </svg>\n          </Box>\n        </ListMenuStyles>\n        <ListMenuStyles onClick={() => handleMoveCard('Column 2')}>\n          <Box> Done </Box>\n          <Box>\n            {' '}\n            <svg stroke=\"#fff\" strokeOpacity=\"0.5\" width=\"16\" height=\"16\">\n              <use href={sprite + '#icon-active'} />\n            </svg>\n          </Box>\n        </ListMenuStyles>\n      </Menu>\n    </CardStyles>\n  );\n}\n\nexport default TaskCard;\n","import * as React from 'react';\nimport Radio from '@mui/material/Radio';\n\nexport default function ColorRadioButtons({ onColorChange, value }) {\n  const [selectedValue, setSelectedValue] = React.useState('0');\n\n  const handleChange = event => {\n    setSelectedValue(event.target.value);\n    onColorChange(event.target.value);\n  };\n\n  const controlProps = item => ({\n    checked: selectedValue === item,\n    onChange: handleChange,\n    value: item,\n  });\n\n  return (\n    <div>\n      <Radio\n        {...controlProps('1')}\n        sx={{ color: '#8FA1D0', '&.Mui-checked': { color: '#8FA1D0' } }}\n      />\n      <Radio\n        {...controlProps('2')}\n        sx={{ color: '#E09CB5', '&.Mui-checked': { color: '#E09CB5' } }}\n      />\n      <Radio\n        {...controlProps('3')}\n        sx={{ color: '#BEDBB0', '&.Mui-checked': { color: '#BEDBB0' } }}\n      />\n      <Radio\n        {...controlProps('0')}\n        sx={{ color: 'grey', '&.Mui-checked': { color: 'grey' } }}\n      />\n    </div>\n  );\n}\n","import styled from \"@emotion/styled\";\n\nexport const DropDawnBtn = styled.div`\n  outline: none;\n  background-color: transparent;\n  border: none;\n  transition: all 0.3s ease-in-out;\n  :hover,\n  :focus {\n    transform: translateY(5px);\n  }\n`;\nexport const DropDownSVG = styled.svg`\n  stroke: #bedbb0;\n`;\n","import React from 'react'\nimport sprite from '../../../assets/images/sprite.svg';\nimport { DropDawnBtn, DropDownSVG } from './DropDownIcon.styled';\n\nconst DropDownIcon = ({onClick}) => {\n  return (\n    <div>\n      <DropDawnBtn id={'date-picker'} onClick={onClick}>\n        <DropDownSVG width=\"18\" height=\"18\">\n          <use href={sprite + '#icon-drop-down'} />\n        </DropDownSVG>\n      </DropDawnBtn>\n    </div>\n  );\n}\n\nexport default DropDownIcon\n","import { Popover } from '@mui/material';\nimport React from 'react';\n\nconst PopupStyles = {\n  '.MuiPaper-root': {\n    backgroundColor: '#1F1F1F',\n    borderRadius: '8px',\n  },\n};\n\nconst Popup = ({ anchorEl, open, onClose, children }) => {\n  return (\n    <Popover\n      sx={PopupStyles}\n      anchorEl={anchorEl}\n      open={open}\n      onClose={onClose}\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'left',\n      }}\n      transformOrigin={{\n        vertical: 'top',\n        horizontal: 'left',\n      }}\n    >\n      {children}\n    </Popover>\n  );\n};\n\nexport default Popup;\n","import { DateCalendar } from '@mui/x-date-pickers/DateCalendar';\nimport styled from '@emotion/styled';\n\nconst DateCalendarStyled = styled(DateCalendar)`\n  .MuiDateCalendar-root {\n    font-family: 'Poppins';\n    background: '#1F1F1F';\n    color: '#ffffff';\n  }\n`;\n\nconst DatePickerStyles = {\n  '.MuiTypography-root': {\n    width: '24px',\n    m: '5px',\n    fontSize: '14px',\n    fontWeight: 500,\n    fontFamily: 'Poppins',\n    color: 'rgba(255, 255, 255, 0.5)',\n  },\n  '.MuiPickersCalendarHeader-label': {\n    fontSize: '14px',\n    fontWeight: 600,\n    fontFamily: 'Poppins',\n    color: '#FFF',\n  },\n  '.MuiDateCalendar-root': {\n    width: '235px',\n  },\n  '.MuiPaper-root': {\n    backgroundColor: '#1F1F1F',\n  },\n  '.MuiYearCalendar-root': {\n    width: '265px',\n  },\n  '.MuiPickersDay-root': {\n    color: '#FFF',\n  },\n  '.MuiButtonBase-root': {\n    width: '24px',\n    height: '24px',\n    m: '5px',\n    color: '#fff',\n  },\n\n  '.MuiPickersArrowSwitcher-spacer': {\n    width: '0px',\n  },\n  '.MuiPickersFadeTransitionGroup-root': {\n    overflow: 'hidden',\n  },\n  '.MuiButtonBase-root:hover': {\n    backgroundColor: '#BEDBB0',\n    color: '#1F1F1F',\n  },\n  '.MuiPickersYear-yearButton.Mui-selected': {\n    backgroundColor: '#BEDBB0',\n    color: '#1F1F1F',\n  },\n  '.MuiPickersYear-yearButton:hover': {\n    backgroundColor: '#BEDBB0',\n    color: '#1F1F1F',\n  },\n  '.MuiPickersDay-today': {\n    backgroundColor: '#BEDBB0',\n    color: '#1F1F1F',\n    border: '1px solid #BEDBB0',\n  },\n  '.MuiPickersDay-dayOutsideMonth': {\n    fontWeight: 400,\n    color: 'rgba(255, 255, 255, 0.18)',\n  },\n  '.MuiButtonBase-root.Mui-disabled': {\n    fontWeight: 400,\n    color: 'rgba(255, 255, 255, 0.18)',\n  },\n  '.css-qa7bje-MuiButtonBase-root-MuiPickersDay-root.Mui-disabled:not(.Mui-selected)':\n    {\n      fontWeight: 400,\n      color: 'rgba(255, 255, 255, 0.38)',\n    },\n  width: '265px',\n  height: '295px',\n  backgroundColor: '#1F1F1F',\n  border: '1px solid #BEDBB0',\n  color: '#FFF',\n  borderRadius: '8px',\n  fontStyle: 'normal',\n  fontWeight: 500,\n  lineHeight: 'normal',\n  letterSpacing: -0.36,\n  marginBottom: 0,\n};\n\nconst DatePickerCmponent = ({ onChange }) => {\n  return (\n    <div>\n      {/* <ThemeProvider theme={theme}> */}\n      <DateCalendarStyled\n        sx={DatePickerStyles}\n        onChange={onChange}\n        format=\"LL\"\n        disablePast\n        showDaysOutsideCurrentMonth\n      />\n      {/* </ThemeProvider> */}\n    </div>\n  );\n};\n\nexport default DatePickerCmponent;\n","import React, { useEffect, useState } from 'react';\nimport { useFormik } from 'formik';\nimport { format } from 'date-fns';\nimport * as Yup from 'yup';\nimport { API } from 'Services/API';\nimport formatISO from 'date-fns/formatISO';\n\nimport {\n  FormStyled,\n  TextareaStyled,\n  SubWrapper,\n  DateText,\n  DateWrapper,\n  SubTitle,\n  InputStyled,\n} from './AddCard.styled';\nimport ColorRadioButtons from 'components/ColorRadioButtons/ColorRadioButtons';\nimport { ButtonWithIcon } from 'components/Buttons/Button';\nimport DropDownIcon from 'components/Icons/DropDownIcon/DropDownIcon';\nimport Popup from 'components/Popup/Popup';\nimport DatePickerCmponent from 'components/DatePicker/DatePicker';\nimport ModalLayout from '../ModalLayout/ModalLayout';\n\n\nconst AddCard = ({\n  modalType,\n  close,\n  open,\n  handleClose,\n  columnId,\n  cardId = '',\n}) => {\n  const [date, setDate] = useState('');\n  const [dateValue, setDateValue] = useState('');\n  const [color, setColor] = useState('0');\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  const [addCards] = API.useAddCardMutation();\n\n  const handleDateClick = e => {\n    setAnchorEl(e.currentTarget);\n    setIsPopupOpen(true);\n  };\n\n  const onDateChange = e => {\n    const dateFns = format(e, 'LLLL d');\n    setDateValue(dateFns);\n    setDate(e);\n    setAnchorEl(null);\n    setIsPopupOpen(false);\n  };\n\n  const onColorChange = value => {\n    console.log('value :>> ', value);\n    setColor(value);\n  };\n\n  const handleSubmit = async (title, description) => {\n    const ISODate = formatISO(date, { representation: 'date' });\n\n    const cardData = {\n      title,\n      description,\n      priority: color,\n      deadline: ISODate,\n    };\n\n    try {\n      await addCards({columnId, cardData} );\n    } catch (error) {\n      console.log(error);\n    }\n    formik.handleReset();\n    close();\n  };\n\n  const validationSchema = Yup.object({\n    title: Yup.string()\n      .trim('The title cannot include leading and trailing spaces')\n      .strict(true)\n      .min(2, 'Must be more then 2 symbols')\n      .required('Title is required'),\n    description: Yup.string(),\n    color: Yup.string(),\n  });\n\n  const formik = useFormik({\n    initialValues: { title: '', description: '' },\n    onSubmit: ({title, description} ) =>\n      handleSubmit(title, description),\n    validationSchema,\n  });\n\n  useEffect(() => {\n    const currentDate = format(new Date(), \"'Today,' LLLL d\");\n    setDateValue(currentDate);\n\n    console.log('dateFns :>> ', currentDate);\n  }, []);\n\n  return (\n    <ModalLayout title={modalType} open={open} handleClose={handleClose}>\n      <FormStyled onSubmit={formik.handleSubmit}>\n        <InputStyled\n          id=\"title\"\n          name=\"title\"\n          placeholder=\"Title\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.title}\n        />\n\n        <TextareaStyled\n          id=\"description\"\n          name=\"description\"\n          placeholder=\"Description\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.description}\n        />\n\n        <SubWrapper>\n          <SubTitle>Label color</SubTitle>\n          <ColorRadioButtons onColorChange={onColorChange} />\n        </SubWrapper>\n\n        <SubWrapper>\n          <SubTitle>Deadline</SubTitle>\n          <DateWrapper>\n            <DateText>{dateValue}</DateText>\n            <DropDownIcon onClick={handleDateClick} />\n          </DateWrapper>\n        </SubWrapper>\n\n        <ButtonWithIcon\n          title={modalType === 'Add card' ? 'Add' : 'Edit'}\n          type={'submit'}\n        />\n      </FormStyled>\n\n      <Popup\n        anchorEl={anchorEl}\n        open={isPopupOpen}\n        onClose={() => setIsPopupOpen(false)}\n      >\n        <DatePickerCmponent onChange={onDateChange} />\n      </Popup>\n    </ModalLayout>\n  );\n};\n\nexport default AddCard;\n","import { ButtonWithIcon } from '../Buttons/Button';\nimport styled from '@emotion/styled';\nimport { IconButton } from '@mui/material';\n\nexport const ColumnWrapper = styled.li`\n  display: flex;\n  flex-direction: column;\n  /* grid-template-rows: 56px auto 56px; */\n  align-items: left;\n  /* gap: 14px; */\n  width: 346px;\n  max-height: 80vh;\n  padding-right: 12px;\n  padding-bottom: 14px;\n  margin-right: 14px;\n`;\n\nexport const ColumnHeader = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  max-width: 334px;\n  height: 56px;\n  background-color: #121212;\n  color: #ffffff;\n  padding: 20px;\n  border-radius: 8px;\n  margin-bottom: 14px;\n`;\n\nexport const ColumnTitle = styled.h2`\n  display: flex;\n  font-family: 'Poppins';\n  font-weight: 600;\n  font-size: 14px;\n  margin: 0;\n`;\n\nexport const CardsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  /* grid-template-rows: 155px; */\n  width: 346px;\n  margin-bottom: 14px;\n  max-height: 60vh;\n  gap: 8px;\n  border-radius: 8px;\n  padding-right: 8px;\n  overflow-x: hidden;\n  overflow-y: scroll;\n  ::-webkit-scrollbar {\n    border-radius: 5px;\n    margin-left: 4px;\n    width: 8px;\n    background-color: rgba(255, 255, 255, 0.2);\n  }\n  ::-webkit-scrollbar-thumb {\n    background: #121212;\n    border-radius: 5px;\n  }\n  ::-webkit-scrollbar-thumb:hover {\n    background: #9dc888;\n  }\n`;\n\nexport const StyledIconButton = styled(IconButton)`\n  width: 18px;\n  height: 18px;\n  padding: 0;\n  margin: 4px;\n  &:hover svg {\n    stroke: #bedbb0;\n    stroke-opacity: 1;\n    transition: stroke 0.3s;\n  }\n`;\n\nexport const AddCardButton = styled(ButtonWithIcon)`\n  width: 334px;\n`;\n","import React, { useState } from 'react';\nimport { API } from 'Services/API';\nimport sprite from '../../assets/images/sprite.svg';\nimport TaskCard from '../TaskCard/TaskCard';\nimport AddCard from '../AddCard/AddCard';\nimport {\n  AddCardButton,\n  CardsList,\n  ColumnHeader,\n  ColumnTitle,\n  ColumnWrapper,\n  StyledIconButton,\n} from './Column.styled';\n\nconst Column = ({ columnTitle, columnId }) => {\n  const [isAddCardOpen, setIsAddCardOpen] = useState(false);\n\n  const { data: cards, isLoading } = API.useGetAllCardsQuery(columnId, {\n    refetchOnMountOrArgChange: true,\n    skip: false,\n  });\n\n  const closeAddCard = () => setIsAddCardOpen(false);\n  const handleClick = () => setIsAddCardOpen(true);\n\n  const handleUpdateColumn = () => {\n    console.log('Column updated');\n  };\n  const handleDeleteColumn = () => {\n    console.log('Column deleted');\n  };\n\n  return (\n    !isLoading && (\n      <ColumnWrapper>\n        <ColumnHeader>\n          <ColumnTitle>{columnTitle}</ColumnTitle>\n          <div>\n            <StyledIconButton onClick={handleUpdateColumn} aria-label=\"edit\">\n              <svg stroke=\"#fff\" strokeOpacity=\"0.5\" width=\"16\" height=\"16\">\n                <use href={sprite + '#icon-pencil'} />\n              </svg>\n            </StyledIconButton>\n            <StyledIconButton onClick={handleDeleteColumn} aria-label=\"remove\">\n              <svg stroke=\"#fff\" strokeOpacity=\"0.5\" width=\"16\" height=\"16\">\n                <use href={sprite + '#icon-trash'} />\n              </svg>\n            </StyledIconButton>\n          </div>\n        </ColumnHeader>\n        <CardsList cols={cards}>\n          {cards?.map(\n            ({ title, description, priority, deadline, _id: id }, index) => {\n              return (\n                <TaskCard\n                  title={title}\n                  description={description}\n                  priority={priority}\n                  deadline={deadline}\n                  id={id}\n                />\n              );\n            }\n          )}\n        </CardsList>\n\n        <AddCardButton onClick={handleClick} title={'Add card'} />\n\n        <AddCard\n          columnId={columnId}\n          modalType={'Add card'}\n          open={isAddCardOpen}\n          handleClose={closeAddCard}\n          close={closeAddCard}\n        />\n      </ColumnWrapper>\n    )\n  );\n};\n\nexport default Column;\n","import styled from '@emotion/styled';\nimport { Field as FormicField } from 'formik';\n\nexport const Div = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: baseline;\n  margin-bottom: 2px;\n`;\n\nexport const Button = styled.button`\n  color: rgba(255, 255, 255, 0.5);\n  font-size: 12px;\n  font-weight: 400;\n  letter-spacing: -0.24px;\n  text-decoration-line: underline;\n\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n`;\nexport const LabelGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  justify-content: center;\n  /* align-items: baseline; */\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: center;\n  /* justify-content: center; */\n  gap: 8px;\n  cursor: pointer;\n  color: #ffffff80;\n  font-size: 12px;\n  font-weight: 400;\n  letter-spacing: -0.24px;\n  padding-top: 1px;\n  padding-bottom: 1px;\n`;\n\nexport const Field = styled(FormicField)`\n  width: 14px;\n  height: 14px;\n  background-color: transparent;\n\n  display: grid;\n  place-content: center;\n\n  ::after {\n    content: '';\n    left: 6.4%;\n    position: absolute;\n    transform: translate(6px, 1px);\n    width: 12px;\n    height: 12px;\n    border: 2.5px solid black;\n    border-radius: 50%;\n    opacity: 0;\n  }\n  ::before {\n    content: '';\n    width: 14px;\n    height: 14px;\n    border-radius: 50%;\n    transition: 120ms transform ease-in-out;\n    background-color: ${props => props.color};\n  }\n\n  :checked::after {\n    opacity: 1;\n  }\n`;\n\n// export const Field = styled.div`\n//   width: 14px;\n//   height: 14px;\n//   border-radius: 14px;\n//   position: absolute;\n//   top: 50%;\n//   left: 50%;\n//   transform: translate(-50%, -50%);\n\n//   background-color: ${props =>\n//     props.color === 'without' && 'rgb(128, 128, 128)'};\n//   background-color: ${props =>\n//     props.color === 'low' && 'rgba(143, 161, 208, 1)'};\n//   background-color: ${props =>\n//     props.color === 'medium' && 'rgba(224, 156, 181, 1)'};\n//   background-color: ${props =>\n//     props.color === 'high' && 'rgba(190, 219, 176, 1)'};\n\n//   transition: all 250ms linear;\n\n//   &.active {\n//     width: 6px;\n//     height: 6px;\n//   }\n// `;\n\nexport const RadioWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`;\n","import { Radio, Typography } from '@mui/material';\n// import { LiStyled, UlBgStyled } from 'components/ModalLayout/Modal.styled';\nimport ModalLayout from 'components/ModalLayout/ModalLayout';\nimport { Form, Formik } from 'formik';\nimport { useState } from 'react';\n\nimport { arrBG } from '../ModalBoard/data';\nimport { Button, Div, Label, LabelGroup, RadioWrap } from './Filter.styled';\nimport { LiStyled, UlBgStyled } from 'components/ModalBoard/ModalBoard.styled';\n\nconst titleStyle = {\n  color: '#FFF',\n  fontSize: 14,\n  fontStyle: 'normal',\n  fontWeight: 500,\n  lineHeight: 'normal',\n  letterSpacing: -0.36,\n  // marginBottom: 24 / 8,\n};\n\nexport const Filter = ({ open, onClose }) => {\n  const [bgImgIndex, setBgImgIndex] = useState(null);\n\n  const [currentPrority, setCurrentPrority] = useState('');\n  const [isShowAllActive, setIsShowAllActive] = useState(false);\n  const initialValues = {\n    currentBg: 0,\n    currentPrority: '',\n  };\n\n  const controlProps = item => ({\n    checked: currentPrority === item,\n    onChange: handleChange,\n    value: item,\n  });\n  const handleChange = event => {\n    const filter = event.target.value;\n    setCurrentPrority(filter);\n    // dispatch(setFilterCards(filter));\n    setIsShowAllActive(false);\n  };\n\n  const handleShowAll = () => {\n    setCurrentPrority('');\n    // dispatch(setFilterCards(''));\n    setIsShowAllActive(true);\n  };\n\n  const handleRadioClick = () => {\n    if (isShowAllActive) {\n      setIsShowAllActive(false);\n    }\n  };\n  // console.log(currentPrority);\n  console.log(bgImgIndex);\n\n  return (\n    <ModalLayout title={'Filters'} open={open} handleClose={onClose}>\n      <Formik initialValues={initialValues}>\n        <Form onChange={handleChange}>\n          <UlBgStyled>\n            <LiStyled></LiStyled>\n            {arrBG.map((el, index) => {\n              return (\n                <LiStyled\n                  key={index + 1}\n                  onClick={() => setBgImgIndex(index + 1)}\n                >\n                  <img src={el} alt=\"\" width=\"24px\" height=\"24px\" />\n                </LiStyled>\n              );\n            })}\n          </UlBgStyled>\n          <LabelGroup role=\"group\" aria-labelledby=\"my-radio-group\">\n            <Div>\n              <Typography variant=\"h2\" sx={titleStyle}>\n                Label Color\n              </Typography>\n              <Button\n                type=\"button\"\n                onClick={handleShowAll}\n                disabled={isShowAllActive}\n              >\n                Show all\n              </Button>\n            </Div>\n            <RadioWrap>\n              <Label>\n                <Radio\n                  onClick={handleRadioClick}\n                  checked={currentPrority === 'without'}\n                  name=\"currentPrority\"\n                  {...controlProps('without')}\n                  size=\"small\"\n                  sx={{ color: 'grey', '&.Mui-checked': { color: 'grey' } }}\n                />\n                Without priority\n              </Label>\n              <Label>\n                <Radio\n                  onClick={handleRadioClick}\n                  checked={currentPrority === 'low'}\n                  name=\"currentPrority\"\n                  {...controlProps('low')}\n                  size=\"small\"\n                  sx={{\n                    color: '#8FA1D0',\n                    '&.Mui-checked': { color: '#8FA1D0' },\n                  }}\n                />\n                Low\n              </Label>\n              <Label>\n                <Radio\n                  onClick={handleRadioClick}\n                  checked={currentPrority === 'medium'}\n                  name=\"currentPrority\"\n                  {...controlProps('medium')}\n                  size=\"small\"\n                  sx={{\n                    color: '#E09CB5',\n                    '&.Mui-checked': { color: '#E09CB5' },\n                  }}\n                />\n                Medium\n              </Label>\n\n              <Label>\n                <Radio\n                  onClick={handleRadioClick}\n                  checked={currentPrority === 'high'}\n                  name=\"currentPrority\"\n                  {...controlProps('high')}\n                  size=\"small\"\n                  sx={{\n                    color: '#BEDBB0',\n                    '&.Mui-checked': { color: '#BEDBB0' },\n                  }}\n                />\n                High\n              </Label>\n            </RadioWrap>\n          </LabelGroup>\n        </Form>\n      </Formik>\n    </ModalLayout>\n  );\n};\n","// import ModalLayout from 'components/ModalLayout/ModalLayout';\nimport sprite from '../../assets/images/sprite.svg';\nimport { useState } from 'react';\nimport { Filter } from './Filter';\n\nconst {\n  Container,\n  TitleDashBoard,\n  FilterButton,\n  TitleFilter,\n} = require('./HeaderDashboard.styled');\nexport const HeaderDashboard = ({title}) => {\n  const [isOpen, setIsOpen] = useState();\n  const toggleModal = () => setIsOpen(!isOpen);\n\n  return (\n    <Container>\n      <TitleDashBoard>{title}</TitleDashBoard>\n      <FilterButton onClick={toggleModal}>\n        <svg aria-label=\"filter icon\" width=\"16\" height=\"16\">\n          <use href={sprite + '#icon-filter'}></use>\n        </svg>\n        <TitleFilter>Filters</TitleFilter>\n      </FilterButton>\n      {isOpen && <Filter open={isOpen} onClose={toggleModal} />}\n    </Container>\n  );\n};\n","import styled from '@emotion/styled';\nimport { SIDEBARWIDTH } from 'components/Sidebar/SidebarCONSTANTS';\n\n\nexport const MainContainer = styled.main`\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  background-color: #2e2e2e;\n  height: 100vh;\n  padding-top: 78px;\n  padding-left: 24px;\n  padding-right: 24px;\n  @media screen and (min-width: 0px) {\n    width: 100vw;\n  }\n  @media screen and (min-width: 767px) {\n  }\n  @media screen and (min-width: 1400px) {\n    width: calc(100vw - ${SIDEBARWIDTH}px);\n  }\n`;\n\nexport const ColumnsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 34px;\n  align-items: top;\n\n  ::-webkit-scrollbar {\n    border-radius: 5px;\n    margin-left: 4px;\n    height: 8px;\n    background-color: rgba(255, 255, 255, 0.2);\n  }\n  ::-webkit-scrollbar-thumb {\n    background: #121212;\n    border-radius: 5px;\n  }\n  ::-webkit-scrollbar-thumb:hover {\n    background: #9dc888;\n  }\n  @media screen and (min-width: 767px) {\n    overflow-x: ${props => {\n      if (props.cols < 2) {\n        return `hidden`;\n      }\n      return `scroll`;\n    }};\n    display: grid;\n    grid-template-columns: ${props => {\n      return `repeat(${props.cols + 1}, 334px)`;\n    }};\n  }\n  @media screen and (min-width: 1400px) {\n    display: grid;\n    overflow-x: ${props => {\n      if (props.cols < 4) {\n        return `hidden`;\n      }\n      return `scroll`;\n    }};\n  }\n`;\n\nexport const screenSyles = {\n  pt: { 0: 9.25, 768: 11, 1440: 9.75 },\n  pb: { 0: 3, 768: 4, 1440: 1 },\n  pl: { 0: 2.5, 768: 4, 1440: 3 },\n  pr: { 0: 2.5, 768: 4, 1440: 3 },\n  height: { 0: '100vh', 768: '100vh', 1440: '100vh' },\n  width: { 0: '100vw', 1440: `calc(100vw - ${SIDEBARWIDTH}px)` },\n  flexGrow: 1,\n  backgroundColor: '#2e2e2e',\n};","import React, { useState } from 'react';\nimport { ButtonAdd } from 'components/Buttons/Button';\nimport AddColumn from 'components/AddColumn/AddColumn';\nimport Column from '../../components/Column/Column';\nimport { HeaderDashboard } from 'components/HeaderDashboard/HeaderDashboard';\nimport { API } from 'Services/API';\nimport { useParams } from 'react-router-dom';\nimport { ColumnsWrapper, MainContainer } from './ScreenPage.styled';\n\nconst ScreensPage = () => {\n  const { boardId } = useParams();\n  const [isAddColumnOpen, setIsAddColumnOpen] = useState(false);\n  const { data } = API.useGetBoardByIdQuery(boardId, {\n    refetchOnMountOrArgChange: true,\n    skip: false,\n  });\n\n  const openAddColumn = () => setIsAddColumnOpen(true);\n  const closeAddColumn = () => setIsAddColumnOpen(false);\n\n  return (\n    <MainContainer>\n      <HeaderDashboard title={data?.title} />\n\n      <ColumnsWrapper cols={!data?.columns ? 1 : data?.columns?.length + 1}>\n        {data?.columns?.map(({ columnId, columnTitle }) => (\n          <Column\n            key={columnId}\n            columnTitle={columnTitle}\n            columnId={columnId}\n          />\n        ))}\n        <ButtonAdd onClick={openAddColumn}></ButtonAdd>\n      </ColumnsWrapper>\n\n      <AddColumn\n        modalType={'Add column'}\n        open={isAddColumnOpen}\n        boardId={boardId}\n        close={closeAddColumn}\n      />\n    </MainContainer>\n  );\n};\n\nexport default ScreensPage;\n"],"names":["API","useRegisterMutation","useLogInMutation","useLogOutMutation","useAvatarUserMutation","useGetCurrentUserQuery","useHelpUserMutation","useThemeUserMutation","useUpdateUserMutation","useGetBoardsQuery","useGetBoardByIdQuery","useAddBoardsMutation","useDeleteBoardByIdMutation","useUpdateBoardByIdMutation","useAddColumnMutation","useUpdateColumnByIdMutation","useDeleteColumnByIdMutation","useGetAllCardsQuery","useAddCardMutation","useUpdateCardByIdMutation","useDeleteCardByIdMutation","useUpdateCardColumnByIdMutation","ButtonWithIcon","_ref","title","onClick","type","_jsxs","Button","variant","disableElevation","sx","display","gap","color","fontFamily","alignItems","textTransform","borderRadius","letterSpacing","fontSize","background","lineHeight","fontWeight","fontStyle","width","height","children","_jsx","Box","justifyContent","stroke","href","sprite","ButtonWithoutIcon","_ref2","marginTop","ButtonAdd","_ref3","ButtonSidebar","_ref4","IconButton","Container","styled","_templateObject","_taggedTemplateLiteral","TitleDashBoard","_templateObject2","FilterButton","_templateObject3","TitleFilter","_templateObject4","ButtonClose","FormStyled","InputStyled","TransparentSVG","UlStyled","_templateObject5","UlBgStyled","_templateObject6","LiStyled","_templateObject7","ImgStyled","_templateObject8","LiIconsStyled","_templateObject9","arrIcons","arrBG","ModalStyles","position","top","left","transform","border","padding","titleStyles","marginBottom","open","handleClose","adaptiveStyle","useMediaQuery","_Fragment","Modal","onClose","_objectSpread","Typography","style","SIDEBARWIDTH","SIDEBARMOBILEWIDTH","TextareaStyled","SubWrapper","RadioButtonIcon","DateWrapper","DateText","_templateObject10","SubTitle","_templateObject11","modalType","boardId","close","_API$useAddColumnMuta","addColumn","_slicedToArray","validationSchema","Yup","min","required","matches","formik","useFormik","initialValues","onSubmit","handleSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","t0","console","log","message","handleReset","stop","_x","apply","arguments","ModalLayout","id","name","placeholder","onChange","handleChange","onBlur","handleBlur","value","values","getPriorityColor","priority","TypographyStylesTitle","TypographyStylesDescription","whitespace","whiteSpace","overflow","textOverflow","TypographyStylesPriority","flexDirection","lineHeigt","CardContentStyles","borderBottom","paddingBottom","ActionsBox","CardActionsStyled","Circle","props","StyledIconButton","CardStyles","Card","ListMenuStyles","MenuItem","description","deadline","moveCard","_useState","useState","_useState2","anchorEl","setAnchorEl","_API$useUpdateCardByI","updateCardById","_API$useDeleteCardByI","deleteCardById","dispatch","useDispatch","date","Date","concat","formattedDate","format","handleCloseMenu","handleMoveCard","newColumn","handleDeleteCard","response","sent","deleteCard","error","handleUpdateCard","_callee2","updatedData","_context2","setCardData","CardContent","component","CardActions","event","currentTarget","strokeOpacity","Menu","Boolean","PaperProps","backgroundColor","ColorRadioButtons","onColorChange","_React$useState","React","_React$useState2","selectedValue","setSelectedValue","target","controlProps","item","checked","Radio","DropDawnBtn","DropDownSVG","PopupStyles","Popover","anchorOrigin","vertical","horizontal","transformOrigin","DateCalendarStyled","DateCalendar","DatePickerStyles","m","disablePast","showDaysOutsideCurrentMonth","columnId","cardId","setDate","_useState3","_useState4","dateValue","setDateValue","_useState5","_useState6","setColor","_useState7","_useState8","_useState9","_useState10","isPopupOpen","setIsPopupOpen","_API$useAddCardMutati","addCards","ISODate","cardData","formatISO","representation","_x2","trim","strict","useEffect","currentDate","DropDownIcon","e","Popup","DatePickerCmponent","dateFns","ColumnWrapper","ColumnHeader","ColumnTitle","CardsList","AddCardButton","columnTitle","isAddCardOpen","setIsAddCardOpen","_API$useGetAllCardsQu","refetchOnMountOrArgChange","skip","cards","data","closeAddCard","isLoading","cols","map","index","_id","TaskCard","AddCard","Div","LabelGroup","Label","RadioWrap","FormicField","titleStyle","Filter","bgImgIndex","setBgImgIndex","currentPrority","setCurrentPrority","isShowAllActive","setIsShowAllActive","filter","handleRadioClick","Formik","currentBg","Form","el","src","alt","role","disabled","size","_require","require","HeaderDashboard","isOpen","setIsOpen","toggleModal","MainContainer","ColumnsWrapper","_data$columns","_data$columns2","useParams","isAddColumnOpen","setIsAddColumnOpen","columns","length","Column","AddColumn"],"sourceRoot":""}