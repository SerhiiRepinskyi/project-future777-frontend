{"version":3,"file":"static/js/205.e3607482.chunk.js","mappings":"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","sources":["Services/API.js","components/Buttons/Button.jsx","components/Logo/Logo-styled.jsx","components/Logo/Logo.jsx","components/ModalBoard/ModalBoard.styled.jsx","components/ModalLayout/ModalLayout.jsx","components/Sidebar/SidebarCONSTANTS.js","components/Sidebar/SidebarContent-styled.jsx","webpack://react-homework-template/./src/components/Sidebar/SidebarCustomScroll.module.css?4eb1","components/Sidebar/SidebarBoardItem-styled.jsx","components/Sidebar/MeasureTitleWidth.jsx","components/ModalBoard/data.jsx","components/ModalBoard/ModalBoard.jsx","components/Sidebar/SidebarBoardItemIcon.jsx","components/Sidebar/SidebarBoardItem.jsx","components/Sidebar/SidebarBoardList.jsx","components/logoutBtn/logoutBtn.styled.jsx","components/logoutBtn/logoutBtn.jsx","components/ModalHelp/ModalHelp.styled.js","components/ModalHelp/ModalHelp.js","components/Sidebar/SidebarHelpIcon.jsx","components/Sidebar/SidebarContent.jsx","components/Sidebar/Sidebar.jsx","components/Header/Header.styled.js","components/Header/NavBtn/NavBtn.jsx","components/EditProfile/ModalEditProfile.styled.jsx","components/EditProfile/EditProfileContent.styled.jsx","redux/auth/authSelectors.js","components/EditProfile/EditProfileContent.jsx","components/EditProfile/ModalEditProfile.jsx","components/Header/UserInfo/UserInfo.styled.js","components/Header/UserInfo/UserInfo.jsx","components/Header/Header.jsx","pages/ScreensPage/DefaultScreenPage.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["import {\n  useRegisterMutation,\n  useLogInMutation,\n  useLogOutMutation,\n  useGetCurrentUserQuery,\n  useUpdateUserMutation,\n  useThemeUserMutation,\n  useUpdateAvatarMutation,\n  useHelpUserMutation,\n  useGetBoardsQuery,\n  useGetBoardContentByIdQuery,\n  useGetBoardByIdQuery,\n  useAddBoardsMutation,\n  useDeleteBoardByIdMutation,\n  useUpdateBoardByIdMutation,\n  useAddColumnMutation,\n  useUpdateColumnByIdMutation,\n  useDeleteColumnByIdMutation,\n  useGetAllCardsQuery,\n  useAddCardMutation,\n  useUpdateCardByIdMutation,\n  useDeleteCardByIdMutation,\n  useUpdateCardColumnByIdMutation,\n} from './API_Component';\n\nexport const API = {\n  useRegisterMutation,\n  useLogInMutation,\n  useLogOutMutation,\n  useUpdateAvatarMutation,\n  useGetCurrentUserQuery,\n  useHelpUserMutation,\n  useThemeUserMutation,\n  useUpdateUserMutation,\n  useGetBoardsQuery,\n  useGetBoardContentByIdQuery,\n  useGetBoardByIdQuery,\n  useAddBoardsMutation,\n  useDeleteBoardByIdMutation,\n  useUpdateBoardByIdMutation,\n  useAddColumnMutation,\n  useUpdateColumnByIdMutation,\n  useDeleteColumnByIdMutation,\n  useGetAllCardsQuery,\n  useAddCardMutation,\n  useUpdateCardByIdMutation,\n  useDeleteCardByIdMutation,\n  useUpdateCardColumnByIdMutation,\n};\n","import * as React from 'react';\nimport Button from '@mui/material/Button';\n\nimport { Box, IconButton } from '@mui/material';\n\nimport sprite from '../../assets/images/sprite.svg';\n\n// Кнопка для модалок с иконкой\nexport const ButtonWithIcon = ({ title, onClick, type }) => {\n  return (\n    <Button\n      onClick={onClick}\n      type={type}\n      variant=\"contained\"\n      disableElevation\n      sx={{\n        display: 'flex',\n        gap: '8px',\n        color: '#161616',\n        fontFamily: 'Poppins, sans-serif',\n        alignItems: 'center',\n        textTransform: 'none',\n        borderRadius: '8px',\n        letterSpacing: '-0.02em',\n        fontSize: '14px',\n        // background: '#BEDBB0',\n        background: ' var(--button-bg-color)',\n        lineHeight: '21px',\n        fontWeight: '500',\n        fontStyle: 'normal',\n        width: '100%',\n        height: '56px',\n        '&:hover': {\n          // background: '#9DC888',\n          background: 'var( --button-bg-color-hover)',\n        },\n      }}\n    >\n      <Box\n        sx={{\n          width: '28px',\n          height: '28px',\n          background: 'var(--icon-plus-bg-color)',\n          borderRadius: '6px',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <svg width=\"14\" height=\"14\" stroke=\"var(--icon-plus-color)\">\n          <use href={sprite + '#icon-add'}></use>\n        </svg>\n      </Box>\n      {title}\n    </Button>\n  );\n};\n\n// Кнопка для модалок без иконки\nexport const ButtonWithoutIcon = ({ title, onClick, type }) => {\n  return (\n    <Button\n      type={type}\n      onClick={onClick}\n      disableElevation\n      sx={{\n        display: 'flex',\n        color: '#161616',\n        fontFamily: 'Poppins, sans-serif',\n        alignItems: 'center',\n        textTransform: 'none',\n        borderRadius: '8px',\n        marginTop: '24px',\n        letterSpacing: '-0.02em',\n        fontSize: '14px',\n        // background: '#BEDBB0',\n        background: 'var(--button-bg-color)',\n        lineHeight: '21px',\n        fontWeight: '500',\n        fontStyle: 'normal',\n        width: '100%',\n        height: '56px',\n        '&:hover': {\n          background: 'var( --button-bg-color-hover)',\n        },\n      }}\n    >\n      {title}\n    </Button>\n  );\n};\n\n// Кнопка для добавления колонки\nexport const ButtonAdd = ({ onClick }) => {\n  return (\n    <Button\n      onClick={onClick}\n      variant=\"contained\"\n      disableElevation\n      sx={{\n        display: 'flex',\n        gap: '8px',\n        color: 'var(--primary-text-color)',\n        fontFamily: 'Poppins, sans-serif',\n        alignItems: 'center',\n        textTransform: 'none',\n        borderRadius: '8px',\n        letterSpacing: '-0.02em',\n        fontSize: '14px',\n        background: 'var(--button-add-bg-color)',\n        lineHeight: '21px',\n        fontWeight: '500',\n        fontStyle: 'normal',\n        width: '334px',\n        height: '56px',\n        '&:hover': {\n          background: 'var(--button-add-bg-color)',\n        },\n      }}\n    >\n      <Box\n        sx={{\n          width: '28px',\n          height: '28px',\n          background: 'var(--button-add-box-color)',\n          borderRadius: '6px',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <svg width=\"14\" height=\"14\" stroke=\"var(--icon-add-color)\">\n          <use href={sprite + '#icon-add'}></use>\n        </svg>\n      </Box>\n      Add another column\n    </Button>\n  );\n};\n\n//Кнопка для Sidebar\nexport const ButtonSidebar = ({ onClick }) => {\n  return (\n    <IconButton\n      type=\"button\"\n      onClick={onClick}\n      sx={{\n        width: '40px',\n        height: '36px',\n        borderRadius: '6px',\n        background: 'var(--sidebar-icon-plus-bg-color)',\n\n        '&:hover, &:focus': {\n          background: 'var(--sidebar-icon-plus-bg-color-HOVER-FOCUS)',\n        },\n      }}\n    >\n      <svg width=\"20\" height=\"20\" stroke=\"var(--sidebar-icon-plus-color)\">\n        <use href={sprite + '#icon-add'}></use>\n      </svg>\n    </IconButton>\n  );\n};\n","import { styled } from '@mui/material/styles';\nimport { keyframes } from '@mui/system';\n\nconst slideLigtning = keyframes`\n  0% {transform: translateY(-25px)}\n\n  20% {transform: translateY(0px)}\n  80% {transform: translateY(0px)}\n\n  100% {transform: translateY(25px)}\n`;\n\nconst slideToRight = keyframes`\n  0% {transform: translateX(-200px)}\n  100% {transform: translateY(0px)}\n`;\n\nexport const SidebarLogoIcon = styled('svg')({\n  fill: 'var(--sidebar-icon-logo-color)',\n  width: '12px',\n  height: '16px',\n\n  animation: `${slideLigtning} 6s infinite`,\n  animationTimingFunction: 'ease',\n});\n\nexport const SidebarLogoWrap = styled('div')(({ isSidebarShown }) => ({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  gap: '8px',\n  width: '110px',\n\n  transform: 'translateX(-135px)',\n  animation: isSidebarShown ? `${slideToRight} 300ms` : 'none',\n  animationTimingFunction: 'ease',\n\n  animationFillMode: 'forwards',\n}));\n\nexport const SidebarLogoIconWrap = styled('div')({\n  width: '32px',\n  height: '32px',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  backgroundColor: 'var(--sidebar-icon-logo-bg-color)',\n  borderRadius: '8px',\n  overflow: 'hidden',\n});\n\nexport const SidebarLogoText = styled('p')({\n  margin: '0px',\n  color: 'var(--sidebar-primary-text-color)',\n  fontFamily: 'Poppins',\n  fontSize: '16px',\n  fontWeight: 600,\n  letterSpacing: '-0.64px',\n});\n\nexport const StartPageLogoWrap = styled('div')({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  gap: '14px',\n});\n\nexport const StartPageLogoIconWrap = styled('div')({\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  backgroundColor: '#161616',\n  borderRadius: '8px',\n});\n\nexport const StartPageLogoIcon = styled('svg')({\n  fill: '#ffffff',\n});\n\nexport const StartPageLogoText = styled('p')({\n  margin: '0px',\n  color: '#161616',\n  fontFamily: 'Poppins',\n  fontWeight: 600,\n  letterSpacing: '-0.64px',\n});\n","import {\n  SidebarLogoIconWrap,\n  SidebarLogoIcon,\n  SidebarLogoText,\n  StartPageLogoWrap,\n  StartPageLogoIconWrap,\n  StartPageLogoIcon,\n  StartPageLogoText,\n  SidebarLogoWrap,\n} from './Logo-styled';\nimport sprite from '../../assets/images/sprite.svg';\n\nexport const SidebarLogo = ({ sx, isSidebarShown }) => {\n  return (\n    <>\n      <SidebarLogoWrap sx={sx} isSidebarShown={isSidebarShown}>\n        <SidebarLogoIconWrap>\n          <SidebarLogoIcon>\n            <use href={sprite + '#icon-logo-lightning'}></use>\n          </SidebarLogoIcon>\n        </SidebarLogoIconWrap>\n\n        <SidebarLogoText>Task Pro</SidebarLogoText>\n      </SidebarLogoWrap>\n    </>\n  );\n};\n\nexport const StartPageLogo = ({ style }) => {\n  return (\n    <>\n      <StartPageLogoWrap style={style} sx={{ width: { 0: 166, 768: 222 } }}>\n        <StartPageLogoIconWrap\n          sx={{ width: { 0: 40, 768: 48 }, height: { 0: 40, 768: 48 } }}\n        >\n          <StartPageLogoIcon\n            sx={{ width: { 0: 15, 768: 18 }, height: { 0: 20, 768: 24 } }}\n          >\n            <use href={sprite + '#icon-logo-lightning'}></use>\n          </StartPageLogoIcon>\n        </StartPageLogoIconWrap>\n\n        <StartPageLogoText\n          sx={{\n            fontSize: { 0: 28, 768: 40 },\n            letterSpacing: { 0: -1.12, 768: -1.6 },\n          }}\n        >\n          Task Pro\n        </StartPageLogoText>\n      </StartPageLogoWrap>\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const ButtonClose = styled.button`\n  margin: 0;\n  padding: 0;\n  position: absolute;\n  right: 10px;\n  top: 10px;\n  width: 24px;\n  height: 24px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: rgba(255, 255, 255, 0.5);\n\n  background-color: transparent;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    border: 1px solid #ffffff;\n    color: rgba(255, 255, 255, 1);\n  }\n`;\n\nexport const FormStyled = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n  margin-bottom: 24px;\n`;\n\nexport const InputStyled = styled.input`\n  resize: none;\n  color: #ffffff;\n  padding: 14px 14px;\n  background-color: transparent;\n  border: 1px solid rgba(190, 219, 176, 0.4);\n  border-radius: 8px;\n  margin-bottom: 10px;\n  :focus {\n    border: 1px solid #bedbb0;\n    outline: none;\n  }\n  ::placeholder {\n    color: #ffffff;\n    opacity: 30%;\n  }\n`;\n\nexport const TransparentSVG = styled.svg`\n  width: 18px;\n  height: 18px;\n  // stroke: rgba(255, 255, 255, 0.5);\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    stroke: #bedbb0;\n  }\n`;\n\nexport const UlStyled = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 6px;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  margin-bottom: 14px;\n`;\n\nexport const UlBgStyled = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 2px;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  margin-bottom: 14px;\n  width: 260px;\n`;\n\nexport const LiStyled = styled.li`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 28px;\n  height: 28px;\n  border-radius: 14px;\n\n  &:hover,\n  &:focus {\n    border-radius: 5px;\n    background-color: #bedbb0;\n  }\n`;\n\nexport const ImgStyled = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  object-position: center;\n  border-radius: 5px;\n  cursor: pointer;\n`;\n\nexport const LiIconsStyled = styled.li`\n  display: flex;\n  width: 20px;\n  height: 20px;\n  align-items: center; \n  justify-content: center;\n\n  &:hover,\n  &:focus {\n    border-radius: 5px;\n    background-color: rgba(190, 219, 176, 0.2);\n  }\n`;\n","import { Modal, Box, Typography, useMediaQuery } from '@mui/material';\nimport sprite from '../../assets/images/sprite.svg';\nimport { ButtonClose } from 'components/ModalBoard/ModalBoard.styled';\n\n// import { useState } from 'react';\n\nconst ModalStyles = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 350,\n  borderRadius: 8 / 4,\n  border: '1px solid rgba(190, 219, 176, 0.50)',\n  background: '#151515',\n  padding: 24/8,\n};\n\nconst titleStyles = {\n  color: '#FFF',\n  fontSize: 18,\n  fontStyle: 'normal',\n  fontWeight: 500,\n  lineHeight: 'normal',\n  letterSpacing: -0.36,\n  marginBottom: 24 / 8,\n};\n\nconst ModalLayout = ({ title, open, handleClose, children }) => {\n   const adaptiveStyle = useMediaQuery('(min-width: 1440px)');\n  //   const [open, setOpen] = useState(false);\n  //   const handleOpen = () => setOpen(true);\n  //   const handleClose = () => setOpen(false);\n\n  return (\n    <>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box sx={{ ...ModalStyles, width: adaptiveStyle ? 350 : 335 }}>\n          <Typography variant=\"h2\" sx={titleStyles}>\n            {title}\n          </Typography>\n          <ButtonClose type=\"button\" onClick={handleClose}>\n            <svg style={{ stroke: 'currentcolor' }} width=\"18\" height=\"18\">\n              <use href={sprite + '#icon-x-close'} />\n            </svg>\n          </ButtonClose>\n          {children}\n        </Box>\n      </Modal>\n    </>\n  );\n};\n\nexport default ModalLayout;\n","export const SIDEBARWIDTH = 260;\nexport const SIDEBARMOBILEWIDTH = 225;\n  \n\n\n\n","import { styled } from '@mui/material/styles';\nimport { keyframes } from '@mui/system';\n\nconst slideToRight = keyframes`\n  0% {transform: translateX(-250px)}\n  100% {transform: translateX(0px)}\n`;\n\nconst slideToLeft = keyframes`\n  0% {transform: translateX(150px)}\n  100% {transform: translateX(0px)}\n`;\n\nconst slideToDown = keyframes`\n  0% {transform: translateY(-250px)}\n  100% {transform: translateY(0px)}\n`;\n\nconst shakeAnimation = keyframes`\n  0%, 100% {\n    transform: translateX(0);\n  }\n  10%, 30%, 50%, 70%, 90% {\n    transform: translateX(-2px);\n   \n  }\n  20%, 40%, 60%, 80% {\n    transform: translateX(2px);\n  \n  }\n\n`;\n\nexport const Subtitle = styled('p')(({ isSidebarShown }) => ({\n  display: 'inline-block',\n  color: 'var(--sidebar-secondary-text-color)',\n  fontFamily: 'Poppins',\n  fontSize: '12px',\n  fontWeight: 400,\n  letterSpacing: '-0.24px',\n\n  transform: 'translateX(150px)',\n  animation: isSidebarShown ? `${slideToLeft} 400ms` : 'none',\n  animationTimingFunction: 'ease',\n\n  animationFillMode: 'forwards',\n}));\n\nexport const CreateBoardWrap = styled('div')({\n  paddingBottom: '14px',\n  paddingTop: '14px',\n  borderTop: '1px solid var(--sidebar-border-color)',\n  borderBottom: '1px solid var(--sidebar-border-color)',\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  gap: '8px',\n});\n\nexport const TitleCreate = styled('p')(({ isSidebarShown }) => ({\n  margin: '0px',\n  color: 'var(--sidebar-primary-text-color)',\n  fontFamily: 'Poppins',\n  fontSize: '14px',\n  fontWeight: 500,\n  letterSpacing: '-0.28px',\n\n  transform: 'translateX(-250px)',\n  animation: isSidebarShown ? `${slideToRight} 400ms` : 'none',\n  animationTimingFunction: 'ease',\n\n  animationFillMode: 'forwards',\n}));\n\nexport const HelpBox = styled('div')({\n  borderRadius: '8px',\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'left',\n  backgroundColor: 'var(--sidebar-secondary-bg-color)',\n  overflow: 'hidden',\n});\n\nexport const Image = styled('img')(({ isSidebarShown }) => ({\n  width: '54px',\n  height: '78px',\n  marginBottom: '14px',\n\n  transform: 'translateY(250px)',\n  animation: isSidebarShown ? `${slideToDown} 400ms` : 'none',\n  animationTimingFunction: 'ease',\n\n  animationFillMode: 'forwards',\n}));\n\nexport const HelpText = styled('p')(({ isSidebarShown }) => ({\n  margin: '0px',\n  color: 'var(--sidebar-primary-text-color)',\n  fontFamily: 'Poppins',\n  fontWeight: 400,\n  letterSpacing: -0.15,\n  '& span': {\n    color: 'var(--sidebar-taskpro-link-color)',\n  },\n\n  transform: 'translateX(-250px)',\n  animation: isSidebarShown ? `${slideToRight} 400ms` : 'none',\n  animationTimingFunction: 'ease',\n\n  animationFillMode: 'forwards',\n}));\n\nexport const HelpButton = styled('button')(({ isSidebarShown }) => ({\n  padding: 0,\n  width: '94px',\n  height: '20px',\n  display: 'flex',\n  gap: '8px',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  color: 'var(--sidebar-primary-text-color)',\n  backgroundColor: 'transparent',\n  fontFamily: 'Poppins',\n  fontSize: '12px',\n  fontWeight: 500,\n  lineHeight: 1.5,\n  letterSpacing: '-0.24px',\n  border: 'none',\n  cursor: 'pointer',\n  '&:hover, &:focus': {\n    textDecoration: 'underline',\n    outline: 'none',\n  },\n\n  transform: 'translateX(250px)',\n  animation: isSidebarShown ? `${slideToLeft} 400ms` : 'none',\n  animationTimingFunction: 'ease',\n  animationFillMode: 'forwards',\n}));\n\nexport const HelpIcon = styled('svg')(({ startAnimation }) => ({\n  stroke: 'var(--sidebar-primary-text-color)',\n  width: '20px',\n  height: '20px',\n\n  animation: startAnimation ? `${shakeAnimation} 1s  ease-out` : 'none',\n\n  '&:hover, &:focus': {\n    textDecoration: 'underline',\n    outline: 'none',\n  },\n}));\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"SidebarCustomScroll_container__EnYRA\"};","import { styled } from '@mui/material/styles';\nimport { keyframes } from '@mui/system';\n\nconst slideAround = keyframes`\n  0% {transform: rotate(0deg)}\n  100% {transform: rotate(360deg)}\n`;\n\nexport const BoardItemWrap = styled('div')({\n  paddingTop: '20px',\n  paddingBottom: '20px',\n\n  width: '100%',\n  display: 'flex',\n  flexDirection: 'row',\n  gap: '8px',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n\n  overflow: 'hidden',\n});\n\nexport const BoardItemIcon = styled('svg')(({startAnimation})=> ({\n  width: '18px',\n  height: '18px',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  stroke: 'var(--sidebar-primary-text-color)',\n\n  animation: startAnimation ? `${slideAround} 1s  ease-out` : 'none',\n}));\n\nexport const BoardItemCurrentIcon = styled('svg')({\n  width: '16px',\n  height: '16px',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n});\n\nexport const BoardItemTitleWrap = styled('div')({\n  overflow: 'hidden',\n  whiteSpace: 'nowrap',\n});\n\nexport const BoardItemTitle = styled('p')(\n  ({ titleWidth, titleWrapWidth, current }) => {\n    const slideText = keyframes`\n    0% { transform: translateX(0px); }\n    100% { transform: translateX(${titleWrapWidth - titleWidth}px); }\n  `;\n\n    return {\n      margin: '0px',\n      color: 'var(--sidebar-primary-text-color)',\n      fontFamily: 'Poppins',\n      fontSize: '14px',\n      fontStyle: 'normal',\n      fontWeight: '500',\n      letterSpacing: '-0.28px',\n\n      animationName: titleWidth >= titleWrapWidth && current ? slideText : 'none',\n      animationDuration: `${titleWidth * 30}ms`,\n      animationTimingFunction: 'linear',\n      animationIterationCount: 'infinite',\n      animationDirection: 'alternate',\n    };\n  }\n);\n","import React, { useRef, useEffect } from 'react';\n\nconst MeasureTitleWidth = ({ title, setTitleWidth }) => {\n  const measureRef = useRef(null);\n\n  useEffect(() => {\n    const observer = new ResizeObserver(entries => {\n      for (const entry of entries) {\n        if (entry.target === measureRef.current) {\n          setTitleWidth(entry.contentRect.width);\n        }\n      }\n    });\n\n    const currentRef = measureRef.current;\n\n    if (currentRef) {\n      observer.observe(currentRef);\n    }\n\n    return () => {\n      if (currentRef) {\n        observer.unobserve(currentRef);\n      }\n    };\n  }, [setTitleWidth]);\n\n  return (\n    <span\n      ref={measureRef}\n      style={{\n        position: 'absolute',\n        top: '-9999px',\n        left: '-9999px',\n        visibility: 'hidden',\n        whiteSpace: 'nowrap',\n      }}\n    >\n      {title}\n    </span>\n  );\n};\n\nexport default MeasureTitleWidth;\n","export const arrIcons = [\n  '#icon-Project',\n  '#icon-star',\n  '#icon-loading',\n  '#icon-puzzle',\n  '#icon-container',\n  '#icon-lightning',\n  '#icon-colors',\n  '#icon-hexagon',\n];\n\nexport const arrBG = [\n  'https://res.cloudinary.com/dpurp913m/image/upload/v1693060747/teamProject/bcg-laptop-22_w6d1ix.jpg',\n  'https://res.cloudinary.com/dpurp913m/image/upload/v1693060747/teamProject/bcg-laptop-21_lhyxtz.jpg',\n  'https://res.cloudinary.com/dpurp913m/image/upload/v1693060747/teamProject/bcg-laptop-23_nvf3nr.jpg',\n  'https://res.cloudinary.com/dpurp913m/image/upload/v1693060747/teamProject/bcg-laptop-19_jgsoar.jpg',\n  'https://res.cloudinary.com/dpurp913m/image/upload/v1693060746/teamProject/bcg-laptop-18_lz8hnp.jpg',\n  'https://res.cloudinary.com/dpurp913m/image/upload/v1693060746/teamProject/bcg-laptop-16_hbougf.jpg',\n  'https://res.cloudinary.com/dpurp913m/image/upload/v1693060746/teamProject/bcg-laptop-15_p5qieq.jpg',\n  'https://res.cloudinary.com/dpurp913m/image/upload/v1693060746/teamProject/bcg-laptop-13_kzosan.jpg',\n  'https://res.cloudinary.com/dpurp913m/image/upload/v1693060746/teamProject/bcg-laptop-12_nehdkx.jpg',\n  'https://res.cloudinary.com/dpurp913m/image/upload/v1693060747/teamProject/bcg-laptop-24_ob1z2m.jpg',\n  'https://res.cloudinary.com/dpurp913m/image/upload/v1693060747/teamProject/bcg-laptop-25_cdzpq5.jpg',\n  'https://res.cloudinary.com/dpurp913m/image/upload/v1693060747/teamProject/bcg-laptop-20_je1cm3.jpg',\n  'https://res.cloudinary.com/dpurp913m/image/upload/v1693060746/teamProject/bcg-laptop-17_ypzhw7.jpg',\n  'https://res.cloudinary.com/dpurp913m/image/upload/v1693060746/teamProject/bcg-laptop-14_gvggrl.jpg',\n  'https://res.cloudinary.com/dpurp913m/image/upload/v1693060746/teamProject/bcg-laptop-11_rfi4bm.jpg',\n];\n","import { useFormik } from 'formik';\nimport { Typography } from '@mui/material';\nimport {\n  FormStyled,\n  InputStyled,\n  TransparentSVG,\n  UlStyled,\n  LiStyled,\n  UlBgStyled,\n  ImgStyled,\n  LiIconsStyled,\n} from './ModalBoard.styled';\n\nimport sprite from '../../assets/images/sprite.svg';\nimport * as Yup from 'yup';\nimport { ButtonWithIcon } from 'components/Buttons/Button';\nimport ModalLayout from 'components/ModalLayout/ModalLayout';\nimport { useState } from 'react';\nimport { arrIcons } from './data';\nimport { arrBG } from './data';\nimport { useDispatch } from 'react-redux';\n// import { selectIsLoggedIn } from 'redux/auth/authSelectors';\nimport { API } from 'Services/API';\nimport { setBoardResponse } from 'redux/boards/boardsAPISlice';\nimport { useNavigate } from 'react-router-dom';\n\nconst titleStyle = {\n  color: '#FFF',\n  fontSize: 14,\n  fontStyle: 'normal',\n  fontWeight: 500,\n  lineHeight: 'normal',\n  letterSpacing: -0.36,\n};\n\nconst ModalBoard = ({ board = {}, boardTitle, open, handleClose }) => {\n  const dispatch = useDispatch();\n\n  const [inputValue, setInputValue] = useState(board?.title || '');\n  const [iconId, setIconId] = useState(board?.iconId || arrIcons[0]);\n  const [backgroundURL, setBackgroundURL] = useState(\n    board?.backgroundURL || 'default background'\n  );\n\n  const [addBoard] = API.useAddBoardsMutation();\n  const [editBoard] = API.useUpdateBoardByIdMutation();\n\n  const navigate = useNavigate();\n\n  const handleSubmit = async title => {\n    try {\n      const FormData = {\n        title,\n        backgroundURL,\n        iconId,\n        icon: 0,\n        background: 0,\n      };\n\n      if (boardTitle === 'New board') {\n        const response = await addBoard(FormData);\n        dispatch(setBoardResponse(response));\n        const newBoardId = response.data._id;\n        navigate(`/home/${newBoardId}`);\n        setInputValue('');\n        setIconId(arrIcons[0]);\n        setBackgroundURL('default background');\n      }\n      if (boardTitle === 'Edit board') {\n        const response = await editBoard({ boardId: board._id, FormData });\n        dispatch(setBoardResponse(response));\n      }\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n    formik.handleReset();\n  };\n\n  const handleChange = e => {\n    setInputValue(e.currentTarget.value);\n    formik.setFieldValue('title', e.currentTarget.value);\n  };\n\n  const validationSchema = Yup.object({\n    title: Yup.string()\n      .min(2, 'Must be more then 2 symbols')\n      .required('Title is required')\n      .matches(\n        /^(\\w*)$/,\n        'Title may contain only letters, apostrophe, dash and spaces.'\n      ),\n    description: Yup.string(),\n  });\n\n  const formik = useFormik({\n    initialValues: { title: '' },\n    onSubmit: ({ title }) => handleSubmit(title),\n    validationSchema,\n  });\n\n  const handleIconCurrent = icon => {\n    setIconId(icon);\n  };\n\n  return (\n    <>\n      <ModalLayout title={boardTitle} open={open} handleClose={handleClose}>\n        <FormStyled onSubmit={formik.handleSubmit}>\n          <InputStyled\n            id=\"title\"\n            name=\"title\"\n            placeholder={'Title'}\n            onChange={handleChange}\n            onBlur={formik.handleBlur}\n            value={inputValue}\n          />\n          <Typography variant=\"h2\" sx={titleStyle}>\n            Icons\n          </Typography>\n          <UlStyled>\n            {arrIcons.map(icon => {\n              return (\n                <LiIconsStyled\n                  key={icon}\n                  onClick={() => handleIconCurrent(icon)}\n                  isSelected={iconId === icon}\n                >\n                  <TransparentSVG>\n                    <use\n                      href={sprite + icon}\n                      style={{\n                        stroke:\n                          iconId === icon\n                            ? '#FFFFFF'\n                            : 'rgba(255, 255, 255, 0.5)',\n                        transition: 'stroke 0.2s ease',\n                      }}\n                    />\n                  </TransparentSVG>\n                </LiIconsStyled>\n              );\n            })}\n          </UlStyled>\n\n          <Typography variant=\"h2\" sx={titleStyle}>\n            Background\n          </Typography>\n          <UlBgStyled>\n            <LiStyled\n              key={'default background'}\n              onClick={() => {\n                setBackgroundURL('default background');\n              }}\n            >\n              <div\n                style={{\n                  display: 'flex',\n                  justifyContent: 'center',\n                  alignItems: 'center',\n                  width: '100%',\n                  height: '100%',\n                  backgroundColor: '#1F1F1F',\n                  borderRadius: '5px',\n                  border: `2px solid ${\n                    backgroundURL === 'default background'\n                      ? 'white'\n                      : 'transparent'\n                  }`,\n                  cursor: 'pointer',\n                }}\n              >\n                <svg\n                  style={{\n                    width: '16px',\n                    height: '16px',\n                    stroke: 'rgba(255, 255, 255, 0.10)',\n                  }}\n                >\n                  <use href={sprite + '#icon-default-background'}></use>\n                </svg>\n              </div>\n            </LiStyled>\n            {arrBG.map(bg => {\n              return (\n                <LiStyled\n                  key={bg}\n                  onClick={() => {\n                    setBackgroundURL(bg);\n                  }}\n                >\n                  <ImgStyled\n                    src={bg}\n                    alt=\"background picture\"\n                    style={{\n                      border: `2px solid ${\n                        backgroundURL === bg ? 'white' : 'transparent'\n                      }`,\n                    }}\n                  />\n                </LiStyled>\n              );\n            })}\n          </UlBgStyled>\n\n          <ButtonWithIcon\n            title={boardTitle === 'New board' ? 'Create' : 'Edit'}\n            type={'submit'}\n            // onClick={handleClose}\n          />\n        </FormStyled>\n      </ModalLayout>\n    </>\n  );\n};\n\nexport default ModalBoard;\n","import { useEffect, useState } from \"react\";\nimport { BoardItemIcon } from \"./SidebarBoardItem-styled\"\nimport sprite from '../../assets/images/sprite.svg';\n\n\nexport const SidebarBoardItemIcon = ({current, iconId}) => {\n\n    const [startAnimation, setStartAnimation] = useState(true);\n\n    useEffect(() => {\n        const randomNumber = Math.floor(Math.random() * (15000 - 7000 + 1)) + 7000;\n        const interval = setInterval(() => {\n          setStartAnimation(true);\n          setTimeout(() => {\n            setStartAnimation(false);\n          }, 1000);\n        }, randomNumber);\n    \n        return () => {\n          clearInterval(interval);\n        };\n      }, []);\n\n    return (\n        <BoardItemIcon\n        startAnimation={startAnimation}\n        sx={{ opacity: current ? 1 : 0.5 }}\n      >\n        <use href={sprite + iconId}></use>\n      </BoardItemIcon>\n    )\n}","import {\n  BoardItemCurrentIcon,\n  BoardItemTitle,\n  BoardItemTitleWrap,\n  BoardItemWrap,\n} from './SidebarBoardItem-styled';\n\nimport sprite from '../../assets/images/sprite.svg';\nimport MeasureTitleWidth from './MeasureTitleWidth';\n\nimport { debounce } from 'lodash';\nimport { Box, List, ListItem, ListItemButton } from '@mui/material';\nimport { useEffect, useState } from 'react';\nimport { API } from 'Services/API';\nimport ModalBoard from 'components/ModalBoard/ModalBoard';\nimport { SidebarBoardItemIcon } from './SidebarBoardItemIcon';\n\nexport const SidebarBoardItem = ({ board, current}) => {\n  const { _id: id, iconId, title } = board;\n\n\n  const [isHovered, setIsHovered] = useState(false);\n  const [titleWidth, setTitleWidth] = useState(0);\n  const [titleWrapWidth, setTitleWrapWidth] = useState(130);\n  const [screenWidth, setScreenWidth] = useState(window.innerWidth);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const [deleteBoard] = API.useDeleteBoardByIdMutation();\n\n  const handleResize = debounce(() => {\n    setScreenWidth(window.innerWidth);\n  }, 200);\n\n  useEffect(() => {\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [handleResize]);\n\n  useEffect(() => {\n    if (screenWidth <= 320) {\n      setTitleWrapWidth(85);\n    } else if (screenWidth <= 768) {\n      setTitleWrapWidth(120);\n    } else setTitleWrapWidth(130);\n  }, [screenWidth, title]);\n\n  const modalStateChange = () => setIsModalOpen(!isModalOpen);\n\n  const handleEditClick = event => {\n    event.stopPropagation();\n    modalStateChange();\n  };\n\n  const handleDeleteClick = event => {\n    event.stopPropagation();\n    deleteBoard(id);\n  };\n\n  return (\n    <>\n      <MeasureTitleWidth title={title} setTitleWidth={setTitleWidth} />\n\n      <BoardItemWrap\n        onMouseEnter={() => setIsHovered(true)}\n        onMouseLeave={() => setIsHovered(false)}\n        sx={{\n          pl: { 0: 1.75, 768: 3 },\n          pr: { 0: 1.75, 768: 3 },\n          backgroundColor: current\n            ? 'var(--sidebar-board-item-bg-color-CURRENT)'\n            : 'transparent',\n        }}\n      >\n        <Box\n          sx={{\n            display: 'flex',\n            flexDirection: 'row',\n            gap: { 0: 0.5, 768: 1 },\n            alignItems: 'center',\n          }}\n        >\n          <SidebarBoardItemIcon current={current} iconId={iconId} />\n\n          <BoardItemTitleWrap\n            sx={{\n              width: current\n                ? { 0: 85, 320: 'calc(60vw - 105px)', 375: 120, 768: 130 }\n                : { 0: 135, 320: 'calc(60vw - 55px)', 375: 170, 768: 180 },\n            }}\n          >\n            <BoardItemTitle\n              sx={{ opacity: current ? 1 : 0.5 }}\n              titleWidth={titleWidth}\n              titleWrapWidth={titleWrapWidth}\n              current={current}\n            >\n              {title}\n            </BoardItemTitle>\n          </BoardItemTitleWrap>\n        </Box>\n\n        {isHovered && (\n          <Box\n            sx={{\n              position: 'absolute',\n              right: 0,\n              width: '4px',\n              height: '100%',\n              backgroundColor: 'var(--sidebar-board-item-bg-color-AFTER)',\n              opacity: 0.4,\n              borderRadius: '4px 0px 0px 4px',\n            }}\n          />\n        )}\n\n        {current && (\n          <Box\n            sx={{\n              position: 'absolute',\n              right: 0,\n              width: '4px',\n              height: '100%',\n              backgroundColor: 'var(--sidebar-board-item-bg-color-AFTER)',\n              borderRadius: '4px 0px 0px 4px',\n            }}\n          />\n        )}\n\n        {current && (\n          <List\n            disablePadding\n            sx={{\n              display: 'flex',\n              flexDirection: 'row',\n              gap: 1,\n              alignItems: 'center',\n              justifyContent: 'center',\n            }}\n          >\n            <ListItem disablePadding>\n              <ListItemButton\n                sx={{\n                  p: 0,\n                  m: 0,\n                  pointerEvents: 'auto',\n                  backgroundColor: 'transparent',\n                  opacity: 0.5,\n                  stroke: 'var(--sidebar-primary-text-color)',\n                  '&:hover, &:focus': {\n                    opacity: 1,\n                    backgroundColor: 'transparent',\n                  },\n                }}\n                onClick={handleEditClick}\n              >\n                <BoardItemCurrentIcon>\n                  <use href={sprite + '#icon-pencil'}></use>\n                </BoardItemCurrentIcon>\n              </ListItemButton>\n            </ListItem>\n\n            <ListItem disablePadding>\n              <ListItemButton\n                sx={{\n                  p: 0,\n                  m: 0,\n                  pointerEvents: 'auto',\n                  backgroundColor: 'transparent',\n                  opacity: 0.5,\n                  stroke: 'var(--sidebar-primary-text-color)',\n                  '&:hover, &:focus': {\n                    opacity: 1,\n                    backgroundColor: 'transparent',\n                  },\n                }}\n                onClick={handleDeleteClick}\n              >\n                <BoardItemCurrentIcon>\n                  <use href={sprite + '#icon-trash'}></use>\n                </BoardItemCurrentIcon>\n              </ListItemButton>\n            </ListItem>\n          </List>\n        )}\n      </BoardItemWrap>\n\n      <ModalBoard\n        board={board}\n        boardTitle={'Edit board'}\n        open={isModalOpen}\n        handleClose={modalStateChange}\n      />\n    </>\n  );\n};\n","import { List, ListItem, ListItemButton } from '@mui/material';\nimport { SidebarBoardItem } from './SidebarBoardItem';\nimport { useEffect, useState } from 'react';\n\nimport { API } from 'Services/API';\nimport { useNavigate } from 'react-router-dom';\n\nexport const SidebarBoardList = () => {\n  const navigate = useNavigate();\n  const { data } = API.useGetBoardsQuery();\n\n  const [boardsArray, setBoardsArray] = useState([]);\n  const [currentItemId, setCurrentItemId] = useState('');\n\n  useEffect(() => {\n    if (data?.length !== boardsArray?.length) {\n      const currentItemId = data?.length > 0 ? data[data?.length - 1]._id : '';\n      setCurrentItemId(currentItemId);\n      navigate(`/home/${currentItemId}`);\n    }\n    setBoardsArray(data);\n  }, [boardsArray, data, navigate]);\n\n  const handleButtonClick = id => {\n    setCurrentItemId(id);\n    navigate(`/home/${id}`);\n  };\n\n  return (\n    <>\n      <List\n        disablePadding\n        sx={{\n          display: 'flex',\n          flexDirection: 'column-reverse',\n          gap: 0.5,\n          mb: 3,\n        }}\n      >\n        {boardsArray?.map(board => (\n          <ListItem key={board._id} disablePadding>\n            <ListItemButton\n              sx={{\n                p: 0,\n                m: 0,\n                pointerEvents: currentItemId === board._id ? 'none' : 'auto',\n                '&:hover, &:focus': {\n                  backgroundColor: 'var(--sidebar-board-item-bg-color-CURRENT)',\n                },\n              }}\n              onClick={() => handleButtonClick(board._id)}\n            >\n              <SidebarBoardItem\n                board={board}\n                current={currentItemId === board._id}\n              />\n            </ListItemButton>\n          </ListItem>\n        ))}\n      </List>\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const LogOutBtnStyled = styled.button`\n  display: flex;\n  gap: 14px;\n  padding: 0px;\n  justify-content: center;\n  align-items: center;\n  height: 32px;\n  width: 105px;\n  border: none;\n  background-color: transparent;\n  cursor: pointer;\n\n  color: var(--sidebar-icon-logout-color);\n  &:hover,\n  &:focus {\n    color: var(--sidebar-icon-logout-color-HOVER-FOCUS);\n  }\n`;\n\nexport const SpanStyled = styled.span`\n  font-size: 14px;\n  font-weight: 500;\n  color: var(--sidebar-primary-text-color);\n  font-family: 'Poppins';\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\nexport const Icon = styled.svg`\n  width: 32px;\n  height: 32px;\n  fill: none;\n  stroke: currentColor;\n`;\n","import { useDispatch } from 'react-redux';\nimport sprite from '../../assets/images/sprite.svg';\nimport { Icon, LogOutBtnStyled, SpanStyled } from './logoutBtn.styled';\nimport { useLogOutMutation } from 'Services/API_Component/authAPI';\nimport { logout, setError, setIsLoggedIn } from 'redux/auth/authAPISlice';\n\nconst LogoutBtn = () => {\n  const dispatch = useDispatch();\n  const [logOut] = useLogOutMutation();\n\n  const handleLogOut = async () => {\n    try {\n      await logOut().unwrap();\n      dispatch(logout());\n      dispatch(setIsLoggedIn(false));\n    } catch (error) {\n      dispatch(setError(error));\n    }\n  };\n\n  return (\n    <>\n      {/* <LogOutBtnStyled onClick={() => dispatch(logOut())}> */}\n      <LogOutBtnStyled onClick={handleLogOut}>\n        <Icon width=\"32px\" height=\"32px\">\n          <use href={`${sprite}#icon-logout`} />\n        </Icon>\n        <SpanStyled>Log out</SpanStyled>\n      </LogOutBtnStyled>\n    </>\n  );\n};\n\nexport default LogoutBtn;\n","import styled from '@emotion/styled';\n\nexport const ComponentWrapper = styled.div`\n  padding: 0px;\n  display: flex;\n  flex-direction: column;\n  font-family: Poppins;\n  \n`;\nexport const Box = styled.div`\n  padding: 0px;\n  display: flex;\n  flex-direction: column;\n  font-family: Poppins;\n  \n`;\n\n\nexport const FormStyled = styled.form`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 0px;\n  \n`;\n\nconst inputStyles = `\n  width: 100%;\n  padding: 14px 18px;\n  margin-bottom: 14px;\n  font-family: Poppins;\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 21px;\n  letter-spacing: -0.28px;\n  caret-color: white;\n  border-radius: 8px;\n  border: 1px solid var(--button-bg-color-hover);\n  background-color: transparent;\n  transition: border-color 0.3s ease; \n    &::placeholder {\n    color: --secondary-text-color;\n    font-size: 14px;\n    line-height: 21px;\n    font-family: 'Poppins';\n    letter-spacing: -0.28px;\n  }\n  &:-webkit-autofill {\n    background-color: transparent !important;\n    border: 1px solid var(--button-bg-color);\n    \n  }\n\n  &:focus {\n   background-color: transparent !important;\n  -webkit-text-fill-color: var(--primary-text-color);\n    border: 1px outset var(--button-bg-color);\n  }\n\n  &:active {\n   background-color: transparent !important;\n    border: 1px outset var(--button-bg-color);\n     font-size: 14px;\n    line-height: 21px;\n    font-family: 'Poppins';\n    letter-spacing: -0.28px;\n  }\n`;\n\nexport const InputStyled = styled.input`\n  ${inputStyles}\n\n  \n`;\n\nexport const TextareaStyled = styled.textarea`\n  ${inputStyles}\n   font-size: 14px;\n    line-height: 21px !important;\n    font-family: 'Poppins';\n    letter-spacing: -0.28px !important;\n  min-height: 155px;\n  resize: none;\n  text-align: top;\n\n`;\n\nexport const LabelColorBox = styled.div`\n  display: flex;\n  gap: 4px;\n`;\n\n","import { Modal, Box, Typography, useMediaQuery } from '@mui/material';\nimport { ButtonClose } from 'components/ModalBoard/ModalBoard.styled';\nimport sprite from '../../assets/images/sprite.svg';\nimport { Report } from 'notiflix';\nimport { useFormik } from 'formik';\nimport * as Yup from \"yup\";\nimport Notiflix from 'notiflix';\nimport {\n  ComponentWrapper,\n  FormStyled,\n  InputStyled,\n  TextareaStyled,\n\n} from './ModalHelp.styled';\nimport { ButtonWithoutIcon} from \"components/Buttons/Button\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { API } from 'Services/API';\nimport { setError } from 'redux/auth/authAPISlice';\nconst ModalStyles = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 350,\n  borderRadius: 8 / 4,\n  border: '1px solid rgba(190, 219, 176, 0.50)',\n  background: '#151515',\n  padding: 24/8,\n};\n\nconst titleStyles = {\n  color: 'var(--primary-text-color)',\n  fontSize: 18,\n  fontStyle: 'normal',\n  fontWeight: 500,\n  lineHeight: 'normal',\n  letterSpacing: -0.36,\n  marginBottom: 24 / 8,\n  fontFamily: 'Poppins',\n};\n\n\n\nconst ModalHelp = ({ open, handleClose }) => {\n    const adaptiveStyle = useMediaQuery('(min-width: 1440px)');\n    const dispatch = useDispatch()\n    const[helpUser] = API.useHelpUserMutation()\n    const email = useSelector(state => state.auth.user.email);\n    const handleSubmit = async () => {\n        try {\n            const response = await helpUser({\n                email: formik.values.email,\n                comment: formik.values.comment,\n            })\n            if (response) {\n                handleClose();\n                \n            Report.success(\n                    'Email successfully sent',\n                    'Our developer has engaged in an epic battle to provide you with an answer. Brace yourself for the victory writing, and in the meantime, hold tight!',\n                    'Ok'\n                );  \n            }\n            formik.resetForm()    \n        }\n        catch (error) {\n      if (error.status === 400) {\n        console.log('All field must be filled in');\n      } else {\n        console.log('An error occurred:', error.data.message);\n        dispatch(setError(error));\n      }\n    }\n    };\n    \n    const validationSchema = Yup.object({\n        email: Yup.string().email()\n            .required('Email is required'),\n        comment: Yup.string()\n        .required('Comment is required'),\n    });\n\n    const formik = useFormik({\n        initialValues: { email: email, comment: \"\" , },\n        onSubmit: ({ title }) => handleSubmit(title),\n        validationSchema,\n    });\n    \n    return (\n      <ComponentWrapper> \n      <Modal\n          open={open}\n          onClose={handleClose}\n          aria-labelledby=\"modal-modal-title\"\n          aria-describedby=\"modal-modal-description\"\n        \n      >\n        <Box sx={{ ...ModalStyles, width: adaptiveStyle ? 400 : 335,  background:'var(--modal-bg-color)' }}>\n          <Typography variant=\"h2\" sx={titleStyles} >\n            Need help\n          </Typography>\n            <ButtonClose type=\"button\" onClick={handleClose} >\n            <svg style={{ stroke: 'var(--primary-text-color)' }} width=\"18\" height=\"18\">\n              <use href={sprite + '#icon-x-close'} />\n            </svg>\n          </ButtonClose>\n         \n        <FormStyled onSubmit={formik.handleSubmit}>\n            <InputStyled\n                id=\"email\"\n                name=\"email\"\n                placeholder=\"Email address\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={formik.values.email}\n                pattern=\"^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$\"\n                title=\"Please enter a valid email address\"\n            />\n             <TextareaStyled\n                id=\"comment\"\n                name=\"comment\"\n                placeholder=\"Comment\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={formik.values.comment}\n            /> \n       \n            <ButtonWithoutIcon\n            title={'Send'}\n            type={'submit'}\n            sx={{ marginTop: 24, background:'var(--primary-text-color)' }}\n            onClick={() => {\n                (formik.values.email === '' && Notiflix.Notify.warning('Email field must be filled in')) || (formik.values.comment === '' && Notiflix.Notify.warning('Comment field must be filled in'));\n            }}\n            >\n            Send\n            </ButtonWithoutIcon> \n         </FormStyled>            \n         </Box>\n      </Modal>\n        </ComponentWrapper>\n    );\n}; \n\n    \n\n\nexport default ModalHelp;","import { useEffect, useState } from 'react';\nimport sprite from '../../assets/images/sprite.svg';\nimport { HelpIcon } from './SidebarContent-styled';\n\n\n\nexport const SidebarHelpIcon = () => {\n  const [startAnimation, setStartAnimation] = useState(true);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setStartAnimation(true);\n      setTimeout(() => {\n        setStartAnimation(false);\n      }, 1000);\n    }, 7000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  return (\n    <HelpIcon startAnimation={startAnimation}>\n      <use href={sprite + '#icon-help'}></use>\n    </HelpIcon>\n  );\n};\n","import {\n  CreateBoardWrap,\n  HelpBox,\n  HelpButton,\n  HelpText,\n  Image,\n  Subtitle,\n  TitleCreate,\n} from './SidebarContent-styled';\nimport { Box } from '@mui/material';\nimport { useState } from 'react';\n\nimport styles from './SidebarCustomScroll.module.css';\n\nimport AloeVera from '../../assets/images/aloe-vera.png';\n\nimport { SidebarLogo } from 'components/Logo/Logo';\nimport { ButtonSidebar } from 'components/Buttons/Button';\nimport { SidebarBoardList } from './SidebarBoardList';\n\nimport LogoutBtn from 'components/logoutBtn/logoutBtn';\nimport ModalBoard from 'components/ModalBoard/ModalBoard';\nimport ModalHelp from 'components/ModalHelp/ModalHelp';\nimport { SidebarHelpIcon } from './SidebarHelpIcon';\n\nexport const SidebarContent = ({ isSidebarShown }) => {\n  const [isModalBoardOpen, setIsModalBoardOpen] = useState(false);\n  const [isModalHelpOpen, setIsModalHelpOpen] = useState(false);\n\n  const modalBoardStateChange = () => setIsModalBoardOpen(!isModalBoardOpen);\n  const modalHelpStateChange = () => setIsModalHelpOpen(!isModalHelpOpen);\n\n  return (\n    <>\n      <Box\n        className={styles.container}\n        sx={{\n          pt: 3,\n          pb: 3,\n          display: 'flex',\n          flexGrow: 1,\n          flexDirection: 'column',\n          justifyContent: 'space-between',\n        }}\n      >\n        <Box>\n          <Box sx={{ pl: { 0: 1.75, 768: 3 }, pr: { 0: 1.75, 768: 3 } }}>\n            <SidebarLogo sx={{ mb: 7.5 }} isSidebarShown={isSidebarShown} />\n\n            <Subtitle sx={{ mb: 1 }} isSidebarShown={isSidebarShown}>\n              My boards\n            </Subtitle>\n\n            <CreateBoardWrap sx={{ mb: 5 }}>\n              <TitleCreate isSidebarShown={isSidebarShown}>\n                Create a <br /> new board\n              </TitleCreate>\n              <ButtonSidebar onClick={modalBoardStateChange} />\n            </CreateBoardWrap>\n          </Box>\n          <SidebarBoardList />\n        </Box>\n\n        <Box sx={{ pl: { 0: 1.75, 768: 3 }, pr: { 0: 1.75, 768: 3 } }}>\n          <HelpBox sx={{ p: { 0: 1.75, 768: 2.5 }, mb: 3 }}>\n            <Image\n              src={AloeVera}\n              alt={'aloe vera'}\n              isSidebarShown={isSidebarShown}\n            />\n            <HelpText\n              isSidebarShown={isSidebarShown}\n              sx={{\n                mb: 2.25,\n                fontSize: { 0: '12px', 768: '14px' },\n                lineHeight: { 0: '16px', 768: '20px' },\n              }}\n            >\n              If you need help with <span>TaskPro</span>, check out our support\n              resources or reach out to our customer support team.\n            </HelpText>\n            <HelpButton\n              type=\"button\"\n              isSidebarShown={isSidebarShown}\n              onClick={modalHelpStateChange}\n            >\n              <SidebarHelpIcon />\n              Need help?\n            </HelpButton>\n          </HelpBox>\n          <LogoutBtn />\n        </Box>\n      </Box>\n\n      <ModalBoard\n        boardTitle={'New board'}\n        open={isModalBoardOpen}\n        handleClose={modalBoardStateChange}\n      />\n      <ModalHelp open={isModalHelpOpen} handleClose={modalHelpStateChange} />\n    </>\n  );\n};\n","import { Box, Drawer } from '@mui/material';\n\nimport { SidebarContent } from './SidebarContent';\nimport { SIDEBARMOBILEWIDTH, SIDEBARWIDTH } from './SidebarCONSTANTS';\n\nexport const Sidebar = ({ ...props }) => {\n  const { window, isMobileSidebar, handleSidebarToggle } = props;\n  const container =\n    window !== undefined ? () => window().document.body : undefined;\n\n  return (\n    <Box\n      component=\"nav\"\n      sx={{ width: { 1440: SIDEBARWIDTH }, flexShrink: { 1440: 0 } }}\n      aria-label=\"sidebar options\"\n    >\n      <Drawer\n        container={container}\n        variant=\"temporary\"\n        open={isMobileSidebar}\n        onClose={handleSidebarToggle}\n        ModalProps={{ keepMounted: true }}\n        slotProps={{\n          backdrop: {\n            style: {\n              backgroundColor: 'var(--sidebar-backdrop-color)',\n            },\n          },\n        }}\n        sx={{\n          display: { 0: 'block', 1440: 'none' },\n          '& .MuiDrawer-paper': {\n            boxSizing: 'border-box',\n            boxShadow: 'none',\n            border: 'none',\n            overflowX: 'hidden',\n            width: {\n              0: 192,\n              320: '60vw',\n              375: SIDEBARMOBILEWIDTH,\n              768: SIDEBARWIDTH,\n            },\n            backgroundColor: 'var(--sidebar-primary-bg-color)',\n          },\n        }}\n      >\n        <SidebarContent isSidebarShown={isMobileSidebar} />\n      </Drawer>\n\n      <Drawer\n        variant=\"permanent\"\n        open\n        sx={{\n          display: { 0: 'none', 1440: 'block' },\n          '& .MuiDrawer-paper': {\n            boxSizing: 'border-box',\n            boxShadow: 'none',\n            border: 'none',\n            overflowX: 'hidden',\n            width: SIDEBARWIDTH,\n            backgroundColor: 'var(--sidebar-primary-bg-color)',\n          },\n        }}\n      >\n        <SidebarContent isSidebarShown={true} />\n      </Drawer>\n    </Box>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const HeaderContainer = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  max-width: 100%;\n  width: auto;\n  height:68px;\n  padding: 18px 24px;\n  background: var(--header-bg-color);\n  color: var(--primary-text-color);\n\n  @media (max-width: 1440px) {\n    padding: 18px 32px;\n  }\n  @media (max-width: 768px) {\n    padding: 14px 20px;\n    height:60px;\n  }\n`;\n\nexport const ThemeContainer = styled.div`\n  position: relative;\n  display: inline-block;\n  width: 70px;\n  height: auto;\n  margin-right: 14px;\n  margin-left: auto;\n`;\n\nexport const ThemeWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  color: var(--primary-text-color);\n  font-size: 14px;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  svg {\n    stroke: var(--header-theme-color);\n  }\n  &:hover {\n    color: var(--header-theme-color);\n  }\n`;\n\nexport const ThemeUL = styled.ul`\n  position: absolute;\n  top: 45px;\n  left: -12px;\n  margin: 0px;\n  max-height: 0px;\n  padding: 0 44px 0 18px;\n  background: var(--modal-bg-color);\n  overflow: hidden;\n  list-style: none;\n  border-radius: 8px;\n\n  &.visible {\n    width: 100px;\n    max-height: 107px;\n    padding: 18px 44px 18px 18px;\n  }\n  @media (max-width: 768px) {\n    top: 41px;\n  }\n`;\n\nexport const ThemeButton = styled.button`\n  border: none;\n  background: transparent;\n  text-transform: capitalize;\n  cursor: ${({ disabled }) => (disabled ? '' : 'pointer')};\n  color: ${({ selected }) =>\n    selected ? 'var(--button-bg-color)' : 'var(--secondary-text-color)'};\n  }\n`;\n","import { IconButton } from '@mui/material';\nimport MenuIcon from '@mui/icons-material/Menu';\n\nexport const NavBtn = ({ handleSidebarToggle }) => {\n  return (\n    <>\n      <IconButton\n        color=\"inherit\"\n        aria-label=\"open sidebar options\"\n        edge=\"start\"\n        onClick={handleSidebarToggle}\n        sx={{ width: 32, height: 32, display: { 1440: 'none' } }}\n      >\n        <MenuIcon />\n      </IconButton>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 12000;\n`;\nexport const ModalContent = styled.div`\n  position: relative;\n  width:100%;\n  margin-left:auto;\n  margin-right: auto;\n  box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.05);\n  padding:24px;\n  border-radius: 8px;\n  background: var( --modal-bg-color);\n  @media (min-width: 375px) {\n    // max-width: 287px;\n    max-width: 335px;\n  }\n  @media (min-width: 768px) {\n    // max-width: 352px;\n    max-width: 400px;\n  }\n  }\n  \n`;\n\nexport const Btn = styled.button`\n  position: absolute;\n  top: 13px;\n  right: 10px;\n  width: 24px;\n  height: 24px;\n  flex-shrink: 0;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  transition: all 0.3 ease;\n  &:hover,\n  &:focus {\n    svg {\n      transform: scale(1.2);\n    }\n  }\n`;\n\nexport const IconClose = styled.svg`\n  width: 18px;\n  height: 18px;\n  flex-shrink: 0;\n  stroke: var(--primary-text-color);\n`;\n","import styled, { css } from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const Container = styled.div`\n  background-color: var(--input-bcg-color);\n  margin-left: auto;\n  margin-right: auto;\n  // padding: 24px;\n  border-radius: 8px;\n\n  @media (min-width: 375px) {\n    // max-width: 287px;\n    max-width: 335px;\n  }\n  @media (min-width: 768px) {\n    // max-width: 352px;\n    max-width: 400px;\n  }\n`;\nexport const FormWrap = styled.div`\n  background-color: var(--modal-bg-color);\n  display: flex;\n  flex-direction: column;\n  justify-content: right;\n  align-items: center;\n  min-width: 100%;\n`;\n\nexport const Title = styled.h3`\n  font-size: 18px;\n  margin-right: auto;\n  font-weight: 500;\n  letter-spacing: -0.36px;\n  color: var(--primary-text-color);\n`;\nexport const AvatarWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 25px;\n  margin-top: 25px;\n`;\nexport const ImgWrapper = styled.div`\n  position: relative;\n  width: 68px;\n  height: 68px;\n  border-radius: 8px;\n  transition: all 0.3s ease;\n`;\nexport const IconAvatar = styled.svg`\n  width: 68px;\n  height: 68px;\n  --color1: var(--avatar-bcg-color);\n  --color2: var(--avatar-fill-color);\n`;\n\nexport const Img = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  border-radius: 8px;\n`;\nexport const IconButton = styled.button`\n  border: none;\n  border-radius: 8px;\n  cursor:pointer;\n  position: absolute;\n  top: 101%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 24px;\n  height: 24px;\n  background-color: var(--icon-plus-bcg);\n`;\nexport const IconPlus = styled.svg`\n  display: block;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 10px;\n  height: 10px;\n  stroke: var(--icon-add-color);\n`;\n\nexport const FormikForm = styled(Form)`\n  width: 100%;\n  display: flex;\n  gap: 14px;\n\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\nexport const Label = styled.label`\n  display: block;\n  width: 100%;\n`;\nexport const FormikInput = styled(Field)`\n  width: 100%;\n  padding: 14px 18px;\n  font-family: Poppins;\n  font-size: 14px;\n  line-height: normal;\n  letter-spacing: -0.28px;\n\n  color: var(--primary-text-color);\n  border-radius: 8px;\n  opacity: 0.4;\n  border: 1px solid var(--input-border-color);\n\n  background: var(--input-bcg-color);\n  transition: all 0.3s ease;\n\n  &::placeholder {\n    color: var(--primary-text-color);\n    font-size: 14px;\n    font-family: 'Poppins';\n    letter-spacing: -0.28px;\n  }\n\n  &:focus {\n    opacity: 1;\n    outline: none;\n  }\n`;\nexport const Wrap = styled.div`\n  display: block;\n  position: relative;\n`;\nexport const Icon = styled.svg`\n  width: 18px;\n  height: 18px;\n  stroke: var(--primary-text-color);\n  fill: none;\n  display: block;\n`;\nexport const IconBtn = styled(({ active, ...rest }) => <button {...rest} />)`\n  position: absolute;\n  right: 12px;\n  top: 50%;\n  background-color: transparent;\n  border: none;\n  transform: translateY(-50%);\n  cursor: pointer;\n  opacity: 0.4;\n  & svg {\n    stroke: var(--primary-text-color);\n  }\n\n  &:focus {\n    outline: none;\n  }\n  ${props =>\n    props.active &&\n    css`\n      opacity: 1;\n      svg {\n        stroke: var(--input-border-color);\n      }\n    `}\n`;\n\nexport const Button = styled.button`\n  color: var(--btn-text-color);\n  text-align: center;\n  font-family: Poppins;\n  font-size: 14px;\n  padding: 14px 0;\n  -webkit-tap-highlight-color: transparent;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  font-size: 14px;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n  margin-top: 10px;\n  width: 100%;\n  border: none;\n  border-radius: 8px;\n  background:  var(--input-border-color);\n  opacity: 1;\n   outline: none;\n     cursor: pointer;\n  &:disabled {\n    // opacity: 0.6;\n    //  background: var(--input-border-color);\n    cursor: not-allowed;\n    &:focus {\n      opacity: 1;\n       -webkit-tap-highlight-color: none;\n       \n    }\n`;\nexport const Error = styled(ErrorMessage)`\n  font-family: 'Roboto';\n  opacity: 0.5;\n  color: var(--secondary-text-color);\n  font-size: 14px;\n  margin-top: 5px;\n  padding-left: 5px;\n  max-width: 200px;\n`;\n","export const selectUser = state => state.auth.user;\nexport const selectIsLoggedIn = state => state.auth.isLoggedIn;\nexport const selectTheme = state => state.auth.user.theme;\nexport const selectIsFetchingCurrent = state =>\n  state.auth.isFetchingCurrentUser;\n   export const selectAvatar = state => state.auth.user.avatarURL;\n\nconst authSelectors = {\n  selectUser,\n  selectIsLoggedIn,\n  selectTheme,\n  selectIsFetchingCurrent,\n  selectAvatar,\n};\nexport default authSelectors;\n","\nimport { Formik } from 'formik';\nimport { validationSchema } from 'validationSchemas/validationSchema';\n\nimport Sprite from '../../assets/images/sprite.svg';\nimport { useState } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Notify } from 'notiflix';\nimport { setAvatar, setUser } from 'redux/user/userAPISlice';\n\nimport {\n  Container,\n  FormWrap,\n  AvatarWrapper,\n  IconAvatar,\n  IconButton,\n  IconPlus,\n  Img,\n  ImgWrapper,\n  Title,\n  FormikForm,\n  Label,\n  FormikInput,\n  Wrap,\n  Icon,\n  Error,\n  Button,\n  IconBtn,\n} from './EditProfileContent.styled';\n\nimport { selectAvatar } from 'redux/auth/authSelectors';\n// import Loader from 'components/Loader/Loader';\nimport {\n  useUpdateAvatarMutation,\n  useUpdateUserMutation,\n} from 'Services/API_Component';\n\nexport const EditProfileContent = ({ onClose }) => {\n  const [showPassword, setShowPassword] = useState(false);\n  const togglePassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const [updateAvatar] = useUpdateAvatarMutation();\n  const [updateUser] = useUpdateUserMutation();\n\n  const dispatch = useDispatch();\n  const currentImage = useSelector(selectAvatar);\n\n  const user = useSelector(state => state.auth.user);\n  // const currentImage=useSelector(state=>state.auth.user.avatarURL)\n\n  const handleAvatarChange = async event => {\n    const file = event.target.files[0];\n\n    console.log(file);\n\n    if (!file) {\n      return;\n    }\n\n    const formData = new FormData();\n    console.log(formData);\n\n    formData.append('avatarURL', file);\n     console.log(formData);\n    \n\n    try {\n      const response = await updateAvatar(formData);\n      console.log(response);\n\n      if (response.data?.avatarURL) {\n        const newAvatarURL = response.data.avatarURL;\n\n        dispatch(setAvatar(newAvatarURL));\n        Notify.success('Avatar updated successfully!');\n        onClose();\n      } else {\n        Notify.failure('Error updating avatar!');\n      }\n    } catch (error) {\n      Notify.failure('An error occurred:', error);\n    }\n     onClose();\n  };\n\n  const handleSubmit = async values => {\n    try {\n      const response = await updateUser(values);\n      console.log(response.data);\n      if (response.error) {\n        Notify.failure('Error updating the profile:', response.error);\n      } else {\n        dispatch(setUser(values));\n\n        Notify.success('User profile updated!');\n        onClose();\n      }\n    } catch (error) {\n      Notify.failure('Error updating the profile:', error);\n    }\n  };\n\n  return (\n    <>\n      <Container>\n        <FormWrap>\n          <Title>Edit profile</Title>\n          <AvatarWrapper>\n            <ImgWrapper>\n              {currentImage.includes('gravatar') ? (\n                <IconAvatar aria-label=\"User picture\">\n                  <use href={`${Sprite}#icon-user`}></use>\n                </IconAvatar>\n              ) : (\n                <Img src={currentImage} alt=\"User picture\" />\n              )}\n\n              <IconButton\n                onClick={() => document.getElementById('avatarURL').click()}\n              >\n                <IconPlus aria-label=\"add\">\n                  <use href={`${Sprite}#icon-plus`}></use>\n                </IconPlus>\n                <input\n                  id=\"avatarURL\"\n                  name=\"avatarURL\"\n                  type=\"file\"\n                  accept=\"image/*\"\n                  onChange={handleAvatarChange}\n                  style={{ display: 'none' }}\n                />\n              </IconButton>\n            </ImgWrapper>\n          </AvatarWrapper>\n\n          <Formik\n            initialValues={{\n              name: `${user.name}`,\n              email: `${user.email}`,\n              password: '',\n            }}\n            validationSchema={validationSchema}\n            onSubmit={handleSubmit}\n          >\n            {({\n              values,\n              errors,\n              touched,\n              dirty,\n              handleBlur,\n              handleChange,\n              isValid,\n            }) => (\n              <>\n                <FormikForm>\n                  <Label htmlFor=\"name\">\n                    <FormikInput\n                      autoComplete=\"off\"\n                      id=\"name\"\n                      name=\"name\"\n                      type=\"text\"\n                      placeholder=\"Enter your name\"\n                      value={values.name}\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      pattern=\"^[a-zA-Z0-9@$!%*?& -]*$\"\n                      title=\"Only letters, digits, and certain symbols are allowed.\"\n                    />\n                    {touched.name && errors.name && (\n                      <Error>{errors.name}</Error>\n                    )}\n                    <Error name=\"name\" component=\"div\" />\n                  </Label>\n\n                  <Label htmlFor=\"email\">\n                    <FormikInput\n                      autoComplete=\"off\"\n                      id=\"email\"\n                      name=\"email\"\n                      type=\"email\"\n                      placeholder=\"Enter your email\"\n                      value={values.email}\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      pattern=\"^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$\"\n                      title=\"Please enter a valid email address\"\n                    />\n                    {touched.email && errors.email && (\n                      <Error>{errors.email}</Error>\n                    )}\n                    <Error name=\"email\" component=\"div\" />\n                  </Label>\n\n                  <Label htmlFor=\"password\">\n                    <Wrap>\n                      <FormikInput\n                        autoComplete=\"off\"\n                        id=\"password\"\n                        name=\"password\"\n                        type={showPassword ? 'text' : 'password'}\n                        placeholder=\"Create a password\"\n                        value={values.password}\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        pattern=\"^[a-zA-Z0-9@$!%*?& -_#+=]*$\"\n                        title=\"Password must contain at least one letter and at least one number\"\n                      />{' '}\n                      <IconBtn\n                        type=\"button\"\n                        onClick={togglePassword}\n                        active={showPassword}\n                        className={showPassword ? 'active' : ''}\n                      >\n                        <Icon>\n                          <use href={`${Sprite}#icon-eye`}></use>\n                        </Icon>\n                      </IconBtn>\n                    </Wrap>\n\n                    {touched.password && errors.password && (\n                      <Error>{errors.password}</Error>\n                    )}\n                    <Error name=\"password\" component=\"div\" />\n                  </Label>\n\n                  <Button type=\"submit\" disabled={!dirty || !isValid}>\n                    Send\n                  </Button>\n                </FormikForm>\n              </>\n            )}\n          </Formik>\n        </FormWrap>\n      </Container>\n    </>\n  );\n};\n","import { createPortal } from 'react-dom';\nimport Sprite from '../../assets/images/sprite.svg';\nimport { useCallback, useEffect } from 'react';\nimport {\n  Backdrop,\n  ModalContent,\n  Btn,\n  IconClose,\n} from './ModalEditProfile.styled';\nimport { EditProfileContent } from './EditProfileContent';\n\nconst modalRoot = document.querySelector('#root');\n\nexport const ModalEditProfile = ({ onClose }) => {\n  const handleButtonClick = () => {\n    console.log('Close button clicked');\n    onClose();\n  };\n\n  const handleBackdropClick = event => {\n    if (event.target === event.currentTarget) {\n      console.log('Backdrop clicked');\n      onClose();\n    }\n  };\n  const handleKeyDown = useCallback(\n    event => {\n      if (event.code === 'Escape') {\n        onClose();\n      }\n    },\n    [onClose]\n  );\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      const handleKeyDown = event => {\n        if (event.code === 'Escape') {\n          onClose();\n        }\n      };\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [handleKeyDown, onClose]);\n\n  return createPortal(\n    <Backdrop onClick={handleBackdropClick}>\n      <ModalContent>\n        <Btn onClick={handleButtonClick}>\n          <IconClose aria-label=\"close\">\n            <use href={`${Sprite}#icon-x-close`}></use>\n          </IconClose>\n        </Btn>\n        <EditProfileContent onClose={onClose} />\n      </ModalContent>\n    </Backdrop>,\n    modalRoot\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const UserInfoContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n`;\n\nexport const UserName = styled.p`\n    margin-right: 8px;\n    color: var(--primary-text-color);\n    font-size: 14px;\n    font-weight: 500;\n    letter-spacing: -0.28px;\n`;\n\nexport const EmptyAvatar = styled.div`\n    width: 32px;\n    height: 32px;\n    background: var(--primary-text-color);\n    border-radius: 8px;\n`;\n\nexport const ImgAvatar = styled.img`\n    width: 32px;\n    height: 32px;\n    border-radius: 8px;\n`;","import { useState } from 'react';\nimport { ModalEditProfile } from 'components/EditProfile/ModalEditProfile';\nimport {\n  EmptyAvatar,\n  ImgAvatar,\n  UserInfoContainer,\n  UserName,\n} from './UserInfo.styled';\n\nexport const UserInfo = ({ name = 'User', avatarURL }) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleCloseModal = () => {\n    console.log('handleCloseModal called');\n    setIsOpen(false);\n  };\n\n  return (\n    <UserInfoContainer onClick={() => setIsOpen(true)}>\n      <UserName>{name}</UserName>\n      <div>\n        {avatarURL ? (\n          <ImgAvatar src={avatarURL} alt=\"User Avatar\" />\n        ) : (\n          <EmptyAvatar />\n        )}\n      </div>\n      {isOpen && (\n        <ModalEditProfile onClose={handleCloseModal}></ModalEditProfile>\n      )}\n    </UserInfoContainer>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport {\n  HeaderContainer,\n  ThemeButton,\n  ThemeContainer,\n  ThemeUL,\n  ThemeWrap,\n} from './Header.styled';\nimport sprite from '../../assets/images/sprite.svg';\nimport { NavBtn } from './NavBtn/NavBtn';\nimport { UserInfo } from './UserInfo/UserInfo';\nimport { useSelector } from 'react-redux';\nimport { selectUser } from 'redux/auth/authSelectors';\nimport { API } from 'Services/API';\n\nexport const Header = ({ handleSidebarToggle }) => {\n  const { avatarURL, name, theme } = useSelector(selectUser);\n  const [themeListVisible, setThemeListVisible] = useState(false);\n  const [selectedTheme, setSelectedTheme] = useState(theme);\n  const [themeUser] = API.useThemeUserMutation();\n  const themeList = ['light', 'dark', 'violet'];\n\n  const handleThemeList = () => {\n    setThemeListVisible(!themeListVisible);\n  };\n\n  const closeThemeList = () => {\n    setThemeListVisible(false);\n  };\n\n  const handleThemeChange = async (e) => {\n    setSelectedTheme(e.target.value);\n    try {\n      await themeUser({theme: e.target.value});\n      closeThemeList();\n    } catch (error) {\n      console.error('Error updating theme:', error);\n    };\n  };\n  \n\n  useEffect(() => {\n    document.body.classList.add(selectedTheme);\n    return () => {\n      document.body.classList.remove(selectedTheme);\n    };\n  }, [selectedTheme]);\n\n  useEffect(() => {\n    const handleWindowClick = event => {\n      if (event.target.nodeName !== 'BUTTON') {\n        closeThemeList();\n      }\n    };\n\n    const handleKeyDown = event => {\n      if (event.key === 'Escape') {\n        closeThemeList();\n      }\n    };\n\n    window.addEventListener('mousedown', handleWindowClick);\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('mousedown', handleWindowClick);\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [themeListVisible]);\n\n  return (\n    <HeaderContainer>\n      <NavBtn handleSidebarToggle={handleSidebarToggle} />\n      <ThemeContainer>\n        <ThemeWrap onClick={handleThemeList}>\n          <p>Theme</p>\n          <svg width=\"16px\" height=\"16px\">\n            <use href={sprite + '#icon-drop-down'}></use>\n          </svg>\n        </ThemeWrap>\n        <ThemeUL className={themeListVisible ? 'visible' : ''}>\n          {themeList.map(theme => (\n            <li key={theme}>\n              <ThemeButton\n                selected={selectedTheme === theme}\n                disabled={selectedTheme === theme}\n                value={theme}\n                onClick={handleThemeChange}\n              >\n                {theme}\n              </ThemeButton>\n            </li>\n          ))}\n        </ThemeUL>\n      </ThemeContainer>\n      <UserInfo name={name} avatarURL={avatarURL} />\n    </HeaderContainer>\n  );\n};\n","import { Box, Button, Typography } from '@mui/material';\nimport ModalBoard from 'components/ModalBoard/ModalBoard';\nimport { SIDEBARWIDTH } from 'components/Sidebar/SidebarCONSTANTS';\nimport { useState } from 'react';\n\nexport const DefaultScreenPage = () => {\n  const [isModalBoardOpen, setIsModalBoardOpen] = useState(false);\n  const modalBoardStateChange = () => setIsModalBoardOpen(!isModalBoardOpen);\n  return (\n    <>\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          pt: { 0: 9.25, 768: 11, 1440: 9.75 },\n          pb: { 0: 3, 768: 4, 1440: 1 },\n          pl: { 0: 2.5, 768: 4, 1440: 3 },\n          pr: { 0: 2.5, 768: 4, 1440: 3 },\n          height: '100vh',\n          width: { 0: '100vw', 1440: `calc(100vw - ${SIDEBARWIDTH}px)` },\n          flexGrow: 1,\n          backgroundColor: 'var(--primary-bg-color)',\n        }}\n      >\n        <Box sx={{ width: '486px' }}>\n          <Typography\n            sx={{\n              padding: 0,\n              margin: 0,\n              color: 'var(--secondary-text-color)',\n              textAlign: 'center',\n              fontFamily: 'Poppins',\n              fontSize: { 0: '12px', 768: '14px' },\n              fontStyle: 'normal',\n              fontWeight: 400,\n              lineHeight: { 0: '16px', 768: '18px' },\n              letterSpacing: { 0: '-0.24px', 768: '-0.28px' },\n            }}\n          >\n            Before starting your project, it is essential{' '}\n            <Button\n              onClick={modalBoardStateChange}\n              type=\"button\"\n              sx={{\n                verticalAlign: 'baseline',\n                padding: 0,\n                margin: 0,\n                color: 'var(--default-screen-page-link-color)',\n                backgroundColor: 'transparent',\n                fontFamily: 'Poppins',\n                border: 'none',\n                cursor: 'pointer',\n                textDecoration: 'none',\n                outline: 'none',\n                textTransform: 'lowercase',\n                fontSize: { 0: '12px', 768: '14px' },\n\n                '&:hover, &:focus': {\n                  textDecoration: 'underline',\n                  backgroundColor: 'transparent',\n                },\n              }}\n            >\n              to create a board\n            </Button>{' '}\n            to visualize and track all the necessary tasks and milestones. This\n            board serves as a powerful tool to organize the workflow and ensure\n            effective collaboration among team members.\n          </Typography>\n        </Box>\n      </Box>\n\n      <ModalBoard\n        boardTitle={'New board'}\n        open={isModalBoardOpen}\n        handleClose={modalBoardStateChange}\n      />\n    </>\n  );\n};\n","import { AppBar, Box } from '@mui/material';\n\nimport { useState } from 'react';\nimport { SIDEBARWIDTH } from 'components/Sidebar/SidebarCONSTANTS';\nimport { Sidebar } from 'components/Sidebar/Sidebar';\nimport { Header } from 'components/Header/Header';\nimport { Outlet } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { selectIsLoggedIn } from 'redux/auth/authSelectors';\nimport { DefaultScreenPage } from 'pages/ScreensPage/DefaultScreenPage';\nimport { API } from 'Services/API';\n\nconst HomePage = () => {\n  const isLoggdIn = useSelector(selectIsLoggedIn);\n  const [isMobileSidebar, setIsMobileSidebar] = useState(false);\n  const handleSidebarToggle = () => setIsMobileSidebar(!isMobileSidebar);\n\n  const { data: boards } = API.useGetBoardsQuery();\n\n  return (\n    isLoggdIn && (\n      <Box sx={{ display: 'flex', overflowX: 'hidden' }}>\n        <AppBar\n          position=\"fixed\"\n          sx={{\n            width: { 1440: `calc(100% - ${SIDEBARWIDTH}px)` },\n            height: { 768: 68 },\n            ml: { 1440: `${SIDEBARWIDTH}px` },\n            boxShadow: 'none',\n            backgroundColor: '#161616',\n          }}\n        >\n          <Header handleSidebarToggle={handleSidebarToggle} />\n        </AppBar>\n\n        <Sidebar\n          isMobileSidebar={isMobileSidebar}\n          handleSidebarToggle={handleSidebarToggle}\n        />\n\n        {boards?.length === 0 ? <DefaultScreenPage /> : <Outlet />}\n      </Box>\n    )\n  );\n};\n\nexport default HomePage;\n"],"names":["API","useRegisterMutation","useLogInMutation","useLogOutMutation","useUpdateAvatarMutation","useGetCurrentUserQuery","useHelpUserMutation","useThemeUserMutation","useUpdateUserMutation","useGetBoardsQuery","useGetBoardContentByIdQuery","useGetBoardByIdQuery","useAddBoardsMutation","useDeleteBoardByIdMutation","useUpdateBoardByIdMutation","useAddColumnMutation","useUpdateColumnByIdMutation","useDeleteColumnByIdMutation","useGetAllCardsQuery","useAddCardMutation","useUpdateCardByIdMutation","useDeleteCardByIdMutation","useUpdateCardColumnByIdMutation","ButtonWithIcon","_ref","title","onClick","type","_jsxs","Button","variant","disableElevation","sx","display","gap","color","fontFamily","alignItems","textTransform","borderRadius","letterSpacing","fontSize","background","lineHeight","fontWeight","fontStyle","width","height","children","_jsx","Box","justifyContent","stroke","href","sprite","ButtonWithoutIcon","_ref2","marginTop","ButtonAdd","_ref3","ButtonSidebar","_ref4","IconButton","slideLigtning","keyframes","_templateObject","_taggedTemplateLiteral","slideToRight","_templateObject2","SidebarLogoIcon","styled","fill","animation","concat","animationTimingFunction","SidebarLogoWrap","transform","isSidebarShown","animationFillMode","SidebarLogoIconWrap","backgroundColor","overflow","SidebarLogoText","margin","StartPageLogoWrap","StartPageLogoIconWrap","StartPageLogoIcon","StartPageLogoText","SidebarLogo","_Fragment","StartPageLogo","style","ButtonClose","FormStyled","InputStyled","_templateObject3","TransparentSVG","_templateObject4","UlStyled","_templateObject5","UlBgStyled","_templateObject6","LiStyled","_templateObject7","ImgStyled","_templateObject8","LiIconsStyled","_templateObject9","ModalStyles","position","top","left","border","padding","titleStyles","marginBottom","open","handleClose","adaptiveStyle","useMediaQuery","Modal","onClose","_objectSpread","Typography","SIDEBARWIDTH","SIDEBARMOBILEWIDTH","slideToLeft","slideToDown","shakeAnimation","Subtitle","CreateBoardWrap","paddingBottom","paddingTop","borderTop","borderBottom","TitleCreate","HelpBox","flexDirection","Image","HelpText","HelpButton","_ref5","cursor","textDecoration","outline","HelpIcon","_ref6","startAnimation","slideAround","BoardItemWrap","BoardItemIcon","BoardItemCurrentIcon","BoardItemTitleWrap","whiteSpace","BoardItemTitle","titleWidth","titleWrapWidth","current","slideText","animationName","animationDuration","animationIterationCount","animationDirection","setTitleWidth","measureRef","useRef","useEffect","observer","ResizeObserver","entries","_step","_iterator","_createForOfIteratorHelper","s","n","done","entry","value","target","contentRect","err","e","f","currentRef","observe","unobserve","ref","visibility","arrIcons","arrBG","titleStyle","_ref$board","board","boardTitle","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","inputValue","setInputValue","_useState3","iconId","_useState4","setIconId","_useState5","backgroundURL","_useState6","setBackgroundURL","_API$useAddBoardsMuta","addBoard","_API$useUpdateBoardBy","editBoard","navigate","useNavigate","handleSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","FormData","response","newBoardId","_response","wrap","_context","prev","next","icon","sent","setBoardResponse","data","_id","boardId","t0","console","log","formik","handleReset","stop","_x","apply","arguments","validationSchema","Yup","min","required","matches","description","useFormik","initialValues","onSubmit","ModalLayout","id","name","placeholder","onChange","currentTarget","setFieldValue","onBlur","handleBlur","map","handleIconCurrent","isSelected","transition","bg","src","alt","SidebarBoardItemIcon","setStartAnimation","randomNumber","Math","floor","random","interval","setInterval","setTimeout","clearInterval","opacity","SidebarBoardItem","isHovered","setIsHovered","setTitleWrapWidth","_useState7","window","innerWidth","_useState8","screenWidth","setScreenWidth","_useState9","_useState10","isModalOpen","setIsModalOpen","_API$useDeleteBoardBy","deleteBoard","handleResize","debounce","addEventListener","removeEventListener","modalStateChange","MeasureTitleWidth","onMouseEnter","onMouseLeave","pl","pr","right","List","disablePadding","ListItem","ListItemButton","p","m","pointerEvents","event","stopPropagation","ModalBoard","SidebarBoardList","boardsArray","setBoardsArray","currentItemId","setCurrentItemId","length","mb","LogOutBtnStyled","SpanStyled","Icon","_useLogOutMutation","logOut","handleLogOut","unwrap","logout","setIsLoggedIn","setError","ComponentWrapper","inputStyles","TextareaStyled","_API$useHelpUserMutat","helpUser","email","useSelector","state","auth","user","values","comment","Report","resetForm","status","message","handleChange","pattern","Notiflix","SidebarHelpIcon","SidebarContent","isModalBoardOpen","setIsModalBoardOpen","isModalHelpOpen","setIsModalHelpOpen","modalBoardStateChange","modalHelpStateChange","className","styles","pt","pb","flexGrow","AloeVera","LogoutBtn","ModalHelp","Sidebar","props","Object","assign","_objectDestructuringEmpty","isMobileSidebar","handleSidebarToggle","container","undefined","document","body","component","flexShrink","Drawer","ModalProps","keepMounted","slotProps","backdrop","boxSizing","boxShadow","overflowX","HeaderContainer","ThemeContainer","ThemeWrap","ThemeUL","ThemeButton","disabled","selected","NavBtn","edge","MenuIcon","Backdrop","ModalContent","Btn","IconClose","Container","FormWrap","Title","AvatarWrapper","ImgWrapper","IconAvatar","Img","IconPlus","FormikForm","Form","_templateObject10","Label","_templateObject11","FormikInput","Field","_templateObject12","Wrap","_templateObject13","_templateObject14","IconBtn","active","rest","_objectWithoutProperties","_excluded","_templateObject15","css","_templateObject16","_templateObject17","Error","ErrorMessage","_templateObject18","selectUser","selectIsLoggedIn","isLoggedIn","selectAvatar","avatarURL","EditProfileContent","showPassword","setShowPassword","togglePassword","_useUpdateAvatarMutat","updateAvatar","_useUpdateUserMutatio","updateUser","currentImage","handleAvatarChange","file","formData","_response$data","newAvatarURL","files","abrupt","append","setAvatar","Notify","_callee2","_context2","error","setUser","_x2","includes","Sprite","getElementById","click","accept","Formik","password","errors","touched","dirty","isValid","htmlFor","autoComplete","modalRoot","querySelector","ModalEditProfile","handleKeyDown","useCallback","code","createPortal","UserInfoContainer","UserName","EmptyAvatar","ImgAvatar","UserInfo","_ref$name","isOpen","setIsOpen","Header","_useSelector","theme","themeListVisible","setThemeListVisible","selectedTheme","setSelectedTheme","_API$useThemeUserMuta","themeUser","closeThemeList","handleThemeChange","classList","add","remove","handleWindowClick","nodeName","key","DefaultScreenPage","textAlign","verticalAlign","isLoggdIn","setIsMobileSidebar","boards","AppBar","ml","Outlet"],"sourceRoot":""}