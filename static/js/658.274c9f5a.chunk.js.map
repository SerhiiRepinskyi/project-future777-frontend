{"version":3,"file":"static/js/658.274c9f5a.chunk.js","mappings":"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","sources":["Services/API.js","components/Buttons/Button.jsx","components/Logo/Logo-styled.jsx","components/Logo/Logo.jsx","components/ModalBoard/ModalBoard.styled.jsx","components/ModalLayout/ModalLayout.jsx","components/Sidebar/SidebarCONSTANTS.js","components/Sidebar/SidebarContent-styled.jsx","webpack://react-homework-template/./src/components/Sidebar/SidebarCustomScroll.module.css?4eb1","components/Sidebar/SidebarBoardItem-styled.jsx","components/Sidebar/MeasureTitleWidth.jsx","components/ModalBoard/data.jsx","components/ModalBoard/ModalBoard.jsx","components/Sidebar/SidebarBoardItemIcon.jsx","components/Sidebar/SidebarBoardItem.jsx","components/Sidebar/SidebarBoardList.jsx","components/logoutBtn/logoutBtn.styled.jsx","components/logoutBtn/logoutBtn.jsx","components/ModalHelp/ModalHelp.styled.js","components/ModalHelp/ModalHelp.js","components/Sidebar/SidebarHelpIcon.jsx","components/Sidebar/SidebarContent.jsx","components/Sidebar/Sidebar.jsx","components/Header/Header.styled.js","components/Header/NavBtn/NavBtn.jsx","components/ModalEditProfile/ModalEditProfile.styled.jsx","redux/auth/authSelectors.js","components/ModalEditProfile/ModalEditProfile.jsx","components/Header/UserInfo/UserInfo.styled.js","components/Header/UserInfo/UserInfo.jsx","components/Header/Header.jsx","pages/ScreensPage/DefaultScreenPage.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["import {\n  useRegisterMutation,\n  useLogInMutation,\n  useLogOutMutation,\n  useGetCurrentUserQuery,\n  useUpdateUserMutation,\n  useThemeUserMutation,\n  useUpdateAvatarMutation,\n  useHelpUserMutation,\n  useGetBoardsQuery,\n  useGetBoardContentByIdQuery,\n  useGetBoardByIdQuery,\n  useAddBoardsMutation,\n  useDeleteBoardByIdMutation,\n  useUpdateBoardByIdMutation,\n  useAddColumnMutation,\n  useUpdateColumnByIdMutation,\n  useDeleteColumnByIdMutation,\n  useGetAllCardsQuery,\n  useAddCardMutation,\n  useUpdateCardByIdMutation,\n  useDeleteCardByIdMutation,\n  useUpdateCardColumnByIdMutation,\n} from './API_Component';\n\nexport const API = {\n  useRegisterMutation,\n  useLogInMutation,\n  useLogOutMutation,\n  useUpdateAvatarMutation,\n  useGetCurrentUserQuery,\n  useHelpUserMutation,\n  useThemeUserMutation,\n  useUpdateUserMutation,\n  useGetBoardsQuery,\n  useGetBoardContentByIdQuery,\n  useGetBoardByIdQuery,\n  useAddBoardsMutation,\n  useDeleteBoardByIdMutation,\n  useUpdateBoardByIdMutation,\n  useAddColumnMutation,\n  useUpdateColumnByIdMutation,\n  useDeleteColumnByIdMutation,\n  useGetAllCardsQuery,\n  useAddCardMutation,\n  useUpdateCardByIdMutation,\n  useDeleteCardByIdMutation,\n  useUpdateCardColumnByIdMutation,\n};\n","import * as React from 'react';\nimport Button from '@mui/material/Button';\n\nimport { Box, IconButton } from '@mui/material';\n\nimport sprite from '../../assets/images/sprite.svg';\n\n// Кнопка для модалок с иконкой\nexport const ButtonWithIcon = ({ title, onClick, type }) => {\n  return (\n    <Button\n      onClick={onClick}\n      type={type}\n      variant=\"contained\"\n      disableElevation\n      sx={{\n        display: 'flex',\n        gap: '8px',\n        color: '#161616',\n        fontFamily: 'Poppins, sans-serif',\n        alignItems: 'center',\n        textTransform: 'none',\n        borderRadius: '8px',\n        letterSpacing: '-0.02em',\n        fontSize: '14px',\n        // background: '#BEDBB0',\n        background: ' var(--button-bg-color)',\n        lineHeight: '21px',\n        fontWeight: '500',\n        fontStyle: 'normal',\n        width: '100%',\n        height: '56px',\n        '&:hover': {\n          // background: '#9DC888',\n          background: 'var( --button-bg-color-hover)',\n        },\n      }}\n    >\n      <Box\n        sx={{\n          width: '28px',\n          height: '28px',\n          background: 'var(--icon-plus-bg-color)',\n          borderRadius: '6px',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <svg width=\"14\" height=\"14\" stroke=\"var(--icon-plus-color)\">\n          <use href={sprite + '#icon-add'}></use>\n        </svg>\n      </Box>\n      {title}\n    </Button>\n  );\n};\n\n// Кнопка для модалок без иконки\nexport const ButtonWithoutIcon = ({ title, onClick, type }) => {\n  return (\n    <Button\n      type={type}\n      onClick={onClick}\n      disableElevation\n      sx={{\n        display: 'flex',\n        color: '#161616',\n        fontFamily: 'Poppins, sans-serif',\n        alignItems: 'center',\n        textTransform: 'none',\n        borderRadius: '8px',\n        marginTop: '24px',\n        letterSpacing: '-0.02em',\n        fontSize: '14px',\n        // background: '#BEDBB0',\n        background: 'var(--button-bg-color)',\n        lineHeight: '21px',\n        fontWeight: '500',\n        fontStyle: 'normal',\n        width: '100%',\n        height: '56px',\n        '&:hover': {\n          background: 'var( --button-bg-color-hover)',\n        },\n      }}\n    >\n      {title}\n    </Button>\n  );\n};\n\n// Кнопка для добавления колонки\nexport const ButtonAdd = ({ onClick }) => {\n  return (\n    <Button\n      onClick={onClick}\n      variant=\"contained\"\n      disableElevation\n      sx={{\n        display: 'flex',\n        gap: '8px',\n        color: 'var(--primary-text-color)',\n        fontFamily: 'Poppins, sans-serif',\n        alignItems: 'center',\n        textTransform: 'none',\n        borderRadius: '8px',\n        letterSpacing: '-0.02em',\n        fontSize: '14px',\n        background: 'var(--button-add-bg-color)',\n        lineHeight: '21px',\n        fontWeight: '500',\n        fontStyle: 'normal',\n        width: '334px',\n        height: '56px',\n        '&:hover': {\n          background: 'var(--button-add-bg-color)',\n        },\n      }}\n    >\n      <Box\n        sx={{\n          width: '28px',\n          height: '28px',\n          background: 'var(--button-add-box-color)',\n          borderRadius: '6px',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <svg width=\"14\" height=\"14\" stroke=\"var(--icon-add-colors)\">\n          <use href={sprite + '#icon-add'}></use>\n        </svg>\n      </Box>\n      Add another column\n    </Button>\n  );\n};\n\n//Кнопка для Sidebar\nexport const ButtonSidebar = ({ onClick }) => {\n  return (\n    <IconButton\n      type=\"button\"\n      onClick={onClick}\n      sx={{\n        width: '40px',\n        height: '36px',\n        borderRadius: '6px',\n        background: 'var(--sidebar-icon-plus-bg-color)',\n\n        '&:hover, &:focus': {\n          background: 'var(--sidebar-icon-plus-bg-color-HOVER-FOCUS)',\n        },\n      }}\n    >\n      <svg width=\"20\" height=\"20\" stroke=\"var(--sidebar-icon-plus-color)\">\n        <use href={sprite + '#icon-add'}></use>\n      </svg>\n    </IconButton>\n  );\n};\n","import { styled } from '@mui/material/styles';\nimport { keyframes } from '@mui/system';\n\nconst slideLigtning = keyframes`\n  0% {transform: translateY(-25px)}\n\n  20% {transform: translateY(0px)}\n  80% {transform: translateY(0px)}\n\n  100% {transform: translateY(25px)}\n`;\n\nconst slideToRight = keyframes`\n  0% {transform: translateX(-200px)}\n  100% {transform: translateY(0px)}\n`;\n\nexport const SidebarLogoIcon = styled('svg')({\n  fill: 'var(--sidebar-icon-logo-color)',\n  width: '12px',\n  height: '16px',\n\n  animation: `${slideLigtning} 6s infinite`,\n  animationTimingFunction: 'ease',\n});\n\nexport const SidebarLogoWrap = styled('div')(({ isSidebarShown }) => ({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  gap: '8px',\n  width: '110px',\n\n  transform: 'translateX(-135px)',\n  animation: isSidebarShown ? `${slideToRight} 300ms` : 'none',\n  animationTimingFunction: 'ease',\n\n  animationFillMode: 'forwards',\n}));\n\nexport const SidebarLogoIconWrap = styled('div')({\n  width: '32px',\n  height: '32px',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  backgroundColor: 'var(--sidebar-icon-logo-bg-color)',\n  borderRadius: '8px',\n  overflow: 'hidden',\n});\n\nexport const SidebarLogoText = styled('p')({\n  margin: '0px',\n  color: 'var(--sidebar-primary-text-color)',\n  fontFamily: 'Poppins',\n  fontSize: '16px',\n  fontWeight: 600,\n  letterSpacing: '-0.64px',\n});\n\nexport const StartPageLogoWrap = styled('div')({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  gap: '14px',\n});\n\nexport const StartPageLogoIconWrap = styled('div')({\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  backgroundColor: '#161616',\n  borderRadius: '8px',\n});\n\nexport const StartPageLogoIcon = styled('svg')({\n  fill: '#ffffff',\n});\n\nexport const StartPageLogoText = styled('p')({\n  margin: '0px',\n  color: '#161616',\n  fontFamily: 'Poppins',\n  fontWeight: 600,\n  letterSpacing: '-0.64px',\n});\n","import {\n  SidebarLogoIconWrap,\n  SidebarLogoIcon,\n  SidebarLogoText,\n  StartPageLogoWrap,\n  StartPageLogoIconWrap,\n  StartPageLogoIcon,\n  StartPageLogoText,\n  SidebarLogoWrap,\n} from './Logo-styled';\nimport sprite from '../../assets/images/sprite.svg';\n\nexport const SidebarLogo = ({ sx, isSidebarShown }) => {\n  return (\n    <>\n      <SidebarLogoWrap sx={sx} isSidebarShown={isSidebarShown}>\n        <SidebarLogoIconWrap>\n          <SidebarLogoIcon>\n            <use href={sprite + '#icon-logo-lightning'}></use>\n          </SidebarLogoIcon>\n        </SidebarLogoIconWrap>\n\n        <SidebarLogoText>Task Pro</SidebarLogoText>\n      </SidebarLogoWrap>\n    </>\n  );\n};\n\nexport const StartPageLogo = ({ style }) => {\n  return (\n    <>\n      <StartPageLogoWrap style={style} sx={{ width: { 0: 166, 768: 222 } }}>\n        <StartPageLogoIconWrap\n          sx={{ width: { 0: 40, 768: 48 }, height: { 0: 40, 768: 48 } }}\n        >\n          <StartPageLogoIcon\n            sx={{ width: { 0: 15, 768: 18 }, height: { 0: 20, 768: 24 } }}\n          >\n            <use href={sprite + '#icon-logo-lightning'}></use>\n          </StartPageLogoIcon>\n        </StartPageLogoIconWrap>\n\n        <StartPageLogoText\n          sx={{\n            fontSize: { 0: 28, 768: 40 },\n            letterSpacing: { 0: -1.12, 768: -1.6 },\n          }}\n        >\n          Task Pro\n        </StartPageLogoText>\n      </StartPageLogoWrap>\n    </>\n  );\n};\n","import styled from '@emotion/styled';\nimport { styled as MUI } from '@mui/material/styles';\n\nexport const FormStyled = MUI('form')({\n  display: 'flex',\n  flexDirection: 'column',\n  gap: '14px',\n});\n\nexport const ButtonClose = styled.button`\n  font-family: Poppins;\n  margin: 0;\n  padding: 0;\n  position: absolute;\n  right: 10px;\n  top: 10px;\n  width: 24px;\n  height: 24px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  background-color: transparent;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    transform: scale(1.2);\n    /* border: 1px solid #ffffff;\n    color: rgba(255, 255, 255, 1); */\n  }\n`;\n\nexport const InputStyled = styled.input`\n  font-family: Poppins;\n  resize: none;\n  color: var(--primary-text-color);\n  padding: 14px 14px;\n  background-color: transparent;\n  border: 1px solid rgba(190, 219, 176, 0.4);\n  border-radius: 8px;\n  margin-bottom: 10px;\n  :focus {\n    border: 1px solid #bedbb0;\n    outline: none;\n  }\n  ::placeholder {\n    color: var(--primary-text-color);\n    opacity: 30%;\n  }\n`;\n\nexport const TransparentSVG = styled.svg`\n  width: 18px;\n  height: 18px;\n  // stroke: rgba(255, 255, 255, 0.5);\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    stroke: #bedbb0;\n  }\n`;\n\nexport const UlStyled = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 6px;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  margin-bottom: 14px;\n`;\n\nexport const UlBgStyled = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 4px;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  margin-bottom: 14px;\n  max-width: 260px;\n`;\n\nexport const LiStyled = styled.li`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 28px;\n  height: 28px;\n  border-radius: 5px;\n\n  &:hover,\n  &:focus {\n    border: 1px solid #bedbb0;\n  }\n`;\n\nexport const ImgStyled = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  object-position: center;\n  cursor: pointer;\n`;\n\nexport const LiIconsStyled = styled.li`\n  display: flex;\n  width: 20px;\n  height: 20px;\n  align-items: center;\n  justify-content: center;\n\n  &:hover,\n  &:focus {\n    border-radius: 5px;\n    background-color: rgba(190, 219, 176, 0.2);\n  }\n`;\n","import { Modal, Box, Typography } from '@mui/material';\nimport sprite from '../../assets/images/sprite.svg';\nimport { ButtonClose } from 'components/ModalBoard/ModalBoard.styled';\n\n// import { useState } from 'react';\n\nconst modalStyles = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  borderRadius: 2,\n  border: '1px solid rgba(190, 219, 176, 0.50)',\n  background: 'var(--modal-bg-color)',\n  padding: 3,\n  fontFamily: 'Poppins',\n};\n\nconst titleStyles = {\n  color: 'var(--primary-text-color)',\n  fontSize: '18px',\n  fontStyle: 'normal',\n  fontWeight: 500,\n  fontFamily: 'Poppins',\n  lineHeight: 'normal',\n  letterSpacing: -0.36,\n  marginBottom: 3,\n};\n\nconst ModalLayout = ({ title, open, handleClose, children }) => {\n  return (\n    <>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-title\"\n        aria-describedby=\"modal-description\"\n      >\n        <Box sx={modalStyles}>\n          <Typography variant=\"h2\" sx={titleStyles}>\n            {title}\n          </Typography>\n          <ButtonClose type=\"button\" onClick={handleClose}>\n            <svg\n              style={{ stroke: 'var(--primary-text-color)' }}\n              width=\"18\"\n              height=\"18\"\n            >\n              <use href={sprite + '#icon-x-close'} />\n            </svg>\n          </ButtonClose>\n          {children}\n        </Box>\n      </Modal>\n    </>\n  );\n};\n\nexport default ModalLayout;\n","export const SIDEBARWIDTH = 260;\nexport const SIDEBARMOBILEWIDTH = 225;\n  \n\n\n\n","import { styled } from '@mui/material/styles';\nimport { keyframes } from '@mui/system';\n\nconst slideToRight = keyframes`\n  0% {transform: translateX(-250px)}\n  100% {transform: translateX(0px)}\n`;\n\nconst slideToLeft = keyframes`\n  0% {transform: translateX(150px)}\n  100% {transform: translateX(0px)}\n`;\n\nconst slideToDown = keyframes`\n  0% {transform: translateY(-250px)}\n  100% {transform: translateY(0px)}\n`;\n\nconst shakeAnimation = keyframes`\n  0%, 100% {\n    transform: translateX(0);\n  }\n  10%, 30%, 50%, 70%, 90% {\n    transform: translateX(-2px);\n   \n  }\n  20%, 40%, 60%, 80% {\n    transform: translateX(2px);\n  \n  }\n\n`;\n\nexport const Subtitle = styled('p')(({ isSidebarShown }) => ({\n  display: 'inline-block',\n  color: 'var(--sidebar-secondary-text-color)',\n  fontFamily: 'Poppins',\n  fontSize: '12px',\n  fontWeight: 400,\n  letterSpacing: '-0.24px',\n\n  animation: isSidebarShown ? `${slideToLeft} 400ms` : 'none',\n  animationTimingFunction: 'ease',\n  animationFillMode: 'forwards',\n}));\n\nexport const CreateBoardWrap = styled('div')({\n  paddingBottom: '14px',\n  paddingTop: '14px',\n  borderTop: '1px solid var(--sidebar-border-color)',\n  borderBottom: '1px solid var(--sidebar-border-color)',\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  gap: '8px',\n});\n\nexport const TitleCreate = styled('p')(({ isSidebarShown }) => ({\n  margin: '0px',\n  color: 'var(--sidebar-primary-text-color)',\n  fontFamily: 'Poppins',\n  fontSize: '14px',\n  fontWeight: 500,\n  letterSpacing: '-0.28px',\n\n  transform: 'translateX(-250px)',\n  animation: isSidebarShown ? `${slideToRight} 400ms` : 'none',\n  animationTimingFunction: 'ease',\n\n  animationFillMode: 'forwards',\n}));\n\nexport const HelpBox = styled('div')({\n  borderRadius: '8px',\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'left',\n  backgroundColor: 'var(--sidebar-secondary-bg-color)',\n  overflow: 'hidden',\n});\n\nexport const Image = styled('img')(({ isSidebarShown }) => ({\n  width: '54px',\n  height: '78px',\n  marginBottom: '14px',\n\n  transform: 'translateY(250px)',\n  animation: isSidebarShown ? `${slideToDown} 400ms` : 'none',\n  animationTimingFunction: 'ease',\n\n  animationFillMode: 'forwards',\n}));\n\nexport const HelpText = styled('p')(({ isSidebarShown }) => ({\n  margin: '0px',\n  color: 'var(--sidebar-primary-text-color)',\n  fontFamily: 'Poppins',\n  fontWeight: 400,\n  letterSpacing: -0.15,\n  '& span': {\n    color: 'var(--sidebar-taskpro-link-color)',\n  },\n\n  transform: 'translateX(-250px)',\n  animation: isSidebarShown ? `${slideToRight} 400ms` : 'none',\n  animationTimingFunction: 'ease',\n\n  animationFillMode: 'forwards',\n}));\n\nexport const HelpButton = styled('button')(({ isSidebarShown }) => ({\n  padding: 0,\n  width: '94px',\n  height: '20px',\n  display: 'flex',\n  gap: '8px',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  color: 'var(--sidebar-primary-text-color)',\n  backgroundColor: 'transparent',\n  fontFamily: 'Poppins',\n  fontSize: '12px',\n  fontWeight: 500,\n  lineHeight: 1.5,\n  letterSpacing: '-0.24px',\n  border: 'none',\n  cursor: 'pointer',\n  '&:hover, &:focus': {\n    textDecoration: 'underline',\n    outline: 'none',\n  },\n\n  transform: 'translateX(250px)',\n  animation: isSidebarShown ? `${slideToLeft} 400ms` : 'none',\n  animationTimingFunction: 'ease',\n  animationFillMode: 'forwards',\n}));\n\nexport const HelpIcon = styled('svg')(({ startAnimation }) => ({\n  stroke: 'var(--sidebar-primary-text-color)',\n  width: '20px',\n  height: '20px',\n\n  animation: startAnimation ? `${shakeAnimation} 1s  ease-out` : 'none',\n\n  '&:hover, &:focus': {\n    textDecoration: 'underline',\n    outline: 'none',\n  },\n}));\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"SidebarCustomScroll_container__EnYRA\"};","import { styled } from '@mui/material/styles';\nimport { keyframes } from '@mui/system';\n\nconst slideAround = keyframes`\n  0% {transform: rotate(0deg)}\n  100% {transform: rotate(360deg)}\n`;\n\nexport const BoardItemWrap = styled('div')({\n  paddingTop: '20px',\n  paddingBottom: '20px',\n\n  width: '100%',\n  display: 'flex',\n  flexDirection: 'row',\n  gap: '8px',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n\n  overflow: 'hidden',\n});\n\nexport const BoardItemIcon = styled('svg')(({startAnimation})=> ({\n  width: '18px',\n  height: '18px',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  stroke: 'var(--sidebar-primary-text-color)',\n\n  animation: startAnimation ? `${slideAround} 1s  ease-out` : 'none',\n}));\n\nexport const BoardItemCurrentIcon = styled('svg')({\n  width: '16px',\n  height: '16px',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n});\n\nexport const BoardItemTitleWrap = styled('div')({\n  overflow: 'hidden',\n  whiteSpace: 'nowrap',\n});\n\nexport const BoardItemTitle = styled('p')(\n  ({ titleWidth, titleWrapWidth, current }) => {\n    const slideText = keyframes`\n    0% { transform: translateX(0px); }\n    100% { transform: translateX(${titleWrapWidth - titleWidth}px); }\n  `;\n\n    return {\n      margin: '0px',\n      color: 'var(--sidebar-primary-text-color)',\n      fontFamily: 'Poppins',\n      fontSize: '14px',\n      fontStyle: 'normal',\n      fontWeight: '500',\n      letterSpacing: '-0.28px',\n\n      animationName: titleWidth >= titleWrapWidth && current ? slideText : 'none',\n      animationDuration: `${titleWidth * 30}ms`,\n      animationTimingFunction: 'linear',\n      animationIterationCount: 'infinite',\n      animationDirection: 'alternate',\n    };\n  }\n);\n","import React, { useRef, useEffect } from 'react';\n\nconst MeasureTitleWidth = ({ title, setTitleWidth }) => {\n  const measureRef = useRef(null);\n\n  useEffect(() => {\n    const observer = new ResizeObserver(entries => {\n      for (const entry of entries) {\n        if (entry.target === measureRef.current) {\n          setTitleWidth(entry.contentRect.width);\n        }\n      }\n    });\n\n    const currentRef = measureRef.current;\n\n    if (currentRef) {\n      observer.observe(currentRef);\n    }\n\n    return () => {\n      if (currentRef) {\n        observer.unobserve(currentRef);\n      }\n    };\n  }, [setTitleWidth]);\n\n  return (\n    <span\n      ref={measureRef}\n      style={{\n        position: 'absolute',\n        top: '-9999px',\n        left: '-9999px',\n        visibility: 'hidden',\n        whiteSpace: 'nowrap',\n      }}\n    >\n      {title}\n    </span>\n  );\n};\n\nexport default MeasureTitleWidth;\n","export const arrIcons = [\n  '#icon-Project',\n  '#icon-star',\n  '#icon-loading',\n  '#icon-puzzle',\n  '#icon-container',\n  '#icon-lightning',\n  '#icon-colors',\n  '#icon-hexagon',\n];\n\nexport const arrBG = [\n  \"https://res.cloudinary.com/teamprojectavatar/image/upload/v1693617335/bg-img/mobile/1/1-bg-mobile-1x.jpg\",\n  \"https://res.cloudinary.com/teamprojectavatar/image/upload/v1693617336/bg-img/mobile/1/2-bg-mobile-1x.jpg\",\n  \"https://res.cloudinary.com/teamprojectavatar/image/upload/v1693617337/bg-img/mobile/1/3-bg-mobile-1x.jpg\",\n  \"https://res.cloudinary.com/teamprojectavatar/image/upload/v1693617339/bg-img/mobile/1/4-bg-mobile-1x.jpg\",\n  \"https://res.cloudinary.com/teamprojectavatar/image/upload/v1693617340/bg-img/mobile/1/5-bg-mobile-1x.jpg\",\n  \"https://res.cloudinary.com/teamprojectavatar/image/upload/v1693617341/bg-img/mobile/1/6-bg-mobile-1x.jpg\",\n  \"https://res.cloudinary.com/teamprojectavatar/image/upload/v1693617342/bg-img/mobile/1/7-bg-mobile-1x.jpg\",\n  \"https://res.cloudinary.com/teamprojectavatar/image/upload/v1693617343/bg-img/mobile/1/8-bg-mobile-1x.jpg\",\n  \"https://res.cloudinary.com/teamprojectavatar/image/upload/v1693617344/bg-img/mobile/1/9-bg-mobile-1x.jpg\",\n  \"https://res.cloudinary.com/teamprojectavatar/image/upload/v1693617345/bg-img/mobile/1/10-bg-mobile-1x.jpg\",\n  \"https://res.cloudinary.com/teamprojectavatar/image/upload/v1693617346/bg-img/mobile/1/11-bg-mobile-1x.jpg\",\n  \"https://res.cloudinary.com/teamprojectavatar/image/upload/v1693617347/bg-img/mobile/1/12-bg-mobile-1x.jpg\",\n  \"https://res.cloudinary.com/teamprojectavatar/image/upload/v1693617347/bg-img/mobile/1/13-bg-mobile-1x.jpg\",\n  \"https://res.cloudinary.com/teamprojectavatar/image/upload/v1693617349/bg-img/mobile/1/14-bg-mobile-1x.jpg\",\n  \"https://res.cloudinary.com/teamprojectavatar/image/upload/v1693617350/bg-img/mobile/1/15-bg-mobile-1x.jpg\"\n];\n","import { useFormik } from 'formik';\nimport { Box, Typography } from '@mui/material';\nimport {\n  FormStyled,\n  InputStyled,\n  TransparentSVG,\n  UlStyled,\n  // LiStyled,\n  UlBgStyled,\n  ImgStyled,\n  LiIconsStyled,\n} from './ModalBoard.styled';\n\nimport Notiflix from 'notiflix';\nimport { Report } from 'notiflix';\nimport sprite from '../../assets/images/sprite.svg';\nimport * as Yup from 'yup';\nimport { ButtonWithIcon } from 'components/Buttons/Button';\nimport ModalLayout from 'components/ModalLayout/ModalLayout';\nimport { useState } from 'react';\nimport { arrIcons } from './data';\nimport { arrBG } from './data';\nimport { useDispatch } from 'react-redux';\nimport { API } from 'Services/API';\nimport { setBoardResponse } from 'redux/boards/boardsAPISlice';\nimport { useNavigate } from 'react-router-dom';\n\nconst titleStyle = {\n  color: '#FFF',\n  fontSize: 14,\n  fontStyle: 'normal',\n  fontWeight: 500,\n  lineHeight: 'normal',\n  letterSpacing: -0.36,\n  fontFamily: 'Poppins',\n};\nconst ModalBoard = ({ board, boardTitle, open, handleClose }) => {\n  const dispatch = useDispatch();\n\n  const [inputValue, setInputValue] = useState(board?.title || '');\n  const [iconId, setIconId] = useState(board?.iconId || arrIcons[0]);\n  const [background, setBackground] = useState(board?.background || 0);\n\n  const [addBoard] = API.useAddBoardsMutation();\n  const [editBoard] = API.useUpdateBoardByIdMutation();\n\n  const navigate = useNavigate();\n\n  const handleSubmit = async title => {\n    try {\n      const FormData = {\n        title,\n        background,\n        iconId,\n      };\n\n      if (boardTitle === 'New board') {\n        const response = await addBoard(FormData);\n        dispatch(setBoardResponse(response));\n        const newBoardId = response.data._id;\n        navigate(`/home/${newBoardId}`);\n        setInputValue('');\n        setIconId(arrIcons[0]);\n        setBackground(0);\n        Report.success(\n          'Board added successfully',\n          'You can use your board and add columns to it',\n          'Ok'\n        );\n      }\n      if (boardTitle === 'Edit board') {\n        if (\n          board.title === inputValue &&\n          board.iconId === iconId &&\n          board.background === background\n        ) {\n          Report.warning(\n            'No changes have been selected',\n            'Edit any field to apply the changes',\n            'Ok'\n          );\n          return;\n        }\n\n        const response = await editBoard({ boardId: board._id, FormData });\n        dispatch(setBoardResponse(response));\n        Report.success(\n          'Board edited successfully',\n          'All changes have been made',\n          'Ok'\n        );\n      }\n      handleClose();\n    } catch {\n      Report.failure(\"Board wasn't edited\", 'Changes have not been made', 'Ok');\n    }\n    formik.handleReset();\n  };\n\n  const handleChange = e => {\n    setInputValue(e.currentTarget.value);\n    formik.setFieldValue('title', e.currentTarget.value);\n  };\n\n  const validationSchema = Yup.object({\n    title: Yup.string()\n      .min(2, 'Must be more than 2 symbols')\n      .max(50, 'Must be less than 50 symbols')\n      .required('Title is required')\n      .test(\n        'is-not-cyrillic',\n        'Title must not contain Cyrillic characters',\n        function (value) {\n          if (/[а-яА-Я]/.test(value)) {\n            Notiflix.Notify.warning(\n              'Title field must not contain enemy characters!'\n            );\n\n            return false;\n          }\n          return true;\n        }\n      ),\n    description: Yup.string(),\n  });\n\n  const formik = useFormik({\n    initialValues: { title: inputValue },\n    onSubmit: ({ title }) => handleSubmit(title),\n    validationSchema,\n  });\n\n  return (\n    <>\n      <ModalLayout title={boardTitle} open={open} handleClose={handleClose}>\n        <FormStyled\n          sx={{ width: { 0: '77vw', 375: '287px', 768: '302px' } }}\n          onSubmit={formik.handleSubmit}\n        >\n          <InputStyled\n            id=\"title\"\n            name=\"title\"\n            placeholder={'Title'}\n            onChange={handleChange}\n            onBlur={formik.handleBlur}\n            value={inputValue}\n          />\n          <Typography variant=\"h2\" sx={titleStyle}>\n            Icons\n          </Typography>\n          <UlStyled>\n            {arrIcons.map(icon => {\n              return (\n                <LiIconsStyled\n                  key={icon}\n                  onClick={() => setIconId(icon)}\n                  isSelected={iconId === icon}\n                >\n                  <TransparentSVG>\n                    <use\n                      href={sprite + icon}\n                      style={{\n                        stroke:\n                          iconId === icon\n                            ? '#FFFFFF'\n                            : 'rgba(255, 255, 255, 0.5)',\n                        transition: 'stroke 0.2s ease',\n                      }}\n                    />\n                  </TransparentSVG>\n                </LiIconsStyled>\n              );\n            })}\n          </UlStyled>\n\n          <Typography variant=\"h2\" sx={titleStyle}>\n            Background\n          </Typography>\n          <UlBgStyled>\n            <li\n              key={0}\n              onClick={() => {\n                setBackground(0);\n              }}\n            >\n              <Box\n                sx={{\n                  overflow: 'hidden',\n                  display: 'flex',\n                  justifyContent: 'center',\n                  alignItems: 'center',\n                  width: '28px',\n                  height: '28px',\n                  borderRadius: '6px',\n                  border:\n                    0 === background\n                      ? '2px solid #ffffff'\n                      : '2px solid transparent',\n                  '&:hover, &:focus': {\n                    border: '2px solid #bedbb0',\n                  },\n                }}\n              >\n                <div\n                  style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    width: '100%',\n                    height: '100%',\n                    backgroundColor: '#1F1F1F',\n                    borderRadius: '5px',\n                    cursor: 'pointer',\n                  }}\n                >\n                  <svg\n                    style={{\n                      width: '16px',\n                      height: '16px',\n                      stroke: 'rgba(255, 255, 255, 0.10)',\n                    }}\n                  >\n                    <use href={sprite + '#icon-default-background'}></use>\n                  </svg>\n                </div>\n              </Box>\n            </li>\n            {arrBG.map((bg, index) => {\n              return (\n                <li key={index + 1} onClick={() => setBackground(index + 1)}>\n                  <Box\n                    sx={{\n                      overflow: 'hidden',\n                      display: 'flex',\n                      justifyContent: 'center',\n                      alignItems: 'center',\n                      width: '28px',\n                      height: '28px',\n                      borderRadius: '6px',\n                      border:\n                        index + 1 === background\n                          ? '2px solid #ffffff'\n                          : '2px solid transparent',\n                      '&:hover, &:focus': {\n                        border: '2px solid #bedbb0',\n                      },\n                    }}\n                  >\n                    <ImgStyled src={bg} alt=\"background picture\" />\n                  </Box>\n                </li>\n              );\n            })}\n          </UlBgStyled>\n\n          <ButtonWithIcon\n            title={boardTitle === 'New board' ? 'Create' : 'Edit'}\n            type={'submit'}\n            onClick={() => {\n              if (formik.values.title === '' && !inputValue) {\n                Notiflix.Notify.warning('Title field must be filled in');\n              }\n            }}\n          />\n        </FormStyled>\n      </ModalLayout>\n    </>\n  );\n};\n\nexport default ModalBoard;\n","import { useEffect, useState } from \"react\";\nimport { BoardItemIcon } from \"./SidebarBoardItem-styled\"\nimport sprite from '../../assets/images/sprite.svg';\n\n\nexport const SidebarBoardItemIcon = ({current, iconId}) => {\n\n    const [startAnimation, setStartAnimation] = useState(true);\n\n    useEffect(() => {\n        const randomNumber = Math.floor(Math.random() * (15000 - 7000 + 1)) + 7000;\n        const interval = setInterval(() => {\n          setStartAnimation(true);\n          setTimeout(() => {\n            setStartAnimation(false);\n          }, 1000);\n        }, randomNumber);\n    \n        return () => {\n          clearInterval(interval);\n        };\n      }, []);\n\n    return (\n        <BoardItemIcon\n        startAnimation={startAnimation}\n        sx={{ opacity: current ? 1 : 0.5 }}\n      >\n        <use href={sprite + iconId}></use>\n      </BoardItemIcon>\n    )\n}","import {\n  BoardItemCurrentIcon,\n  BoardItemTitle,\n  BoardItemTitleWrap,\n  BoardItemWrap,\n} from './SidebarBoardItem-styled';\n\nimport sprite from '../../assets/images/sprite.svg';\nimport MeasureTitleWidth from './MeasureTitleWidth';\n\nimport { debounce } from 'lodash';\nimport { Box, List, ListItem, ListItemButton } from '@mui/material';\nimport { useEffect, useState } from 'react';\nimport { API } from 'Services/API';\nimport ModalBoard from 'components/ModalBoard/ModalBoard';\nimport { SidebarBoardItemIcon } from './SidebarBoardItemIcon';\n\nexport const SidebarBoardItem = ({ board, current}) => {\n  const { _id: id, iconId, title } = board;\n\n\n  const [isHovered, setIsHovered] = useState(false);\n  const [titleWidth, setTitleWidth] = useState(0);\n  const [titleWrapWidth, setTitleWrapWidth] = useState(130);\n  const [screenWidth, setScreenWidth] = useState(window.innerWidth);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const [deleteBoard] = API.useDeleteBoardByIdMutation();\n\n  const handleResize = debounce(() => {\n    setScreenWidth(window.innerWidth);\n  }, 200);\n\n  useEffect(() => {\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [handleResize]);\n\n  useEffect(() => {\n    if (screenWidth <= 320) {\n      setTitleWrapWidth(85);\n    } else if (screenWidth <= 768) {\n      setTitleWrapWidth(120);\n    } else setTitleWrapWidth(130);\n  }, [screenWidth, title]);\n\n  const modalStateChange = () => setIsModalOpen(!isModalOpen);\n\n  const handleEditClick = event => {\n    event.stopPropagation();\n    modalStateChange();\n  };\n\n  const handleDeleteClick = event => {\n    event.stopPropagation();\n    deleteBoard(id);\n  };\n\n  return (\n    <>\n      <MeasureTitleWidth title={title} setTitleWidth={setTitleWidth} />\n\n      <BoardItemWrap\n        onMouseEnter={() => setIsHovered(true)}\n        onMouseLeave={() => setIsHovered(false)}\n        sx={{\n          pl: { 0: 1.75, 768: 3 },\n          pr: { 0: 1.75, 768: 3 },\n          backgroundColor: current\n            ? 'var(--sidebar-board-item-bg-color-CURRENT)'\n            : 'transparent',\n        }}\n      >\n        <Box\n          sx={{\n            display: 'flex',\n            flexDirection: 'row',\n            gap: { 0: 0.5, 768: 1 },\n            alignItems: 'center',\n          }}\n        >\n          <SidebarBoardItemIcon current={current} iconId={iconId} />\n\n          <BoardItemTitleWrap\n            sx={{\n              width: current\n                ? { 0: 85, 320: 'calc(60vw - 105px)', 375: 120, 768: 130 }\n                : { 0: 135, 320: 'calc(60vw - 55px)', 375: 170, 768: 180 },\n            }}\n          >\n            <BoardItemTitle\n              sx={{ opacity: current ? 1 : 0.5 }}\n              titleWidth={titleWidth}\n              titleWrapWidth={titleWrapWidth}\n              current={current}\n            >\n              {title}\n            </BoardItemTitle>\n          </BoardItemTitleWrap>\n        </Box>\n\n        {isHovered && (\n          <Box\n            sx={{\n              position: 'absolute',\n              right: 0,\n              width: '4px',\n              height: '100%',\n              backgroundColor: 'var(--sidebar-board-item-bg-color-AFTER)',\n              opacity: 0.4,\n              borderRadius: '4px 0px 0px 4px',\n            }}\n          />\n        )}\n\n        {current && (\n          <Box\n            sx={{\n              position: 'absolute',\n              right: 0,\n              width: '4px',\n              height: '100%',\n              backgroundColor: 'var(--sidebar-board-item-bg-color-AFTER)',\n              borderRadius: '4px 0px 0px 4px',\n            }}\n          />\n        )}\n\n        {current && (\n          <List\n            disablePadding\n            sx={{\n              display: 'flex',\n              flexDirection: 'row',\n              gap: 1,\n              alignItems: 'center',\n              justifyContent: 'center',\n            }}\n          >\n            <ListItem disablePadding>\n              <ListItemButton\n                sx={{\n                  p: 0,\n                  m: 0,\n                  pointerEvents: 'auto',\n                  backgroundColor: 'transparent',\n                  opacity: 0.5,\n                  stroke: 'var(--sidebar-primary-text-color)',\n                  '&:hover, &:focus': {\n                    opacity: 1,\n                    backgroundColor: 'transparent',\n                  },\n                }}\n                onClick={handleEditClick}\n              >\n                <BoardItemCurrentIcon>\n                  <use href={sprite + '#icon-pencil'}></use>\n                </BoardItemCurrentIcon>\n              </ListItemButton>\n            </ListItem>\n\n            <ListItem disablePadding>\n              <ListItemButton\n                sx={{\n                  p: 0,\n                  m: 0,\n                  pointerEvents: 'auto',\n                  backgroundColor: 'transparent',\n                  opacity: 0.5,\n                  stroke: 'var(--sidebar-primary-text-color)',\n                  '&:hover, &:focus': {\n                    opacity: 1,\n                    backgroundColor: 'transparent',\n                  },\n                }}\n                onClick={handleDeleteClick}\n              >\n                <BoardItemCurrentIcon>\n                  <use href={sprite + '#icon-trash'}></use>\n                </BoardItemCurrentIcon>\n              </ListItemButton>\n            </ListItem>\n          </List>\n        )}\n      </BoardItemWrap>\n\n      <ModalBoard\n        board={board}\n        boardTitle={'Edit board'}\n        open={isModalOpen}\n        handleClose={modalStateChange}\n      />\n    </>\n  );\n};\n","import { List, ListItem, ListItemButton } from '@mui/material';\nimport { SidebarBoardItem } from './SidebarBoardItem';\nimport { useEffect, useState } from 'react';\n\nimport { API } from 'Services/API';\nimport { useNavigate } from 'react-router-dom';\n\nexport const SidebarBoardList = () => {\n  const navigate = useNavigate();\n  const { data } = API.useGetBoardsQuery();\n\n  const [boardsArray, setBoardsArray] = useState([]);\n  const [currentItemId, setCurrentItemId] = useState('');\n\n  useEffect(() => {\n    if (data?.length !== boardsArray?.length) {\n      const currentItemId = data?.length > 0 ? data[data?.length - 1]._id : '';\n      setCurrentItemId(currentItemId);\n      navigate(`/home/${currentItemId}`);\n    }\n    setBoardsArray(data);\n  }, [boardsArray, data, navigate]);\n\n  const handleButtonClick = id => {\n    setCurrentItemId(id);\n    navigate(`/home/${id}`);\n  };\n\n  return (\n    <>\n      <List\n        disablePadding\n        sx={{\n          display: 'flex',\n          flexDirection: 'column-reverse',\n          gap: 0.5,\n          mb: 3,\n        }}\n      >\n        {boardsArray?.map(board => (\n          <ListItem key={board._id} disablePadding>\n            <ListItemButton\n              sx={{\n                p: 0,\n                m: 0,\n                pointerEvents: currentItemId === board._id ? 'none' : 'auto',\n                '&:hover, &:focus': {\n                  backgroundColor: 'var(--sidebar-board-item-bg-color-CURRENT)',\n                },\n              }}\n              onClick={() => handleButtonClick(board._id)}\n            >\n              <SidebarBoardItem\n                board={board}\n                current={currentItemId === board._id}\n              />\n            </ListItemButton>\n          </ListItem>\n        ))}\n      </List>\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const LogOutBtnStyled = styled.button`\n  display: flex;\n  gap: 14px;\n  padding: 0px;\n  justify-content: center;\n  align-items: center;\n  height: 32px;\n  width: 105px;\n  border: none;\n  background-color: transparent;\n  cursor: pointer;\n\n  color: var(--sidebar-icon-logout-color);\n  &:hover,\n  &:focus {\n    color: var(--sidebar-icon-logout-color-HOVER-FOCUS);\n  }\n`;\n\nexport const SpanStyled = styled.span`\n  font-size: 14px;\n  font-weight: 500;\n  color: var(--sidebar-primary-text-color);\n  font-family: 'Poppins';\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\nexport const Icon = styled.svg`\n  width: 32px;\n  height: 32px;\n  fill: none;\n  stroke: currentColor;\n`;\n","import { useDispatch } from 'react-redux';\nimport sprite from '../../assets/images/sprite.svg';\nimport { Icon, LogOutBtnStyled, SpanStyled } from './logoutBtn.styled';\nimport { useLogOutMutation } from 'Services/API_Component/authAPI';\nimport { logout, setError, setIsLoggedIn } from 'redux/auth/authAPISlice';\n\nconst LogoutBtn = () => {\n  const dispatch = useDispatch();\n  const [logOut] = useLogOutMutation();\n\n  const handleLogOut = async () => {\n    try {\n      await logOut().unwrap();\n      dispatch(logout());\n      dispatch(setIsLoggedIn(false));\n    } catch (error) {\n      dispatch(setError(error));\n    }\n  };\n\n  return (\n    <>\n      {/* <LogOutBtnStyled onClick={() => dispatch(logOut())}> */}\n      <LogOutBtnStyled onClick={handleLogOut}>\n        <Icon width=\"32px\" height=\"32px\">\n          <use href={`${sprite}#icon-logout`} />\n        </Icon>\n        <SpanStyled>Log out</SpanStyled>\n      </LogOutBtnStyled>\n    </>\n  );\n};\n\nexport default LogoutBtn;\n","import styled from '@emotion/styled';\nimport { styled as MUI } from '@mui/material/styles';\n\nexport const FormStyled = MUI('form')({\n  display: 'flex',\n  flexDirection: 'column',\n  marginBottom: '0px',\n  overflow: 'hidden',\n});\n\nconst inputStyles = `\n  width: 100%;\n  padding: 14px 18px;\n  margin-bottom: 14px;\n  font-family: Poppins;\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 21px;\n  letter-spacing: -0.28px;\n  caret-color: white;\n  border-radius: 8px;\n  color:var(--primary-text-color);\n  border: 1px solid var(--button-bg-color-hover);\n  background-color: var(--modal-bg-color);\n  transition: border-color 0.3s ease;\n\n  &::placeholder {\n    color: var(--secondary-text-color) !important;\n    font-size: 14px;\n    line-height: 21px;\n    font-family: 'Poppins';\n    letter-spacing: -0.28px;\n  }\n\n  &:-webkit-autofill:active,\n  &:-webkit-autofill:focus,\n  &:-webkit-autofill:hover {\n    box-shadow: 0 0 0px 1000px var(--modal-bg-color) inset;\n    color: var(--modal-bg-color) !important;\n    background-color: var(--modal-bg-color) !important;\n    border: 1px solid var(--button-bg-color);\n  }\n\n  &:focus {\n    background-color: var(--modal-bg-color) !important;\n    -webkit-text-fill-color: var(--primary-text-color);\n    border: 1px outset var(--button-bg-color);\n  }\n\n  &:active {\n    -webkit-text-fill-color: var(--primary-text-color) !important;\n    background-color: var(--modal-bg-color);\n    border: 1px outset var(--button-bg-color);\n    font-size: 14px;\n    line-height: 21px;\n    font-family: 'Poppins';\n    letter-spacing: -0.28px;\n  }\n`;\n\nexport const InputStyled = styled.input`\n  ${inputStyles}\n  box-shadow: 0 0 0px 1000px var(--modal-bg-color) inset;\n  &::placeholder {\n    color: var(--secondary-text-color) !important;\n    font-size: 14px;\n    line-height: 21px;\n    font-family: 'Poppins';\n    letter-spacing: -0.28px;\n  }\n\n  &:-webkit-autofill:active,\n  &:-webkit-autofill:focus,\n  &:-webkit-autofill:hover {\n    background-color: var(--modal-bg-color) !important;\n    border: 1px solid var(--button-bg-color);\n  }\n`;\n\nexport const TextareaStyled = styled.textarea`\n  ${inputStyles}\n  font-size: 14px;\n  line-height: 21px !important;\n  font-family: 'Poppins';\n  letter-spacing: -0.28px !important;\n  min-height: 155px;\n  resize: none;\n  text-align: top;\n`;\n\nexport const LabelColorBox = styled.div`\n  display: flex;\n  gap: 4px;\n`;\n","import { Report } from 'notiflix';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport Notiflix from 'notiflix';\nimport { FormStyled, InputStyled, TextareaStyled } from './ModalHelp.styled';\nimport { ButtonWithoutIcon } from 'components/Buttons/Button';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { API } from 'Services/API';\nimport { setError } from 'redux/auth/authAPISlice';\nimport ModalLayout from 'components/ModalLayout/ModalLayout';\n\nconst ModalHelp = ({ title, open, handleClose }) => {\n  const dispatch = useDispatch();\n  const [helpUser] = API.useHelpUserMutation();\n  const email = useSelector(state => state.auth.user.email);\n  const handleSubmit = async () => {\n    try {\n      const response = await helpUser({\n        email: formik.values.email,\n        comment: formik.values.comment,\n      });\n      if (response) {\n        handleClose();\n\n        Report.success(\n          'Email successfully sent',\n          'Our developer has engaged in an epic battle to provide you with an answer. Brace yourself for the victory writing, and in the meantime, hold tight!',\n          'Ok'\n        );\n      }\n      formik.resetForm();\n    } catch (error) {\n      if (error.status === 400) {\n        console.log('All field must be filled in');\n      } else {\n        console.log('An error occurred:', error.data.message);\n        dispatch(setError(error));\n      }\n    }\n  };\n\n  const validationSchema = Yup.object({\n    email: Yup.string()\n      .email('Please enter a valid email address')\n      .matches(\n        /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/,\n        'Please enter a valid email address'\n      )\n      .required('Email is required'),\n    comment: Yup.string().required('Comment is required'),\n  });\n\n  const formik = useFormik({\n    initialValues: { email: email, comment: '' },\n    onSubmit: ({ title }) => handleSubmit(title),\n    validationSchema,\n  });\n\n  return (\n    <>\n      <ModalLayout title={title} open={open} handleClose={handleClose}>\n        <FormStyled sx={{width: {0: \"77vw\", 375: \"287px\", 768: \"352px\"}}} onSubmit={formik.handleSubmit}>\n          <InputStyled\n            id=\"email\"\n            name=\"email\"\n            placeholder=\"Email address\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.email}\n          />\n          <TextareaStyled\n            id=\"comment\"\n            name=\"comment\"\n            placeholder=\"Comment\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.comment}\n          />\n\n          <ButtonWithoutIcon\n            title={'Send'}\n            type={'submit'}\n            sx={{ marginTop: 24, background: 'var(--primary-text-color)' }}\n            onClick={() => {\n              (formik.values.email === '' &&\n                Notiflix.Notify.warning('Email field must be filled in')) ||\n                (formik.values.comment === '' &&\n                  Notiflix.Notify.warning('Comment field must be filled in'));\n              if (\n                !validationSchema.isValidSync({ email: formik.values.email })\n              ) {\n                Notiflix.Notify.failure('Please enter a valid email address');\n              }\n            }}\n          >\n            Send\n          </ButtonWithoutIcon>\n        </FormStyled>\n      </ModalLayout>\n    </>\n  );\n};\n\nexport default ModalHelp;\n","import { useEffect, useState } from 'react';\nimport sprite from '../../assets/images/sprite.svg';\nimport { HelpIcon } from './SidebarContent-styled';\n\n\n\nexport const SidebarHelpIcon = () => {\n  const [startAnimation, setStartAnimation] = useState(true);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setStartAnimation(true);\n      setTimeout(() => {\n        setStartAnimation(false);\n      }, 1000);\n    }, 7000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  return (\n    <HelpIcon startAnimation={startAnimation}>\n      <use href={sprite + '#icon-help'}></use>\n    </HelpIcon>\n  );\n};\n","import {\n  CreateBoardWrap,\n  HelpBox,\n  HelpButton,\n  HelpText,\n  Image,\n  Subtitle,\n  TitleCreate,\n} from './SidebarContent-styled';\nimport { Box } from '@mui/material';\nimport { useState } from 'react';\n\nimport styles from './SidebarCustomScroll.module.css';\n\nimport AloeVera from '../../assets/images/aloe-vera.png';\n\nimport { SidebarLogo } from 'components/Logo/Logo';\nimport { ButtonSidebar } from 'components/Buttons/Button';\nimport { SidebarBoardList } from './SidebarBoardList';\n\nimport LogoutBtn from 'components/logoutBtn/logoutBtn';\nimport ModalBoard from 'components/ModalBoard/ModalBoard';\nimport ModalHelp from 'components/ModalHelp/ModalHelp';\nimport { SidebarHelpIcon } from './SidebarHelpIcon';\n\nexport const SidebarContent = ({ isSidebarShown }) => {\n  const [isModalBoardOpen, setIsModalBoardOpen] = useState(false);\n  const [isModalHelpOpen, setIsModalHelpOpen] = useState(false);\n\n  const modalBoardStateChange = () => setIsModalBoardOpen(!isModalBoardOpen);\n  const modalHelpStateChange = () => setIsModalHelpOpen(!isModalHelpOpen);\n\n  return (\n    <>\n      <Box\n        className={styles.container}\n        sx={{\n          pt: 3,\n          pb: 3,\n          display: 'flex',\n          flexGrow: 1,\n          flexDirection: 'column',\n          justifyContent: 'space-between',\n        }}\n      >\n        <Box>\n          <Box sx={{ pl: { 0: 1.75, 768: 3 }, pr: { 0: 1.75, 768: 3 } }}>\n            <SidebarLogo sx={{ mb: 7.5 }} isSidebarShown={isSidebarShown} />\n\n            <Subtitle sx={{ mb: 1 }} isSidebarShown={isSidebarShown}>\n              My boards\n            </Subtitle>\n\n            <CreateBoardWrap sx={{ mb: 5 }}>\n              <TitleCreate isSidebarShown={isSidebarShown}>\n                Create a <br /> new board\n              </TitleCreate>\n              <ButtonSidebar onClick={modalBoardStateChange} />\n            </CreateBoardWrap>\n          </Box>\n          <SidebarBoardList />\n        </Box>\n\n        <Box sx={{ pl: { 0: 1.75, 768: 3 }, pr: { 0: 1.75, 768: 3 } }}>\n          <HelpBox sx={{ p: { 0: 1.75, 768: 2.5 }, mb: 3 }}>\n            <Image\n              src={AloeVera}\n              alt={'aloe vera'}\n              isSidebarShown={isSidebarShown}\n            />\n            <HelpText\n              isSidebarShown={isSidebarShown}\n              sx={{\n                mb: 2.25,\n                fontSize: { 0: '12px', 768: '14px' },\n                lineHeight: { 0: '16px', 768: '20px' },\n              }}\n            >\n              If you need help with <span>TaskPro</span>, check out our support\n              resources or reach out to our customer support team.\n            </HelpText>\n            <HelpButton\n              type=\"button\"\n              isSidebarShown={isSidebarShown}\n              onClick={modalHelpStateChange}\n            >\n              <SidebarHelpIcon />\n              Need help?\n            </HelpButton>\n          </HelpBox>\n          <LogoutBtn />\n        </Box>\n      </Box>\n\n      <ModalBoard\n        boardTitle={'New board'}\n        open={isModalBoardOpen}\n        handleClose={modalBoardStateChange}\n      />\n      <ModalHelp title={\"Need help\"} open={isModalHelpOpen} handleClose={modalHelpStateChange} />\n    </>\n  );\n};\n","import { Box, Drawer } from '@mui/material';\n\nimport { SidebarContent } from './SidebarContent';\nimport { SIDEBARMOBILEWIDTH, SIDEBARWIDTH } from './SidebarCONSTANTS';\n\nexport const Sidebar = ({ ...props }) => {\n  const { window, isMobileSidebar, handleSidebarToggle } = props;\n  const container =\n    window !== undefined ? () => window().document.body : undefined;\n\n  return (\n    <Box\n      component=\"nav\"\n      sx={{ width: { 1440: SIDEBARWIDTH }, flexShrink: { 1440: 0 } }}\n      aria-label=\"sidebar options\"\n    >\n      <Drawer\n        container={container}\n        variant=\"temporary\"\n        open={isMobileSidebar}\n        onClose={handleSidebarToggle}\n        ModalProps={{ keepMounted: true }}\n        slotProps={{\n          backdrop: {\n            style: {\n              backgroundColor: 'var(--sidebar-backdrop-color)',\n            },\n          },\n        }}\n        sx={{\n          display: { 0: 'block', 1440: 'none' },\n          '& .MuiDrawer-paper': {\n            boxSizing: 'border-box',\n            boxShadow: 'none',\n            border: 'none',\n            overflowX: 'hidden',\n            width: {\n              0: 192,\n              320: '60vw',\n              375: SIDEBARMOBILEWIDTH,\n              768: SIDEBARWIDTH,\n            },\n            backgroundColor: 'var(--sidebar-primary-bg-color)',\n          },\n        }}\n      >\n        <SidebarContent isSidebarShown={isMobileSidebar} />\n      </Drawer>\n\n      <Drawer\n        variant=\"permanent\"\n        open\n        sx={{\n          display: { 0: 'none', 1440: 'block' },\n          '& .MuiDrawer-paper': {\n            boxSizing: 'border-box',\n            boxShadow: 'none',\n            border: 'none',\n            overflowX: 'hidden',\n            width: SIDEBARWIDTH,\n            backgroundColor: 'var(--sidebar-primary-bg-color)',\n          },\n        }}\n      >\n        <SidebarContent isSidebarShown={true} />\n      </Drawer>\n    </Box>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const HeaderContainer = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  max-width: 100%;\n  width: auto;\n  height:68px;\n  padding: 18px 24px;\n  background: var(--header-bg-color);\n  color: var(--primary-text-color);\n\n  @media (max-width: 1440px) {\n    padding: 18px 32px;\n  }\n  @media (max-width: 768px) {\n    padding: 14px 20px;\n    height:60px;\n  }\n`;\n\nexport const ThemeContainer = styled.div`\n  position: relative;\n  display: inline-block;\n  width: 70px;\n  height: auto;\n  margin-right: 14px;\n  margin-left: auto;\n`;\n\nexport const ThemeWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  color: var(--primary-text-color);\n  font-size: 14px;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n  transition: color 300ms cubic-bezier(0.4, 0, 0.2, 1);\n  svg {\n    stroke: var(--primary-text-color);\n    transition: stroke 300ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n  &:hover {\n    svg {\n      stroke: var(--header-theme-color);\n    }\n    color: var(--header-theme-color);\n   \n  }\n`;\n\nexport const ThemeUL = styled.ul`\n  position: absolute;\n  top: 45px;\n  left: -12px;\n  margin: 0px;\n  max-height: 0px;\n  padding: 0 44px 0 18px;\n  background: var(--modal-bg-color);\n  overflow: hidden;\n  list-style: none;\n  border-radius: 8px;\n  \n  &.visible {\n    width: 100px;\n    max-height: 107px;\n    padding: 18px 44px 18px 18px;\n    border: 1px solid var(--button-bg-color);\n    box-shadow: 0px 4px 16px 0px rgba(17, 17, 17, 0.1);\n  }\n  @media (max-width: 768px) {\n    top: 41px;\n  }\n`;\n\nexport const ThemeButton = styled.button`\n  border: none;\n  background: transparent;\n  text-transform: capitalize;\n  cursor: ${({ disabled }) => (disabled ? '' : 'pointer')};\n  color: ${({ selected }) =>\n    selected ? 'var(--button-bg-color)' : 'var(--secondary-text-color)'};\n  }\n`;\n","import { IconButton } from '@mui/material';\nimport MenuIcon from '@mui/icons-material/Menu';\n\nexport const NavBtn = ({ handleSidebarToggle }) => {\n  return (\n    <>\n      <IconButton\n        color=\"inherit\"\n        aria-label=\"open sidebar options\"\n        edge=\"start\"\n        onClick={handleSidebarToggle}\n        sx={{ width: 32, height: 32, display: { 1440: 'none' } ,\n        transition: \"color 300ms cubic-bezier(0.4, 0, 0.2, 1)\",\n        '&:hover': {\n          color: 'var(--header-theme-color)',\n          background: \"inherit\",\n        },}}\n      >\n        <MenuIcon />\n      </IconButton>\n    </>\n  );\n};\n","import styled, { css } from 'styled-components';\nimport { styled as MUI } from '@mui/material/styles';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const Container = MUI('div')({\n  backgroundColor: 'var(--input-bcg-color)',\n  marginLeft: 'auto',\n  marginRight: 'auto',\n  borderRadius: '8px'\n});\n\nexport const FormWrap = styled.div`\n  background-color: var(--modal-bg-color);\n  display: flex;\n  flex-direction: column;\n  justify-content: right;\n  align-items: center;\n  min-width: 100%;\n`;\n\nexport const AvatarWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 25px;\n`;\nexport const ImgWrapper = styled.div`\n  position: relative;\n  width: 68px;\n  height: 68px;\n  border-radius: 8px;\n  transition: all 0.3s ease;\n`;\nexport const IconAvatar = styled.svg`\n  width: 68px;\n  height: 68px;\n  --color1: var(--avatar-bcg-color);\n  --color2: var(--avatar-fill-color);\n`;\n\nexport const Img = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  border-radius: 8px;\n`;\nexport const IconButton = styled.button`\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  position: absolute;\n  top: 101%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 24px;\n  height: 24px;\n  background-color: var(--icon-plus-bcg);\n`;\nexport const IconPlus = styled.svg`\n  display: block;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 10px;\n  height: 10px;\n  stroke: var(--icon-add-color);\n`;\n\nexport const FormikForm = styled(Form)`\n  width: 100%;\n  display: flex;\n  gap: 14px;\n\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\nexport const Label = styled.label`\n  display: block;\n  width: 100%;\n`;\nexport const FormikInput = styled(Field)`\n  width: 100%;\n  padding: 14px 18px;\n  font-family: Poppins;\n  font-size: 14px;\n  line-height: normal;\n  letter-spacing: -0.28px;\n\n  color: var(--primary-text-color);\n  border-radius: 8px;\n  opacity: 0.4;\n  border: 1px solid var(--input-border-color);\n\n  background: var(--input-bcg-color);\n  transition: all 0.3s ease;\n\n  &::placeholder {\n    color: var(--primary-text-color);\n    font-size: 14px;\n    font-family: 'Poppins';\n    letter-spacing: -0.28px;\n  }\n\n  &:focus {\n    opacity: 1;\n    outline: none;\n  }\n`;\nexport const Wrap = styled.div`\n  display: block;\n  position: relative;\n`;\nexport const Icon = styled.svg`\n  width: 18px;\n  height: 18px;\n  stroke: var(--primary-text-color);\n  fill: none;\n  display: block;\n`;\nexport const IconBtn = styled(({ active, ...rest }) => <button {...rest} />)`\n  position: absolute;\n  right: 12px;\n  top: 50%;\n  background-color: transparent;\n  border: none;\n  transform: translateY(-50%);\n  cursor: pointer;\n  opacity: 0.4;\n  & svg {\n    stroke: var(--primary-text-color);\n  }\n\n  &:focus {\n    outline: none;\n  }\n  ${props =>\n    props.active &&\n    css`\n      opacity: 1;\n      svg {\n        stroke: var(--input-border-color);\n      }\n    `}\n`;\n\nexport const Button = styled.button`\n  color: var(--btn-text-color);\n  text-align: center;\n  font-family: Poppins;\n  font-size: 14px;\n  padding: 14px 0;\n  -webkit-tap-highlight-color: transparent;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  font-size: 14px;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n  margin-top: 10px;\n  width: 100%;\n  border: none;\n  border-radius: 8px;\n  background: var(--input-border-color);\n  opacity: 1;\n  outline: none;\n  cursor: pointer;\n\n  &:disabled {\n    // opacity: 0.6;\n    //  background: var(--input-border-color);\n    cursor: not-allowed;\n  }\n  &:focus {\n    opacity: 1;\n    -webkit-tap-highlight-color: none;\n  }\n`;\n\nexport const Error = styled(ErrorMessage)`\n  font-family: 'Roboto';\n  opacity: 0.5;\n  color: var(--secondary-text-color);\n  font-size: 14px;\n  margin-top: 5px;\n  padding-left: 5px;\n  max-width: 200px;\n`;\n","export const selectUser = state => state.auth.user;\nexport const selectIsLoggedIn = state => state.auth.isLoggedIn;\nexport const selectTheme = state => state.auth.user.theme;\nexport const selectIsFetchingCurrent = state =>\n  state.auth.isFetchingCurrentUser;\n   export const selectAvatar = state => state.auth.user.avatarURL;\n\nconst authSelectors = {\n  selectUser,\n  selectIsLoggedIn,\n  selectTheme,\n  selectIsFetchingCurrent,\n  selectAvatar,\n};\nexport default authSelectors;\n","import { ErrorMessage, Formik } from 'formik';\nimport { validationSchema } from 'validationSchemas/validationSchema';\nimport UI_MSGS from 'constants/AuthUIConstants';\n\nimport Sprite from '../../assets/images/sprite.svg';\nimport { useState } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Notify, Report } from 'notiflix';\nimport { setAvatar, setUser } from 'redux/user/userAPISlice';\n\nimport {\n  Container,\n  FormWrap,\n  AvatarWrapper,\n  IconAvatar,\n  IconButton,\n  IconPlus,\n  Img,\n  ImgWrapper,\n  FormikForm,\n  Label,\n  FormikInput,\n  Wrap,\n  Icon,\n  Button,\n  IconBtn,\n} from './ModalEditProfile.styled';\nimport { notifyInit } from 'helpers/notifyInit';\n\nimport { selectAvatar } from 'redux/auth/authSelectors';\nimport Loader from 'components/Loader/Loader';\nimport {\n  useUpdateAvatarMutation,\n  useUpdateUserMutation,\n} from 'Services/API_Component';\nimport ModalLayout from 'components/ModalLayout/ModalLayout';\n\nexport const ModalEditProfile = ({ title, open, handleClose }) => {\n  const [showPassword, setShowPassword] = useState(false);\n  const togglePassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const [updateAvatar, { isLoading }] = useUpdateAvatarMutation();\n  const [updateUser, { isLoading: isUpdateUserLoading }] =\n    useUpdateUserMutation();\n\n  const dispatch = useDispatch();\n  const currentImage = useSelector(selectAvatar);\n\n  const user = useSelector(state => state.auth.user);\n  // const currentImage=useSelector(state=>state.auth.user.avatarURL)\n\n  const handleAvatarChange = async event => {\n    const file = event.target.files[0];\n\n    if (!file) {\n      return;\n    }\n\n    const formData = new FormData();\n\n    formData.append('avatarURL', file);\n\n    try {\n      const response = await updateAvatar(formData);\n\n      if (response.data?.avatarURL) {\n        const newAvatarURL = response.data.avatarURL;\n\n        dispatch(setAvatar(newAvatarURL));\n        Report.success('Successful', 'Avatar updated successfully!', 'Okay');\n        handleClose();\n      } else {\n        Report.failure('Error!', 'Error updating avatar!', 'Okay');\n      }\n    } catch (error) {\n      Report.failure('Error!', `'An error occurred:' ${error}`, 'Okay');\n    }\n    handleClose();\n  };\n\n  const handleSubmit = async values => {\n    const trimmedValues = {\n      name: values.name.trim(),\n      email: values.email.trim(),\n      password: values.password.trim(),\n    };\n    try {\n      const response = await updateUser(trimmedValues);\n\n      if (response.error) {\n        Notify.failure('Error updating the profile:', response.error);\n      } else {\n        dispatch(setUser(trimmedValues));\n\n        Report.success('Successful', 'User profile updated!', 'Okay');\n        handleClose();\n      }\n    } catch (error) {\n      Notify.failure('Error updating the profile:', error);\n    }\n  };\n\n  return (\n    <>\n      <ModalLayout title={title} open={open} handleClose={handleClose}>\n        {(isLoading || isUpdateUserLoading) && <Loader />}\n        <Container sx={{ width: {0: \"77vw\", 375: \"287px\", 768: \"352px\"} }}>\n          <FormWrap>\n            \n            <AvatarWrapper>\n              <ImgWrapper>\n                {currentImage.includes('gravatar') ? (\n                  <IconAvatar aria-label=\"User picture\">\n                    <use href={`${Sprite}#icon-user`}></use>\n                  </IconAvatar>\n                ) : (\n                  <Img src={currentImage} alt=\"User picture\" />\n                )}\n\n                <IconButton\n                  onClick={() => document.getElementById('avatarURL').click()}\n                  aria-label=\"add avatar\"\n                >\n                  <IconPlus>\n                    <use href={`${Sprite}#icon-plus`}></use>\n                  </IconPlus>\n                  <input\n                    id=\"avatarURL\"\n                    name=\"avatarURL\"\n                    type=\"file\"\n                    accept=\"image/*\"\n                    onChange={handleAvatarChange}\n                    style={{ display: 'none' }}\n                  />\n                </IconButton>\n              </ImgWrapper>\n            </AvatarWrapper>\n\n            <Formik\n              initialValues={{\n                name: `${user.name}`,\n                email: `${user.email}`,\n                password: '',\n              }}\n              validationSchema={validationSchema}\n              onSubmit={handleSubmit}\n            >\n              {({\n                values,\n                errors,\n                touched,\n                dirty,\n                handleBlur,\n                handleChange,\n                isValid,\n              }) => (\n                <>\n                  <FormikForm>\n                    <Label htmlFor=\"name\">\n                      <FormikInput\n                        autoComplete=\"off\"\n                        id=\"name\"\n                        name=\"name\"\n                        type=\"text\"\n                        placeholder=\"Enter your name\"\n                        value={values.name}\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        title={UI_MSGS.INPUT_NAME_TITLE}\n                      />\n                      {touched.name && errors.name && (\n                        <ErrorMessage\n                          name=\"name\"\n                          render={msg => {\n                            Notify.failure(` ${msg}`, notifyInit);\n                          }}\n                        />\n                      )}\n                    </Label>\n\n                    <Label htmlFor=\"email\">\n                      <FormikInput\n                        autoComplete=\"off\"\n                        id=\"email\"\n                        name=\"email\"\n                        type=\"email\"\n                        placeholder=\"Enter your email\"\n                        value={values.email}\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        title={UI_MSGS.INPUT_EMAIL_TITLE}\n                      />\n                      {touched.email && errors.email && (\n                        <ErrorMessage\n                          name=\"email\"\n                          render={msg => {\n                            Notify.failure(` ${msg}`, notifyInit);\n                          }}\n                        />\n                      )}\n                    </Label>\n\n                    <Label htmlFor=\"password\">\n                      <Wrap>\n                        <FormikInput\n                          autoComplete=\"off\"\n                          id=\"password\"\n                          name=\"password\"\n                          type={showPassword ? 'text' : 'password'}\n                          placeholder=\"Create a password\"\n                          value={values.password}\n                          onBlur={handleBlur}\n                          onChange={handleChange}\n                          title={UI_MSGS.INPUT_PWD_TITLE}\n                        />\n                        <IconBtn\n                          type=\"button\"\n                          onClick={togglePassword}\n                          active={showPassword}\n                          className={showPassword ? 'active' : ''}\n                          aria-label=\"Toggle Password Visibility\"\n                        >\n                          <Icon>\n                            <use href={`${Sprite}#icon-eye`}></use>\n                          </Icon>\n                        </IconBtn>\n                      </Wrap>\n\n                      {touched.password && errors.password && (\n                        <ErrorMessage\n                          name=\"password\"\n                          render={msg => {\n                            Notify.failure(` ${msg}`, notifyInit);\n                          }}\n                        />\n                      )}\n                    </Label>\n\n                    <Button\n                      type=\"submit\"\n                      disabled={!dirty || !isValid}\n                      aria-label=\"Submit\"\n                    >\n                      Send\n                    </Button>\n                  </FormikForm>\n                </>\n              )}\n            </Formik>\n          </FormWrap>\n        </Container>\n      </ModalLayout>\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const UserInfoContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  color: var(--primary-text-color);\n  transition: color 300ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n     color: var(--header-theme-color);\n  }\n`;\n\nexport const UserName = styled.p`\n    margin-right: 8px;\n    \n    font-size: 14px;\n    font-weight: 500;\n    letter-spacing: -0.28px;\n`;\n\nexport const EmptyAvatar = styled.div`\n    width: 32px;\n    height: 32px;\n    background: var(--primary-text-color);\n    border-radius: 8px;\n`;\n\nexport const ImgAvatar = styled.img`\n    width: 32px;\n    height: 32px;\n    border-radius: 8px;\n`;","import { useState } from 'react';\nimport { ModalEditProfile } from 'components/ModalEditProfile/ModalEditProfile';\nimport {\n  EmptyAvatar,\n  ImgAvatar,\n  UserInfoContainer,\n  UserName,\n} from './UserInfo.styled';\n\nexport const UserInfo = ({ name = 'User', avatarURL }) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const modalStateChange = () => setIsModalOpen(!isModalOpen);\n\n  return (\n    <>\n      <UserInfoContainer onClick={modalStateChange}>\n        <UserName>{name}</UserName>\n        <div>\n          {avatarURL ? (\n            <ImgAvatar src={avatarURL} alt=\"User Avatar\" />\n          ) : (\n            <EmptyAvatar />\n          )}\n        </div>\n      </UserInfoContainer>\n\n      <ModalEditProfile\n        title={'Edit  profile'}\n        open={isModalOpen}\n        handleClose={modalStateChange}\n      />\n    </>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport {\n  HeaderContainer,\n  ThemeButton,\n  ThemeContainer,\n  ThemeUL,\n  ThemeWrap,\n} from './Header.styled';\nimport sprite from '../../assets/images/sprite.svg';\nimport { NavBtn } from './NavBtn/NavBtn';\nimport { UserInfo } from './UserInfo/UserInfo';\nimport { useSelector } from 'react-redux';\nimport { selectUser } from 'redux/auth/authSelectors';\nimport { API } from 'Services/API';\n\nexport const Header = ({ handleSidebarToggle }) => {\n  const { avatarURL, name, theme } = useSelector(selectUser);\n  const [themeListVisible, setThemeListVisible] = useState(false);\n  const [selectedTheme, setSelectedTheme] = useState(theme);\n  const [themeUser] = API.useThemeUserMutation();\n  const themeList = ['light', 'dark', 'violet'];\n\n  const handleThemeList = () => {\n    setThemeListVisible(!themeListVisible);\n  };\n\n  const closeThemeList = () => {\n    setThemeListVisible(false);\n  };\n\n  const handleThemeChange = async (e) => {\n    setSelectedTheme(e.target.value);\n    try {\n      await themeUser({theme: e.target.value});\n      closeThemeList();\n    } catch (error) {\n      console.error('Error updating theme:', error);\n    };\n  };\n  \n\n  useEffect(() => {\n    document.body.classList.add(selectedTheme);\n    return () => {\n      document.body.classList.remove(selectedTheme);\n    };\n  }, [selectedTheme]);\n\n  useEffect(() => {\n    const handleWindowClick = event => {\n      if (event.target.nodeName !== 'BUTTON') {\n        closeThemeList();\n      }\n    };\n\n    const handleKeyDown = event => {\n      if (event.key === 'Escape') {\n        closeThemeList();\n      }\n    };\n\n    window.addEventListener('mousedown', handleWindowClick);\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('mousedown', handleWindowClick);\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [themeListVisible]);\n\n  return (\n    <HeaderContainer>\n      <NavBtn handleSidebarToggle={handleSidebarToggle} />\n      <ThemeContainer>\n        <ThemeWrap onClick={handleThemeList}>\n          <p>Theme</p>\n          <svg width=\"16px\" height=\"16px\">\n            <use href={sprite + '#icon-drop-down'}></use>\n          </svg>\n        </ThemeWrap>\n        <ThemeUL className={themeListVisible ? 'visible' : ''}>\n          {themeList.map(theme => (\n            <li key={theme}>\n              <ThemeButton\n                selected={selectedTheme === theme}\n                disabled={selectedTheme === theme}\n                value={theme}\n                onClick={handleThemeChange}\n              >\n                {theme}\n              </ThemeButton>\n            </li>\n          ))}\n        </ThemeUL>\n      </ThemeContainer>\n      <UserInfo name={name} avatarURL={avatarURL} />\n    </HeaderContainer>\n  );\n};\n","import { Box, Button, Typography } from '@mui/material';\nimport ModalBoard from 'components/ModalBoard/ModalBoard';\nimport { SIDEBARWIDTH } from 'components/Sidebar/SidebarCONSTANTS';\nimport { useState } from 'react';\n\nexport const DefaultScreenPage = () => {\n  const [isModalBoardOpen, setIsModalBoardOpen] = useState(false);\n  const modalBoardStateChange = () => setIsModalBoardOpen(!isModalBoardOpen);\n  return (\n    <>\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          pt: { 0: 9.25, 768: 11, 1440: 9.75 },\n          pb: { 0: 3, 768: 4, 1440: 1 },\n          pl: { 0: 2.5, 768: 4, 1440: 3 },\n          pr: { 0: 2.5, 768: 4, 1440: 3 },\n          height: '100vh',\n          width: { 0: '100vw', 1440: `calc(100vw - ${SIDEBARWIDTH}px)` },\n          flexGrow: 1,\n          backgroundColor: 'var(--primary-bg-color)',\n        }}\n      >\n        <Box sx={{ width: '486px' }}>\n          <Typography\n            sx={{\n              padding: 0,\n              margin: 0,\n              color: 'var(--secondary-text-color)',\n              textAlign: 'center',\n              fontFamily: 'Poppins',\n              fontSize: { 0: '12px', 768: '14px' },\n              fontStyle: 'normal',\n              fontWeight: 400,\n              lineHeight: { 0: '16px', 768: '18px' },\n              letterSpacing: { 0: '-0.24px', 768: '-0.28px' },\n            }}\n          >\n            Before starting your project, it is essential{' '}\n            <Button\n              onClick={modalBoardStateChange}\n              type=\"button\"\n              sx={{\n                verticalAlign: 'baseline',\n                padding: 0,\n                margin: 0,\n                color: 'var(--default-screen-page-link-color)',\n                backgroundColor: 'transparent',\n                fontFamily: 'Poppins',\n                border: 'none',\n                cursor: 'pointer',\n                textDecoration: 'none',\n                outline: 'none',\n                textTransform: 'lowercase',\n                fontSize: { 0: '12px', 768: '14px' },\n\n                '&:hover, &:focus': {\n                  textDecoration: 'underline',\n                  backgroundColor: 'transparent',\n                },\n              }}\n            >\n              to create a board\n            </Button>{' '}\n            to visualize and track all the necessary tasks and milestones. This\n            board serves as a powerful tool to organize the workflow and ensure\n            effective collaboration among team members.\n          </Typography>\n        </Box>\n      </Box>\n\n      <ModalBoard\n        boardTitle={'New board'}\n        open={isModalBoardOpen}\n        handleClose={modalBoardStateChange}\n      />\n    </>\n  );\n};\n","import { AppBar, Box } from '@mui/material';\n\nimport { useState } from 'react';\nimport { SIDEBARWIDTH } from 'components/Sidebar/SidebarCONSTANTS';\nimport { Sidebar } from 'components/Sidebar/Sidebar';\nimport { Header } from 'components/Header/Header';\nimport { Outlet } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { selectIsLoggedIn } from 'redux/auth/authSelectors';\nimport { DefaultScreenPage } from 'pages/ScreensPage/DefaultScreenPage';\nimport { API } from 'Services/API';\n\nconst HomePage = () => {\n  const isLoggdIn = useSelector(selectIsLoggedIn);\n  const [isMobileSidebar, setIsMobileSidebar] = useState(false);\n  const handleSidebarToggle = () => setIsMobileSidebar(!isMobileSidebar);\n\n  const { data: boards } = API.useGetBoardsQuery();\n\n  return (\n    isLoggdIn && (\n      <Box sx={{ display: 'flex', overflowX: 'hidden' }}>\n        <AppBar\n          position=\"fixed\"\n          sx={{\n            width: { 1440: `calc(100% - ${SIDEBARWIDTH}px)` },\n            height: { 768: 68 },\n            ml: { 1440: `${SIDEBARWIDTH}px` },\n            boxShadow: 'none',\n            backgroundColor: '#161616',\n          }}\n        >\n          <Header handleSidebarToggle={handleSidebarToggle} />\n        </AppBar>\n\n        <Sidebar\n          isMobileSidebar={isMobileSidebar}\n          handleSidebarToggle={handleSidebarToggle}\n        />\n\n        {boards?.length === 0 ? <DefaultScreenPage /> : <Outlet />}\n      </Box>\n    )\n  );\n};\n\nexport default HomePage;\n"],"names":["API","useRegisterMutation","useLogInMutation","useLogOutMutation","useUpdateAvatarMutation","useGetCurrentUserQuery","useHelpUserMutation","useThemeUserMutation","useUpdateUserMutation","useGetBoardsQuery","useGetBoardContentByIdQuery","useGetBoardByIdQuery","useAddBoardsMutation","useDeleteBoardByIdMutation","useUpdateBoardByIdMutation","useAddColumnMutation","useUpdateColumnByIdMutation","useDeleteColumnByIdMutation","useGetAllCardsQuery","useAddCardMutation","useUpdateCardByIdMutation","useDeleteCardByIdMutation","useUpdateCardColumnByIdMutation","ButtonWithIcon","_ref","title","onClick","type","_jsxs","Button","variant","disableElevation","sx","display","gap","color","fontFamily","alignItems","textTransform","borderRadius","letterSpacing","fontSize","background","lineHeight","fontWeight","fontStyle","width","height","children","_jsx","Box","justifyContent","stroke","href","sprite","ButtonWithoutIcon","_ref2","marginTop","ButtonAdd","_ref3","ButtonSidebar","_ref4","IconButton","slideLigtning","keyframes","_templateObject","_taggedTemplateLiteral","slideToRight","_templateObject2","SidebarLogoIcon","styled","fill","animation","concat","animationTimingFunction","SidebarLogoWrap","transform","isSidebarShown","animationFillMode","SidebarLogoIconWrap","backgroundColor","overflow","SidebarLogoText","margin","StartPageLogoWrap","StartPageLogoIconWrap","StartPageLogoIcon","StartPageLogoText","SidebarLogo","_Fragment","StartPageLogo","style","FormStyled","MUI","flexDirection","ButtonClose","InputStyled","TransparentSVG","_templateObject3","UlStyled","_templateObject4","UlBgStyled","_templateObject5","ImgStyled","_templateObject6","_templateObject7","LiIconsStyled","_templateObject8","modalStyles","position","top","left","border","padding","titleStyles","marginBottom","open","handleClose","Modal","onClose","Typography","SIDEBARWIDTH","SIDEBARMOBILEWIDTH","slideToLeft","slideToDown","shakeAnimation","Subtitle","CreateBoardWrap","paddingBottom","paddingTop","borderTop","borderBottom","TitleCreate","HelpBox","Image","HelpText","HelpButton","_ref5","cursor","textDecoration","outline","HelpIcon","_ref6","startAnimation","slideAround","BoardItemWrap","BoardItemIcon","BoardItemCurrentIcon","BoardItemTitleWrap","whiteSpace","BoardItemTitle","titleWidth","titleWrapWidth","current","slideText","animationName","animationDuration","animationIterationCount","animationDirection","setTitleWidth","measureRef","useRef","useEffect","observer","ResizeObserver","entries","_step","_iterator","_createForOfIteratorHelper","s","n","done","entry","value","target","contentRect","err","e","f","currentRef","observe","unobserve","ref","visibility","arrIcons","arrBG","titleStyle","board","boardTitle","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","inputValue","setInputValue","_useState3","iconId","_useState4","setIconId","_useState5","_useState6","setBackground","_API$useAddBoardsMuta","addBoard","_API$useUpdateBoardBy","editBoard","navigate","useNavigate","handleSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","FormData","response","newBoardId","_response","wrap","_context","prev","next","sent","setBoardResponse","data","_id","Report","abrupt","boardId","t0","formik","handleReset","stop","_x","apply","arguments","validationSchema","Yup","min","max","required","test","Notiflix","description","useFormik","initialValues","onSubmit","ModalLayout","id","name","placeholder","onChange","currentTarget","setFieldValue","onBlur","handleBlur","map","icon","isSelected","transition","bg","index","src","alt","values","SidebarBoardItemIcon","setStartAnimation","randomNumber","Math","floor","random","interval","setInterval","setTimeout","clearInterval","opacity","SidebarBoardItem","isHovered","setIsHovered","setTitleWrapWidth","_useState7","window","innerWidth","_useState8","screenWidth","setScreenWidth","_useState9","_useState10","isModalOpen","setIsModalOpen","_API$useDeleteBoardBy","deleteBoard","handleResize","debounce","addEventListener","removeEventListener","modalStateChange","MeasureTitleWidth","onMouseEnter","onMouseLeave","pl","pr","right","List","disablePadding","ListItem","ListItemButton","p","m","pointerEvents","event","stopPropagation","ModalBoard","SidebarBoardList","boardsArray","setBoardsArray","currentItemId","setCurrentItemId","length","mb","LogOutBtnStyled","SpanStyled","Icon","_useLogOutMutation","logOut","handleLogOut","unwrap","logout","setIsLoggedIn","setError","inputStyles","TextareaStyled","_API$useHelpUserMutat","helpUser","email","useSelector","state","auth","user","comment","resetForm","status","console","log","message","matches","handleChange","isValidSync","SidebarHelpIcon","SidebarContent","isModalBoardOpen","setIsModalBoardOpen","isModalHelpOpen","setIsModalHelpOpen","modalBoardStateChange","modalHelpStateChange","className","styles","pt","pb","flexGrow","AloeVera","LogoutBtn","ModalHelp","Sidebar","props","Object","assign","_objectDestructuringEmpty","isMobileSidebar","handleSidebarToggle","container","undefined","document","body","component","flexShrink","Drawer","ModalProps","keepMounted","slotProps","backdrop","boxSizing","boxShadow","overflowX","HeaderContainer","ThemeContainer","ThemeWrap","ThemeUL","ThemeButton","disabled","selected","NavBtn","edge","MenuIcon","Container","marginLeft","marginRight","FormWrap","AvatarWrapper","ImgWrapper","IconAvatar","Img","IconPlus","FormikForm","Form","Label","_templateObject9","FormikInput","Field","_templateObject10","Wrap","_templateObject11","_templateObject12","IconBtn","active","rest","_objectWithoutProperties","_excluded","_objectSpread","_templateObject13","css","_templateObject14","_templateObject15","ErrorMessage","_templateObject16","selectUser","selectIsLoggedIn","isLoggedIn","selectAvatar","avatarURL","ModalEditProfile","showPassword","setShowPassword","togglePassword","_useUpdateAvatarMutat","_useUpdateAvatarMutat2","updateAvatar","isLoading","_useUpdateUserMutatio","_useUpdateUserMutatio2","updateUser","isUpdateUserLoading","currentImage","handleAvatarChange","file","formData","_response$data","newAvatarURL","files","append","setAvatar","_callee2","trimmedValues","_context2","trim","password","error","Notify","setUser","_x2","Loader","includes","Sprite","getElementById","click","accept","Formik","errors","touched","dirty","isValid","htmlFor","autoComplete","UI_MSGS","render","msg","notifyInit","UserInfoContainer","UserName","EmptyAvatar","ImgAvatar","UserInfo","_ref$name","Header","_useSelector","theme","themeListVisible","setThemeListVisible","selectedTheme","setSelectedTheme","_API$useThemeUserMuta","themeUser","closeThemeList","handleThemeChange","classList","add","remove","handleWindowClick","nodeName","handleKeyDown","key","DefaultScreenPage","textAlign","verticalAlign","isLoggdIn","setIsMobileSidebar","boards","AppBar","ml","Outlet"],"sourceRoot":""}