{"version":3,"file":"static/js/514.93406d91.chunk.js","mappings":"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","sources":["Services/API.js","components/Buttons/Button.jsx","components/HeaderDashboard/HeaderDashboard.styled.jsx","components/ModalBoard/ModalBoard.styled.jsx","components/ModalLayout/ModalLayout.jsx","components/Sidebar/SidebarCONSTANTS.js","components/AddCard/AddCard.styled.jsx","components/AddColumn/AddColumn.jsx","components/TaskCard/TaskCard.styled.jsx","components/TaskCard/TaskCard.jsx","components/ColorRadioButtons/ColorRadioButtons.jsx","components/Icons/DropDownIcon/DropDownIcon.styled.jsx","components/Icons/DropDownIcon/DropDownIcon.jsx","components/Popup/Popup.jsx","components/DatePicker/DatePicker.styled.jsx","components/DatePicker/DatePicker.jsx","components/AddCard/AddCard.jsx","components/Column/Column.styled.jsx","components/Column/Column.jsx","components/HeaderDashboard/Filter.styled.jsx","components/HeaderDashboard/Filter.jsx","components/HeaderDashboard/HeaderDashboard.jsx","pages/ScreensPage/ScreenPage.styled.jsx","pages/ScreensPage/ScreensPage.jsx"],"sourcesContent":["import {\n  useRegisterMutation,\n  useLogInMutation,\n  useLogOutMutation,\n  useGetCurrentUserQuery,\n  useUpdateUserMutation,\n  useThemeUserMutation,\n  useAvatarUserMutation,\n  useHelpUserMutation,\n  useGetBoardsQuery,\n  useGetBoardByIdQuery,\n  useAddBoardsMutation,\n  useDeleteBoardByIdMutation,\n  useUpdateBoardByIdMutation,\n  useAddColumnMutation,\n  useUpdateColumnByIdMutation,\n  useDeleteColumnByIdMutation,\n  useGetAllCardsQuery,\n  useAddCardMutation,\n  useUpdateCardByIdMutation,\n  useDeleteCardByIdMutation,\n  useUpdateCardColumnByIdMutation,\n} from './API_Component';\n\nexport const API = {\n  useRegisterMutation,\n  useLogInMutation,\n  useLogOutMutation,\n  useAvatarUserMutation,\n  useGetCurrentUserQuery,\n  useHelpUserMutation,\n  useThemeUserMutation,\n  useUpdateUserMutation,\n  useGetBoardsQuery,\n  useGetBoardByIdQuery,\n  useAddBoardsMutation,\n  useDeleteBoardByIdMutation,\n  useUpdateBoardByIdMutation,\n  useAddColumnMutation,\n  useUpdateColumnByIdMutation,\n  useDeleteColumnByIdMutation,\n  useGetAllCardsQuery,\n  useAddCardMutation,\n  useUpdateCardByIdMutation,\n  useDeleteCardByIdMutation,\n  useUpdateCardColumnByIdMutation,\n};\n","import * as React from 'react';\nimport Button from '@mui/material/Button';\n\nimport { Box, IconButton } from '@mui/material';\n\nimport sprite from '../../assets/images/sprite.svg';\n\n// Кнопка для модалок с иконкой\nexport const ButtonWithIcon = ({ title, onClick, type }) => {\n  return (\n    <Button\n      onClick={onClick}\n      type={type}\n      variant=\"contained\"\n      disableElevation\n      sx={{\n        display: 'flex',\n        gap: '8px',\n        color: '#161616',\n        fontFamily: 'Poppins, sans-serif',\n        alignItems: 'center',\n        textTransform: 'none',\n        borderRadius: '8px',\n        letterSpacing: '-0.02em',\n        fontSize: '14px',\n        // background: '#BEDBB0',\n        background: ' var(--button-bg-color)',\n        lineHeight: '21px',\n        fontWeight: '500',\n        fontStyle: 'normal',\n        width: '100%',\n        height: '56px',\n        '&:hover': {\n          // background: '#9DC888',\n          background: 'var( --button-bg-color-hover)',\n        },\n      }}\n    >\n      <Box\n        sx={{\n          width: '28px',\n          height: '28px',\n          background: 'var(--icon-plus-bg-color)',\n          borderRadius: '6px',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <svg width=\"14\" height=\"14\" stroke=\"var(--icon-plus-color)\">\n          <use href={sprite + '#icon-add'}></use>\n        </svg>\n      </Box>\n      {title}\n    </Button>\n  );\n};\n\n// Кнопка для модалок без иконки\nexport const ButtonWithoutIcon = ({ title, onClick, type }) => {\n  return (\n    <Button\n      type={type}\n      onClick={onClick}\n      disableElevation\n      sx={{\n        display: 'flex',\n        color: '#161616',\n        fontFamily: 'Poppins, sans-serif',\n        alignItems: 'center',\n        textTransform: 'none',\n        borderRadius: '8px',\n        marginTop: '24px',\n        letterSpacing: '-0.02em',\n        fontSize: '14px',\n        // background: '#BEDBB0',\n        background: 'var(--button-bg-color)',\n        lineHeight: '21px',\n        fontWeight: '500',\n        fontStyle: 'normal',\n        width: '100%',\n        height: '56px',\n        '&:hover': {\n          background: 'var( --button-bg-color-hover)',\n        },\n      }}\n    >\n      {title}\n    </Button>\n  );\n};\n\n// Кнопка для добавления колонки\nexport const ButtonAdd = ({ onClick }) => {\n  return (\n    <Button\n      onClick={onClick}\n      variant=\"contained\"\n      disableElevation\n      sx={{\n        display: 'flex',\n        gap: '8px',\n        color: 'var(--primary-text-color)',\n        fontFamily: 'Poppins, sans-serif',\n        alignItems: 'center',\n        textTransform: 'none',\n        borderRadius: '8px',\n        letterSpacing: '-0.02em',\n        fontSize: '14px',\n        background: 'var(--button-add-bg-color)',\n        lineHeight: '21px',\n        fontWeight: '500',\n        fontStyle: 'normal',\n        width: '334px',\n        height: '56px',\n        '&:hover': {\n          background: 'var(--button-add-bg-color)',\n        },\n      }}\n    >\n      <Box\n        sx={{\n          width: '28px',\n          height: '28px',\n          background: 'var(--button-add-box-color)',\n          borderRadius: '6px',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <svg width=\"14\" height=\"14\" stroke=\"var(--icon-add-color)\">\n          <use href={sprite + '#icon-add'}></use>\n        </svg>\n      </Box>\n      Add another column\n    </Button>\n  );\n};\n\n//Кнопка для Sidebar\nexport const ButtonSidebar = ({ onClick }) => {\n  return (\n    <IconButton\n      type=\"button\"\n      onClick={onClick}\n      sx={{\n        width: '40px',\n        height: '36px',\n        borderRadius: '6px',\n        background: 'var(--sidebar-icon-plus-bg-color)',\n\n        '&:hover, &:focus': {\n          background: 'var(--sidebar-icon-plus-bg-color-HOVER-FOCUS)',\n        },\n      }}\n    >\n      <svg width=\"20\" height=\"20\" stroke=\"var(--sidebar-icon-plus-color)\">\n        <use href={sprite + '#icon-add'}></use>\n      </svg>\n    </IconButton>\n  );\n};\n","import styled from '@emotion/styled';\nexport const Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  padding-bottom: 15px;\n  // padding: 14px 24px;\n  // background: #1f1f1f;\n  font-family: Poppins;\n\n  //   @media (min-width: 1280px) {\n  //       height: 48px;\n  //   };\n  //   @media (min-width: 768px) {\n  //       height: 80px;\n  //   };\n  //   @media (min-width: 375px) {\n  //       height: 134px;\n  //   };\n  //   @media (max-width: 374px) {\n  //       max-height: 134px;\n  //   };\n`;\n\nexport const TitleDashBoard = styled.p`\n  font-size: 18px;\n  font-weight: 500;\n  letter-spacing: -0.36px;\n  margin: 0;\n  color: var(--primary-text-color);\n`;\n\nexport const FilterButton = styled.button`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 2px;\n  background-color: transparent;\n  border: none;\n  outline: none;\n  opacity: 0.8;\n  cursor: pointer;\n`;\nexport const TitleFilter = styled.p`\n  font-size: 14px;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n  color: var(--secondary-text-color);\n  margin-left: 8px;\n  font-family: Poppins;\n`;\n","import styled from '@emotion/styled';\n\nexport const ButtonClose = styled.button`\n  margin: 0;\n  padding: 0;\n  position: absolute;\n  right: 10px;\n  top: 10px;\n  width: 24px;\n  height: 24px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: rgba(255, 255, 255, 0.5);\n\n  background-color: transparent;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    border: 1px solid #ffffff;\n    color: rgba(255, 255, 255, 1);\n  }\n`;\n\nexport const FormStyled = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n  margin-bottom: 24px;\n`;\n\nexport const InputStyled = styled.input`\n  resize: none;\n  color: #ffffff;\n  padding: 14px 14px;\n  background-color: transparent;\n  border: 1px solid rgba(190, 219, 176, 0.4);\n  border-radius: 8px;\n  margin-bottom: 10px;\n  :focus {\n    border: 1px solid #bedbb0;\n    outline: none;\n  }\n  ::placeholder {\n    color: #ffffff;\n    opacity: 30%;\n  }\n`;\n\nexport const TransparentSVG = styled.svg`\n  width: 18px;\n  height: 18px;\n  // stroke: rgba(255, 255, 255, 0.5);\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    stroke: #bedbb0;\n  }\n`;\n\nexport const UlStyled = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 6px;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  margin-bottom: 14px;\n`;\n\nexport const UlBgStyled = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 2px;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  margin-bottom: 14px;\n  width: 260px;\n`;\n\nexport const LiStyled = styled.li`\n  display: flex;\n  width: 28px;\n  height: 28px;\n  border-radius: 14px;\n\n  &:hover,\n  &:focus {\n    border-radius: 5px;\n    background-color: #bedbb0;\n  }\n`;\n\nexport const ImgStyled = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  object-position: center;\n  border-radius: 5px;\n  cursor: pointer;\n`;\n\nexport const LiIconsStyled = styled.li`\n  display: flex;\n  width: 20px;\n  height: 20px;\n  align-items: center; \n  justify-content: center;\n\n  &:hover,\n  &:focus {\n    border-radius: 5px;\n    background-color: rgba(190, 219, 176, 0.2);\n  }\n`;\n","import { Modal, Box, Typography, useMediaQuery } from '@mui/material';\nimport sprite from '../../assets/images/sprite.svg';\nimport { ButtonClose } from 'components/ModalBoard/ModalBoard.styled';\n\n// import { useState } from 'react';\n\nconst ModalStyles = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 350,\n  borderRadius: 8 / 4,\n  border: '1px solid rgba(190, 219, 176, 0.50)',\n  background: '#151515',\n  padding: 24/8,\n};\n\nconst titleStyles = {\n  color: '#FFF',\n  fontSize: 18,\n  fontStyle: 'normal',\n  fontWeight: 500,\n  lineHeight: 'normal',\n  letterSpacing: -0.36,\n  marginBottom: 24 / 8,\n};\n\nconst ModalLayout = ({ title, open, handleClose, children }) => {\n   const adaptiveStyle = useMediaQuery('(min-width: 1440px)');\n  //   const [open, setOpen] = useState(false);\n  //   const handleOpen = () => setOpen(true);\n  //   const handleClose = () => setOpen(false);\n\n  return (\n    <>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box sx={{ ...ModalStyles, width: adaptiveStyle ? 350 : 335 }}>\n          <Typography variant=\"h2\" sx={titleStyles}>\n            {title}\n          </Typography>\n          <ButtonClose type=\"button\" onClick={handleClose}>\n            <svg style={{ stroke: 'currentcolor' }} width=\"18\" height=\"18\">\n              <use href={sprite + '#icon-x-close'} />\n            </svg>\n          </ButtonClose>\n          {children}\n        </Box>\n      </Modal>\n    </>\n  );\n};\n\nexport default ModalLayout;\n","export const SIDEBARWIDTH = 260;\nexport const SIDEBARMOBILEWIDTH = 225;\n  \n\n\n\n","import styled from '@emotion/styled';\n\nexport const ComponentWrapper = styled.div`\n  padding: 0px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const FormStyled = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n  margin-bottom: 0px;\n`;\n\nexport const InputStyled = styled.input`\n  resize: none;\n  color: var(--primary-text-color);\n  padding: 14px 14px;\n  background-color: transparent;\n  border: 1px solid #bedbb0;\n  border-radius: 8px;\n  :focus {\n    border: 2px solid #bedbb0;\n    outline: none;\n  }\n  ::placeholder {\n    color: var(--primary-text-color);\n    opacity: 30%;\n  }\n`;\n\nexport const TextareaStyled = styled.textarea`\n  display: flex;\n  min-height: 155px;\n  color: var(--primary-text-color);\n  resize: none;\n  padding: 14px 14px;\n  background-color: transparent;\n  border: 1px solid #bedbb0;\n  border-radius: 8px;\n  text-align: top;\n  :focus {\n    border: 2px solid #bedbb0;\n    outline: none;\n  }\n  ::placeholder {\n    color: var(--primary-text-color);\n    opacity: 30%;\n  }\n`;\n\nexport const LabelColorBox = styled.div`\n  display: flex;\n  gap: 4px;\n`;\n\nexport const SubWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: left;\n  gap: 4px;\n`;\n\nexport const DateWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 4px;\n`;\n\nexport const DateText = styled.p`\n  color: var(--default-screen-page-link-color);\n  font-size: 14px;\n  margin: 0;\n`;\n\nexport const SubTitle = styled.p`\n  color: var(--primary-text-color);\n  font-size: 12px;\n  opacity: 50%;\n  margin: 0;\n`;\n","import React from 'react';\nimport { API } from 'Services/API';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { FormStyled, InputStyled } from '../AddCard/AddCard.styled';\nimport { ButtonWithIcon } from 'components/Buttons/Button';\nimport ModalLayout from '../ModalLayout/ModalLayout';\n\nconst AddColumn = ({\n  open,\n  modalType,\n  boardId,\n  close,\n  columnId,\n  titleValue,\n}) => {\n  const [addColumn] = API.useAddColumnMutation();\n  const [updateColumn] = API.useUpdateColumnByIdMutation();\n\n  const validationSchema = Yup.object({\n    title: Yup.string()\n      .min(2, 'Must be more then 2 symbols')\n      .required('Title is required')\n      .matches(\n        /^(\\w*)$/,\n        'Title may contain only letters, apostrophe, dash and spaces.'\n      ),\n  });\n\n  const formikTitle =\n    modalType === 'Add column' ? { title: '' } : { title: titleValue };\n\n  const formik = useFormik({\n    initialValues: formikTitle,\n    onSubmit: title => handleSubmit(title),\n    validationSchema,\n  });\n\n  const handleSubmit = async title => {\n    console.log('columnId :>> ', columnId);\n    if (modalType === 'Add column') {\n      try {\n        await addColumn({ boardId, title });\n\n        close();\n      } catch (error) {\n        console.log(error.message);\n      }\n    }\n\n    try {\n      await updateColumn({ columnId, title });\n\n      close();\n    } catch (error) {\n      console.log(error.message);\n    }\n\n    formik.handleReset();\n  };\n\n  return (\n    <ModalLayout title={modalType} open={open} handleClose={close}>\n      <FormStyled onSubmit={formik.handleSubmit}>\n        <InputStyled\n          id=\"title\"\n          name=\"title\"\n          placeholder=\"Title\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.title}\n        />\n        <ButtonWithIcon\n          title={modalType === 'Add column' ? 'Add' : 'Edit'}\n          type={'submit'}\n        />\n      </FormStyled>\n    </ModalLayout>\n  );\n};\n\nexport default AddColumn;\n","import styled from '@emotion/styled';\nconst getPriorityColor = priority => {\n  switch (priority) {\n    case 1:\n      return '#BEDBB0';\n    case 2:\n      return '#8FA1D0';\n    case 3:\n      return '#E09CB5';\n    default:\n      return '#bababa';\n  }\n};\nexport const TypographyStylesTitle = {\n  color: '#FFF',\n  fontSize: '14px',\n  fontWeight: '600',\n  letterSpacing: '-0.28px',\n  marginBottom: '8px',\n};\nexport const TypographyStylesDescription = {\n  color: 'rgba(255, 255, 255, 0.50)',\n  fontSize: '12px',\n  fontWeight: '400',\n  letterSpacing: '-0.24px',\n  whitespace: 'nowrap',\n  lineHeight: '16px',\n  width: '290px' /* Задаємо фіксовану ширину, де текст буде обрізаний */,\n  whiteSpace: 'nowrap' /* Забороняємо перенесення тексту на новий рядок */,\n  overflow:\n    'hidden' /* Приховуємо будь-який текст, який не поміщається в обрізаному вікні */,\n  textOverflow: 'ellipsis',\n};\nexport const TypographyStylesPriority = {\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'start',\n  gap: '4px',\n  color: ' rgba(255, 255, 255, 0.50)',\n  fontFamily: 'Poppins',\n  fontSize: '8px',\n\n  fontWeight: '400',\n  lineHeigt: 'normal',\n  letterSpacing: '-0.16px',\n};\nexport const CardContentStyles = {\n  borderBottom: '1px solid rgba(255, 255, 255, 0.10)',\n  padding: '0px',\n  paddingBottom: '14px',\n  marginBottom: '14px',\n};\nexport const ActionsBox = {\n  display: 'flex',\n  alignItems: 'base-line',\n  justifyContent: 'center',\n  gap: '14px',\n};\nexport const CardActionsStyled = {\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n};\nexport const Circle = styled.div`\n  width: 12px;\n  height: 12px;\n  border-radius: 50%;\n  background-color: ${props => getPriorityColor(props.priority)};\n`;\nexport const CardStyles = styled.div`\n  width: 334px;\n  height: 154px;\n  padding-top: 14px;\n  padding-bottom: 14px;\n  padding-left: 24px;\n  padding-right: 20px;\n  background-color: #121212;\n  border-radius: 8px;\n  border-left: 4px solid ${props => getPriorityColor(props.priority)};\n`;\nexport default getPriorityColor;\n","import React from 'react';\nimport { format } from 'date-fns';\nimport { useState } from 'react';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport CardActions from '@mui/material/CardActions';\nimport { IconButton } from '@mui/material';\nimport MenuItem from '@mui/material/MenuItem';\nimport Menu from '@mui/material/Menu';\nimport Box from '@mui/material/Box';\nimport sprite from '../../assets/images/sprite.svg';\nimport { styled } from '@mui/material';\nimport getPriorityColor from './TaskCard.styled';\n\nimport { deleteCard, setCardData } from '../../redux/tasks/cardsAPISlice';\nimport { useDispatch } from 'react-redux';\nimport { API } from 'Services/API';\n\nimport {\n  TypographyStylesTitle,\n  TypographyStylesDescription,\n  TypographyStylesPriority,\n  CardContentStyles,\n  ActionsBox,\n  CardActionsStyled,\n  Circle,\n} from './TaskCard.styled';\nconst StyledIconButton = styled(IconButton)`\n  &:hover svg {\n    stroke: #bedbb0;\n    stroke-opacity: 1;\n    transition: stroke 0.3s;\n  }\n`;\n\nconst CardStyles = styled(Card)`\n  width: 334px;\n  height: 154px;\n  padding-top: 14px;\n  padding-bottom: 14px;\n  padding-left: 24px;\n  padding-right: 20px;\n  background-color: #121212;\n  border-radius: 8px;\n  border-left: 4px solid ${props => getPriorityColor(props.priority)};\n`;\n\nconst ListMenuStyles = styled(MenuItem)`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  color: rgba(255, 255, 255, 0.5);\n  font-family: 'Poppins';\n  font-size: 14px;\n\n  font-weight: 400px;\n\n  &:hover {\n    color: #bedbb0;\n  }\n  &:hover svg {\n    stroke: #bedbb0;\n    stroke-opacity: 1;\n    transition: stroke 0.3s;\n  }\n`;\nfunction TaskCard({ title, description, priority, deadline, moveCard, id }) {\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [updateCardById] = API.useUpdateCardByIdMutation();\n  const [deleteCardById] = API.useDeleteCardByIdMutation();\n  const dispatch = useDispatch();\n\n  const date = new Date(`${deadline}`);\n  const formattedDate = format(date, 'dd/MM/yyyy');\n\n  const handleOpenMenu = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleCloseMenu = () => {\n    setAnchorEl(null);\n  };\n\n  const handleMoveCard = newColumn => {\n    handleCloseMenu();\n    moveCard(newColumn);\n  };\n  const handleDeleteCard = async () => {\n    try {\n      const response = await deleteCardById({ id });\n      dispatch(deleteCard(response));\n    } catch (error) {\n      console.error('Error deleting card:', error);\n    }\n  };\n\n  const handleUpdateCard = async () => {\n    try {\n      const updatedData = {\n        title,\n        description,\n        priority,\n        deadline,\n\n        /* об'єкт з оновленими даними картки */\n      };\n      const response = await updateCardById({ id, updatedData });\n      dispatch(setCardData(response));\n    } catch (error) {\n      console.error('Error updating card:', error);\n    }\n  };\n\n  return (\n    <CardStyles priority={priority}>\n      <CardContent sx={CardContentStyles}>\n        <Typography sx={TypographyStylesTitle} variant=\"h4\" component=\"div\">\n          Заголовок картки {title}\n        </Typography>\n        <Typography sx={TypographyStylesDescription} variant=\"body2\">\n          Текст або вміст картки буде тут. {description}\n        </Typography>\n      </CardContent>\n      <CardActions sx={CardActionsStyled}>\n        <Box sx={ActionsBox}>\n          <Typography sx={TypographyStylesPriority} variant=\"body2\">\n            Priority:\n            <Circle priority={priority} />\n            <Typography variant=\"subText\">{priority}</Typography>\n          </Typography>\n          <Typography sx={TypographyStylesPriority} variant=\"body2\">\n            Deadline:\n            <Box\n              sx={{\n                width: '14px',\n                height: '14px',\n                color: '#fff',\n                fontFamily: 'Poppins',\n                fontSize: '10px',\n                fontStyle: 'normal',\n                fontWeight: 400,\n                lineHeight: 'normal',\n                letterSpacing: '-0.2px',\n              }}\n            >\n              {' '}\n              {formattedDate}\n            </Box>\n          </Typography>\n        </Box>\n        <Box>\n          <StyledIconButton onClick={handleOpenMenu} aria-label=\"next-colomn\">\n            <svg stroke=\"#fff\" strokeOpacity=\"0.5\" width=\"16\" height=\"16\">\n              <use href={sprite + '#icon-active'} />\n            </svg>\n          </StyledIconButton>\n          <StyledIconButton onClick={handleUpdateCard} aria-label=\"edit\">\n            <svg stroke=\"#fff\" strokeOpacity=\"0.5\" width=\"16\" height=\"16\">\n              <use href={sprite + '#icon-pencil'} />\n            </svg>\n          </StyledIconButton>\n          <StyledIconButton onClick={handleDeleteCard} aria-label=\"remove\">\n            <svg stroke=\"#fff\" strokeOpacity=\"0.5\" width=\"16\" height=\"16\">\n              <use href={sprite + '#icon-trash'} />\n            </svg>\n          </StyledIconButton>\n        </Box>\n      </CardActions>\n      <Menu\n        anchorEl={anchorEl}\n        open={Boolean(anchorEl)}\n        onClose={handleCloseMenu}\n        PaperProps={{\n          sx: {\n            backgroundColor: '#151515',\n            width: '135px',\n          },\n        }}\n      >\n        {/* List of columns to move the card */}\n        <ListMenuStyles onClick={() => handleMoveCard('Column 1')}>\n          {' '}\n          <Box> In progress </Box>\n          <Box>\n            {' '}\n            <svg stroke=\"#fff\" strokeOpacity=\"0.5\" width=\"16\" height=\"16\">\n              <use href={sprite + '#icon-active'} />\n            </svg>\n          </Box>\n        </ListMenuStyles>\n        <ListMenuStyles onClick={() => handleMoveCard('Column 2')}>\n          <Box> Done </Box>\n          <Box>\n            {' '}\n            <svg stroke=\"#fff\" strokeOpacity=\"0.5\" width=\"16\" height=\"16\">\n              <use href={sprite + '#icon-active'} />\n            </svg>\n          </Box>\n        </ListMenuStyles>\n      </Menu>\n    </CardStyles>\n  );\n}\n\nexport default TaskCard;\n","import * as React from 'react';\nimport Radio from '@mui/material/Radio';\n\nexport default function ColorRadioButtons({ onColorChange, value }) {\n  const [selectedValue, setSelectedValue] = React.useState('0');\n\n  const handleChange = event => {\n    setSelectedValue(event.target.value);\n    onColorChange(event.target.value);\n  };\n\n  const controlProps = item => ({\n    checked: selectedValue === item,\n    onChange: handleChange,\n    value: item,\n  });\n\n  return (\n    <div>\n      <Radio\n        {...controlProps('1')}\n        sx={{ color: '#8FA1D0', '&.Mui-checked': { color: '#8FA1D0' } }}\n      />\n      <Radio\n        {...controlProps('2')}\n        sx={{ color: '#E09CB5', '&.Mui-checked': { color: '#E09CB5' } }}\n      />\n      <Radio\n        {...controlProps('3')}\n        sx={{ color: '#BEDBB0', '&.Mui-checked': { color: '#BEDBB0' } }}\n      />\n      <Radio\n        {...controlProps('0')}\n        sx={{ color: 'grey', '&.Mui-checked': { color: 'grey' } }}\n      />\n    </div>\n  );\n}\n","import styled from \"@emotion/styled\";\n\nexport const DropDawnBtn = styled.div`\n  outline: none;\n  background-color: transparent;\n  border: none;\n  transition: all 0.3s ease-in-out;\n  :hover,\n  :focus {\n    transform: translateY(5px);\n  }\n`;\nexport const DropDownSVG = styled.svg`\n  stroke: var(--default-screen-page-link-color);\n`;\n","import React from 'react'\nimport sprite from '../../../assets/images/sprite.svg';\nimport { DropDawnBtn, DropDownSVG } from './DropDownIcon.styled';\n\nconst DropDownIcon = ({onClick}) => {\n  return (\n    <div>\n      <DropDawnBtn id={'date-picker'} onClick={onClick}>\n        <DropDownSVG width=\"18\" height=\"18\">\n          <use href={sprite + '#icon-drop-down'} />\n        </DropDownSVG>\n      </DropDawnBtn>\n    </div>\n  );\n}\n\nexport default DropDownIcon\n","import { Popover } from '@mui/material';\nimport React from 'react';\n\nconst PopupStyles = {\n  '.MuiPaper-root': {\n    backgroundColor: '#1F1F1F',\n    borderRadius: '8px',\n  },\n};\n\nconst Popup = ({ anchorEl, open, onClose, children }) => {\n  return (\n    <Popover\n      sx={PopupStyles}\n      anchorEl={anchorEl}\n      open={open}\n      onClose={onClose}\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'left',\n      }}\n      transformOrigin={{\n        vertical: 'top',\n        horizontal: 'left',\n      }}\n    >\n      {children}\n    </Popover>\n  );\n};\n\nexport default Popup;\n","import { DateCalendar } from '@mui/x-date-pickers/DateCalendar';\nimport styled from '@emotion/styled';\n\nexport const DateCalendarStyled = styled(DateCalendar)`\n  .MuiDateCalendar-root {\n    font-family: 'Poppins';\n    background: 'var(--primary-bg-color)';\n    color: 'var(--primary-text-color)';\n  }\n`;\n\nexport const DatePickerStyles = {\n  '.MuiTypography-root': {\n    width: '24px',\n    m: '5px',\n    fontSize: '14px',\n    fontWeight: 500,\n    fontFamily: 'Poppins',\n    color: 'var(--secondary-text-color)',\n  },\n  '.MuiPickersCalendarHeader-label': {\n    fontSize: '14px',\n    fontWeight: 600,\n    fontFamily: 'Poppins',\n    color: 'var(--primary-text-color)',\n  },\n  '.MuiDateCalendar-root': {\n    width: '235px',\n  },\n  '.MuiPaper-root': {\n    backgroundColor: 'var(--primary-bg-color)',\n  },\n  '.MuiYearCalendar-root': {\n    width: '265px',\n  },\n  '.MuiPickersDay-root': {\n    color: 'var(--primary-text-color)',\n  },\n  '.MuiButtonBase-root': {\n    width: '24px',\n    height: '24px',\n    m: '5px',\n    color: 'var(--primary-text-color)',\n  },\n\n  '.MuiPickersArrowSwitcher-spacer': {\n    width: '0px',\n  },\n  '.MuiPickersFadeTransitionGroup-root': {\n    overflow: 'hidden',\n  },\n  '.MuiButtonBase-root:hover': {\n    backgroundColor: 'var(--default-screen-page-link-color)',\n    color: 'var(--primary-bg-color)',\n  },\n  '.MuiPickersYear-yearButton.Mui-selected': {\n    backgroundColor: 'var(--button-bg-color)',\n    color: 'var(--primary-bg-color)',\n  },\n  '.MuiPickersYear-yearButton:hover': {\n    backgroundColor: 'var(--button-bg-color)',\n    color: 'var(--primary-bg-color)',\n  },\n  '.MuiPickersDay-today': {\n    backgroundColor: 'var(--button-bg-color)',\n    color: 'var(--primary-bg-color)',\n    border: '1px solid var(--button-bg-color)',\n  },\n  '.MuiPickersDay-dayOutsideMonth': {\n    fontWeight: 400,\n    color: 'rgba(255, 255, 255, 0.18)',\n  },\n  '.MuiButtonBase-root.Mui-disabled': {\n    fontWeight: 400,\n    color: 'rgba(255, 255, 255, 0.18)',\n  },\n  '.css-qa7bje-MuiButtonBase-root-MuiPickersDay-root.Mui-disabled:not(.Mui-selected)':\n    {\n      fontWeight: 400,\n      color: 'rgba(255, 255, 255, 0.38)',\n    },\n  'MuiPickersYear-yearButton.Mui-selected': {\n    backgroundColor: 'var(--button-bg-color) !important',\n  },\n  'MuiPickersYear-yearButton.Mui-selected:hover': {\n    backgroundColor: 'var(--button-bg-color) !important',\n  },\n  width: '265px',\n  height: '295px',\n  backgroundColor: 'var(--primary-bg-color)',\n  border: '1px solid var(--default-screen-page-link-color)',\n  color: 'var(--primary-text-color)',\n  borderRadius: '8px',\n  fontStyle: 'normal',\n  fontWeight: 500,\n  lineHeight: 'normal',\n  letterSpacing: -0.36,\n  marginBottom: 0,\n};\n","import { DateCalendarStyled, DatePickerStyles } from \"./DatePicker.styled\";\n\n\nconst DatePickerCmponent = ({ onChange }) => {\n  return (\n    <div>\n      <DateCalendarStyled\n        sx={DatePickerStyles}\n        onChange={onChange}\n        format=\"LL\"\n        disablePast\n        showDaysOutsideCurrentMonth\n      />\n    </div>\n  );\n};\n\nexport default DatePickerCmponent;\n","import React, { useEffect, useState } from 'react';\nimport { useFormik } from 'formik';\nimport { format } from 'date-fns';\nimport * as Yup from 'yup';\nimport { API } from 'Services/API';\nimport formatISO from 'date-fns/formatISO';\n\nimport {\n  FormStyled,\n  TextareaStyled,\n  SubWrapper,\n  DateText,\n  DateWrapper,\n  SubTitle,\n  InputStyled,\n} from './AddCard.styled';\nimport ColorRadioButtons from 'components/ColorRadioButtons/ColorRadioButtons';\nimport { ButtonWithIcon } from 'components/Buttons/Button';\nimport DropDownIcon from 'components/Icons/DropDownIcon/DropDownIcon';\nimport Popup from 'components/Popup/Popup';\nimport DatePickerCmponent from 'components/DatePicker/DatePicker';\nimport ModalLayout from '../ModalLayout/ModalLayout';\n\n\nconst AddCard = ({\n  modalType,\n  close,\n  open,\n  handleClose,\n  columnId,\n  cardId = '',\n}) => {\n  const [date, setDate] = useState('');\n  const [dateValue, setDateValue] = useState('');\n  const [color, setColor] = useState('0');\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  const [addCards] = API.useAddCardMutation();\n\n  const handleDateClick = e => {\n    setAnchorEl(e.currentTarget);\n    setIsPopupOpen(true);\n  };\n\n  const onDateChange = e => {\n    const dateFns = format(e, 'LLLL d');\n    setDateValue(dateFns);\n    setDate(e);\n    setAnchorEl(null);\n    setIsPopupOpen(false);\n  };\n\n  const onColorChange = value => {\n    console.log('value :>> ', value);\n    setColor(value);\n  };\n\n  const handleSubmit = async (title, description) => {\n    const ISODate = formatISO(date, { representation: 'date' });\n\n    const cardData = {\n      title,\n      description,\n      priority: color,\n      deadline: ISODate,\n    };\n\n    try {\n      await addCards({columnId, cardData} );\n    } catch (error) {\n      console.log(error);\n    }\n    setDateValue('');\n    setDate('');\n    formik.handleReset();\n    close();\n  };\n\n  const validationSchema = Yup.object({\n    title: Yup.string()\n      .trim('The title cannot include leading and trailing spaces')\n      .strict(true)\n      .min(2, 'Must be more then 2 symbols')\n      .required('Title is required'),\n    description: Yup.string(),\n    color: Yup.string(),\n  });\n\n  const formik = useFormik({\n    initialValues: { title: '', description: '' },\n    onSubmit: ({title, description} ) =>\n      handleSubmit(title, description),\n    validationSchema,\n  });\n\n  useEffect(() => {\n    const currentDate = format(new Date(), \"'Today,' LLLL d\");\n    setDateValue(currentDate);\n  }, [open]);\n\n  return (\n    <ModalLayout title={modalType} open={open} handleClose={handleClose}>\n      <FormStyled onSubmit={formik.handleSubmit}>\n        <InputStyled\n          id=\"title\"\n          name=\"title\"\n          placeholder=\"Title\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.title}\n        />\n\n        <TextareaStyled\n          id=\"description\"\n          name=\"description\"\n          placeholder=\"Description\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.description}\n        />\n\n        <SubWrapper>\n          <SubTitle>Label color</SubTitle>\n          <ColorRadioButtons onColorChange={onColorChange} />\n        </SubWrapper>\n\n        <SubWrapper>\n          <SubTitle>Deadline</SubTitle>\n          <DateWrapper>\n            <DateText>{dateValue}</DateText>\n            <DropDownIcon onClick={handleDateClick} />\n          </DateWrapper>\n        </SubWrapper>\n\n        <ButtonWithIcon\n          title={modalType === 'Add card' ? 'Add' : 'Edit'}\n          type={'submit'}\n        />\n      </FormStyled>\n\n      <Popup\n        anchorEl={anchorEl}\n        open={isPopupOpen}\n        onClose={() => setIsPopupOpen(false)}\n      >\n        <DatePickerCmponent onChange={onDateChange} />\n      </Popup>\n    </ModalLayout>\n  );\n};\n\nexport default AddCard;\n","import { ButtonWithIcon } from '../Buttons/Button';\nimport styled from '@emotion/styled';\nimport { IconButton } from '@mui/material';\n\nexport const ColumnWrapper = styled.li`\n  display: flex;\n  flex-direction: column;\n  /* grid-template-rows: 56px auto 56px; */\n  align-items: left;\n  /* gap: 14px; */\n  width: 346px;\n  max-height: 80vh;\n  padding-right: 12px;\n  padding-bottom: 14px;\n  margin-right: 14px;\n`;\n\nexport const ColumnHeader = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  max-width: 334px;\n  height: 56px;\n  background-color: var(--secondary-bg-color);\n  color: var(--primary-text-color);\n  padding: 20px;\n  border-radius: 8px;\n  margin-bottom: 14px;\n`;\n\nexport const ColumnTitle = styled.h2`\n  display: flex;\n  font-family: 'Poppins';\n  font-weight: 600;\n  font-size: 14px;\n  margin: 0;\n`;\n\nexport const CardsList = styled.ul`\n  display: ${props => {\n    if (props.cols.length < 4) {\n      return `flex`;\n    }\n    return `grid`;\n  }};\n  flex-direction: column;\n  grid-template-rows: 155px;\n  width: 346px;\n  margin-bottom: 14px;\n  max-height: 60vh;\n  gap: 8px;\n  border-radius: 8px;\n  padding-right: 8px;\n  overflow-x: hidden;\n  overflow-y: ${props => {\n    if (props.cols.length < 4) {\n      return `hidden`;\n    }\n    return `scroll`;\n  }};\n  ::-webkit-scrollbar {\n    border-radius: 5px;\n    margin-left: 4px;\n    width: 8px;\n    background-color: rgba(255, 255, 255, 0.2);\n  }\n  ::-webkit-scrollbar-thumb {\n    background: #121212;\n    border-radius: 5px;\n  }\n  ::-webkit-scrollbar-thumb:hover {\n    background: #9dc888;\n  }\n`;\n\nexport const StyledIconButton = styled(IconButton)`\n  width: 18px;\n  height: 18px;\n  padding: 0;\n  margin: 4px;\n  &:hover svg {\n    stroke: #bedbb0;\n    stroke-opacity: 1;\n    transition: stroke 0.3s;\n  }\n`;\n\nexport const AddCardButton = styled(ButtonWithIcon)`\n  width: 334px;\n`;\n","import React, { useState } from 'react';\nimport { API } from 'Services/API';\nimport sprite from '../../assets/images/sprite.svg';\nimport TaskCard from '../TaskCard/TaskCard';\nimport AddCard from '../AddCard/AddCard';\nimport {\n  AddCardButton,\n  CardsList,\n  ColumnHeader,\n  ColumnTitle,\n  ColumnWrapper,\n  StyledIconButton,\n} from './Column.styled';\nimport AddColumn from 'components/AddColumn/AddColumn';\n\nconst Column = ({ columnTitle, columnId }) => {\nconst [deleteColumn] = API.useDeleteColumnByIdMutation();\n\n  const [isAddCardOpen, setIsAddCardOpen] = useState(false);\n  const [isEditColumnOpen, setIsEditColumnOpen] = useState(false);\n\n  const { data: cards, isLoading } = API.useGetAllCardsQuery(columnId, {\n    refetchOnMountOrArgChange: true,\n    skip: false,\n  });\n\n  const closeAddCard = () => setIsAddCardOpen(false);\n  const handleClick = () => setIsAddCardOpen(true);\n\n  const openEditColumn = () => setIsEditColumnOpen(true);\n  const closeEditColumn = () => setIsEditColumnOpen(false);\n  \n  const handleDeleteColumn = async () => {\n    try {\n        await deleteColumn( {columnId} );\n\n      } catch (error) {\n        console.log(error.message);\n      }\n  };\n\n  return (\n    !isLoading && (\n      <ColumnWrapper>\n        <ColumnHeader>\n          <ColumnTitle>{columnTitle}</ColumnTitle>\n          <div>\n            <StyledIconButton onClick={openEditColumn} aria-label=\"edit\">\n              <svg stroke=\"#fff\" strokeOpacity=\"0.5\" width=\"16\" height=\"16\">\n                <use href={sprite + '#icon-pencil'} />\n              </svg>\n            </StyledIconButton>\n            <StyledIconButton onClick={handleDeleteColumn} aria-label=\"remove\">\n              <svg stroke=\"#fff\" strokeOpacity=\"0.5\" width=\"16\" height=\"16\">\n                <use href={sprite + '#icon-trash'} />\n              </svg>\n            </StyledIconButton>\n          </div>\n        </ColumnHeader>\n        <CardsList cols={cards}>\n          {cards?.map(\n            ({ title, description, priority, deadline, _id: id }, index) => {\n              return (\n                <TaskCard\n                  key={id}\n                  title={title}\n                  description={description}\n                  priority={priority}\n                  deadline={deadline}\n                  id={id}\n                />\n              );\n            }\n          )}\n        </CardsList>\n\n        <AddCardButton onClick={handleClick} title={'Add card'} />\n\n        <AddCard\n          columnId={columnId}\n          modalType={'Add card'}\n          open={isAddCardOpen}\n          handleClose={closeAddCard}\n          close={closeAddCard}\n        />\n        <AddColumn\n          modalType={'Edit column'}\n          open={isEditColumnOpen}\n          columnId={columnId}\n          close={closeEditColumn}\n          titleValue={columnTitle}\n        />\n      </ColumnWrapper>\n    )\n  );\n};\n\nexport default Column;\n","import styled from '@emotion/styled';\nimport { Field as FormicField } from 'formik';\n\nexport const Div = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: baseline;\n  margin-bottom: 2px;\n`;\n\nexport const Button = styled.button`\n  color: rgba(255, 255, 255, 0.5);\n  font-size: 12px;\n  font-weight: 400;\n  letter-spacing: -0.24px;\n  text-decoration-line: underline;\n\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n`;\nexport const LabelGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  justify-content: center;\n  /* align-items: baseline; */\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: center;\n  /* justify-content: center; */\n  gap: 8px;\n  cursor: pointer;\n  color: var(--secondary-text-color);\n  font-size: 12px;\n  font-weight: 400;\n  letter-spacing: -0.24px;\n  padding-top: 1px;\n  padding-bottom: 1px;\n`;\n\nexport const Field = styled(FormicField)`\n  width: 14px;\n  height: 14px;\n  background-color: transparent;\n\n  display: grid;\n  place-content: center;\n\n  ::after {\n    content: '';\n    left: 6.4%;\n    position: absolute;\n    transform: translate(6px, 1px);\n    width: 12px;\n    height: 12px;\n    border: 2.5px solid black;\n    border-radius: 50%;\n    opacity: 0;\n  }\n  ::before {\n    content: '';\n    width: 14px;\n    height: 14px;\n    border-radius: 50%;\n    transition: 120ms transform ease-in-out;\n    background-color: ${props => props.color};\n  }\n\n  :checked::after {\n    opacity: 1;\n  }\n`;\n\n// export const Field = styled.div`\n//   width: 14px;\n//   height: 14px;\n//   border-radius: 14px;\n//   position: absolute;\n//   top: 50%;\n//   left: 50%;\n//   transform: translate(-50%, -50%);\n\n//   background-color: ${props =>\n//     props.color === 'without' && 'rgb(128, 128, 128)'};\n//   background-color: ${props =>\n//     props.color === 'low' && 'rgba(143, 161, 208, 1)'};\n//   background-color: ${props =>\n//     props.color === 'medium' && 'rgba(224, 156, 181, 1)'};\n//   background-color: ${props =>\n//     props.color === 'high' && 'rgba(190, 219, 176, 1)'};\n\n//   transition: all 250ms linear;\n\n//   &.active {\n//     width: 6px;\n//     height: 6px;\n//   }\n// `;\n\nexport const RadioWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`;\n","import { Radio, Typography } from '@mui/material';\n// import { LiStyled, UlBgStyled } from 'components/ModalLayout/Modal.styled';\nimport ModalLayout from 'components/ModalLayout/ModalLayout';\nimport { Form, Formik } from 'formik';\nimport { useState } from 'react';\n\n// import { arrBG } from '../ModalBoard/data';\nimport { Button, Div, Label, LabelGroup, RadioWrap } from './Filter.styled';\n// import {\n//   ImgStyled,\n//   LiStyled,\n//   UlBgStyled,\n// } from 'components/ModalBoard/ModalBoard.styled';\n\nconst labelStyle = {\n  color: 'var(--primary-text-color)',\n  fontSize: 14,\n  fontStyle: 'normal',\n  fontWeight: 500,\n  lineHeight: 'normal',\n  letterSpacing: -0.36,\n  // marginBottom: 24 / 8,\n};\n\nconst titleStyle = {\n  color: 'var(--primary-text-color)',\n  fontSize: 18,\n  fontFamily: 'Poppins',\n  fontWeight: '500',\n  wordWrap: 'break-word',\n  marginBottom: '14px',\n  paddingBottom: '14px',\n  borderBottom: '0.50px rgba(255, 255, 255, 0.10) solid',\n};\n\nexport const Filter = ({ open, onClose }) => {\n  // const [bgImgIndex, setBgImgIndex] = useState(null);\n  // const [backgroundURL, setBackgroundURL] = useState(arrBG[0]);\n  // const [backgroundIndex, setBackgroundIndex] = useState(0);\n\n  const [currentPrority, setCurrentPrority] = useState('');\n  const [isShowAllActive, setIsShowAllActive] = useState(false);\n  const initialValues = {\n    currentPrority: '',\n  };\n\n  const controlProps = item => ({\n    checked: currentPrority === item,\n    onChange: handleChange,\n    value: item,\n  });\n  const handleChange = event => {\n    const filter = event.target.value;\n    setCurrentPrority(filter);\n    // dispatch(setFilterCards(filter));\n    setIsShowAllActive(false);\n  };\n\n  const handleShowAll = () => {\n    setCurrentPrority('');\n    // dispatch(setFilterCards(''));\n    setIsShowAllActive(true);\n  };\n\n  const handleRadioClick = () => {\n    if (isShowAllActive) {\n      setIsShowAllActive(false);\n    }\n  };\n  console.log(currentPrority);\n\n  return (\n    <ModalLayout open={open} handleClose={onClose}>\n      <Typography variant=\"h2\" sx={titleStyle}>\n        Filters\n      </Typography>\n      <Formik initialValues={initialValues}>\n        <Form onChange={handleChange}>\n          <LabelGroup role=\"group\" aria-labelledby=\"my-radio-group\">\n            <Div>\n              <Typography variant=\"h2\" sx={labelStyle}>\n                Label Color\n              </Typography>\n              <Button\n                type=\"button\"\n                onClick={handleShowAll}\n                disabled={isShowAllActive}\n              >\n                Show all\n              </Button>\n            </Div>\n            <RadioWrap>\n              <Label>\n                <Radio\n                  onClick={handleRadioClick}\n                  checked={currentPrority === '0'}\n                  name=\"currentPrority\"\n                  {...controlProps('0')}\n                  size=\"small\"\n                  sx={{ color: 'grey', '&.Mui-checked': { color: 'grey' } }}\n                />\n                Without priority\n              </Label>\n              <Label>\n                <Radio\n                  onClick={handleRadioClick}\n                  checked={currentPrority === '1'}\n                  name=\"currentPrority\"\n                  {...controlProps('1')}\n                  size=\"small\"\n                  sx={{\n                    color: '#8FA1D0',\n                    '&.Mui-checked': { color: '#8FA1D0' },\n                  }}\n                />\n                Low\n              </Label>\n              <Label>\n                <Radio\n                  onClick={handleRadioClick}\n                  checked={currentPrority === '2'}\n                  name=\"currentPrority\"\n                  {...controlProps('2')}\n                  size=\"small\"\n                  sx={{\n                    color: '#E09CB5',\n                    '&.Mui-checked': { color: '#E09CB5' },\n                  }}\n                />\n                Medium\n              </Label>\n\n              <Label>\n                <Radio\n                  onClick={handleRadioClick}\n                  checked={currentPrority === '3'}\n                  name=\"currentPrority\"\n                  {...controlProps('3')}\n                  size=\"small\"\n                  sx={{\n                    color: '#BEDBB0',\n                    '&.Mui-checked': { color: '#BEDBB0' },\n                  }}\n                />\n                High\n              </Label>\n            </RadioWrap>\n          </LabelGroup>\n        </Form>\n      </Formik>\n    </ModalLayout>\n  );\n};\n","// import ModalLayout from 'components/ModalLayout/ModalLayout';\nimport sprite from '../../assets/images/sprite.svg';\nimport { useState } from 'react';\nimport { Filter } from './Filter';\n\nconst {\n  Container,\n  TitleDashBoard,\n  FilterButton,\n  TitleFilter,\n} = require('./HeaderDashboard.styled');\nexport const HeaderDashboard = ({ title }) => {\n  const [isOpen, setIsOpen] = useState();\n  const toggleModal = () => setIsOpen(!isOpen);\n\n  return (\n    <Container>\n      <TitleDashBoard>{title}</TitleDashBoard>\n      <FilterButton onClick={toggleModal}>\n        <svg\n          aria-label=\"filter icon\"\n          width=\"16\"\n          height=\"16\"\n          stroke=\"var(--secondary-text-color)\"\n        >\n          <use href={sprite + '#icon-filter'}></use>\n        </svg>\n        <TitleFilter>Filters</TitleFilter>\n      </FilterButton>\n      {isOpen && <Filter open={isOpen} onClose={toggleModal} />}\n    </Container>\n  );\n};\n","import styled from '@emotion/styled';\nimport { SIDEBARWIDTH } from 'components/Sidebar/SidebarCONSTANTS';\n\n\nexport const MainContainer = styled.main`\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  background-color: var(--primary-bg-color);\n  height: 100vh;\n  padding-top: 78px;\n  padding-left: 24px;\n  padding-right: 24px;\n  @media screen and (min-width: 0px) {\n    width: 100vw;\n  }\n  @media screen and (min-width: 767px) {\n  }\n  @media screen and (min-width: 1400px) {\n    width: calc(100vw - ${SIDEBARWIDTH}px);\n  }\n`;\n\nexport const ColumnsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 34px;\n  align-items: top;\n\n  ::-webkit-scrollbar {\n    border-radius: 5px;\n    margin-left: 4px;\n    height: 8px;\n    background-color: var(--screen-page-scrollbar-bg-color);\n  }\n  ::-webkit-scrollbar-thumb {\n    background-color: var(--screen-page-scrollbar-thumb-color);\n    border-radius: 5px;\n  }\n  ::-webkit-scrollbar-thumb:hover {\n    background-color: var(--screen-page-scrollbar-thumb-color-HOVER);\n  }\n  \n  @media screen and (min-width: 767px) {\n    display: grid;\n    grid-template-columns: ${props => {\n      return `repeat(${props.cols}, 334px)`;\n    }};\n    overflow-x: ${props => {\n      if (props.cols < 3) {\n        return `hidden`;\n      }\n      return `scroll`;\n    }};\n  }\n\n  @media screen and (min-width: 1400px) {\n    display: grid;\n    overflow-x: ${props => {\n      if (props.cols < 4) {\n        return `hidden`;\n      }\n      return `scroll`;\n    }};\n  }\n`;\n\nexport const screenSyles = {\n  pt: { 0: 9.25, 768: 11, 1440: 9.75 },\n  pb: { 0: 3, 768: 4, 1440: 1 },\n  pl: { 0: 2.5, 768: 4, 1440: 3 },\n  pr: { 0: 2.5, 768: 4, 1440: 3 },\n  height: '100vh',\n  width: { 0: '100vw', 1440: `calc(100vw - ${SIDEBARWIDTH}px)` },\n  flexGrow: 1,\n\n  backgroundColor: 'var(--primary-bg-color)',\n};\n\n","import React, { useState } from 'react';\nimport { ButtonAdd } from 'components/Buttons/Button';\nimport AddColumn from 'components/AddColumn/AddColumn';\nimport Column from '../../components/Column/Column';\nimport { HeaderDashboard } from 'components/HeaderDashboard/HeaderDashboard';\nimport { API } from 'Services/API';\nimport { useParams } from 'react-router-dom';\nimport { ColumnsWrapper, MainContainer } from './ScreenPage.styled';\n\nconst ScreensPage = () => {\n  const { boardId } = useParams();\n\n  const [isAddColumnOpen, setIsAddColumnOpen] = useState(false);\n  const { data } = API.useGetBoardByIdQuery(boardId, {\n    refetchOnMountOrArgChange: true,\n    skip: false,\n  });\n\n  const openAddColumn = () => setIsAddColumnOpen(true);\n  const closeAddColumn = () => setIsAddColumnOpen(false);\n\n  return (\n    <MainContainer>\n      <HeaderDashboard title={data?.title} />\n\n      <ColumnsWrapper cols={!data?.columns ? 1 : data?.columns?.length + 1}>\n        {data?.columns?.map(({ columnId, columnTitle }) => (\n          <Column\n            key={columnId}\n            columnTitle={columnTitle}\n            columnId={columnId}\n          />\n        ))}\n        <ButtonAdd onClick={openAddColumn}></ButtonAdd>\n      </ColumnsWrapper>\n\n      <AddColumn\n        modalType={'Add column'}\n        open={isAddColumnOpen}\n        boardId={boardId}\n        close={closeAddColumn}\n      />\n    </MainContainer>\n  );\n};\n\nexport default ScreensPage;\n"],"names":["API","useRegisterMutation","useLogInMutation","useLogOutMutation","useAvatarUserMutation","useGetCurrentUserQuery","useHelpUserMutation","useThemeUserMutation","useUpdateUserMutation","useGetBoardsQuery","useGetBoardByIdQuery","useAddBoardsMutation","useDeleteBoardByIdMutation","useUpdateBoardByIdMutation","useAddColumnMutation","useUpdateColumnByIdMutation","useDeleteColumnByIdMutation","useGetAllCardsQuery","useAddCardMutation","useUpdateCardByIdMutation","useDeleteCardByIdMutation","useUpdateCardColumnByIdMutation","ButtonWithIcon","_ref","title","onClick","type","_jsxs","Button","variant","disableElevation","sx","display","gap","color","fontFamily","alignItems","textTransform","borderRadius","letterSpacing","fontSize","background","lineHeight","fontWeight","fontStyle","width","height","children","_jsx","Box","justifyContent","stroke","href","sprite","ButtonWithoutIcon","_ref2","marginTop","ButtonAdd","_ref3","ButtonSidebar","_ref4","IconButton","Container","styled","_templateObject","_taggedTemplateLiteral","TitleDashBoard","_templateObject2","FilterButton","_templateObject3","TitleFilter","_templateObject4","ButtonClose","FormStyled","InputStyled","TransparentSVG","UlStyled","_templateObject5","UlBgStyled","_templateObject6","LiStyled","_templateObject7","ImgStyled","_templateObject8","LiIconsStyled","_templateObject9","ModalStyles","position","top","left","transform","border","padding","titleStyles","marginBottom","open","handleClose","adaptiveStyle","useMediaQuery","_Fragment","Modal","onClose","_objectSpread","Typography","style","SIDEBARWIDTH","SIDEBARMOBILEWIDTH","TextareaStyled","SubWrapper","DateWrapper","DateText","SubTitle","modalType","boardId","close","columnId","titleValue","_API$useAddColumnMuta","addColumn","_slicedToArray","_API$useUpdateColumnB","updateColumn","validationSchema","Yup","min","required","matches","formikTitle","formik","useFormik","initialValues","onSubmit","handleSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","console","log","t0","message","t1","handleReset","stop","_x","apply","arguments","ModalLayout","id","name","placeholder","onChange","handleChange","onBlur","handleBlur","value","values","getPriorityColor","priority","TypographyStylesTitle","TypographyStylesDescription","whitespace","whiteSpace","overflow","textOverflow","TypographyStylesPriority","flexDirection","lineHeigt","CardContentStyles","borderBottom","paddingBottom","ActionsBox","CardActionsStyled","Circle","props","StyledIconButton","CardStyles","Card","ListMenuStyles","MenuItem","description","deadline","moveCard","_useState","useState","_useState2","anchorEl","setAnchorEl","_API$useUpdateCardByI","updateCardById","_API$useDeleteCardByI","deleteCardById","dispatch","useDispatch","date","Date","concat","formattedDate","format","handleCloseMenu","handleMoveCard","newColumn","handleDeleteCard","response","sent","deleteCard","error","handleUpdateCard","_callee2","updatedData","_context2","setCardData","CardContent","component","CardActions","event","currentTarget","strokeOpacity","Menu","Boolean","PaperProps","backgroundColor","ColorRadioButtons","onColorChange","_React$useState","React","_React$useState2","selectedValue","setSelectedValue","target","controlProps","item","checked","Radio","DropDawnBtn","DropDownSVG","PopupStyles","Popover","anchorOrigin","vertical","horizontal","transformOrigin","DateCalendarStyled","DateCalendar","DatePickerStyles","m","disablePast","showDaysOutsideCurrentMonth","cardId","setDate","_useState3","_useState4","dateValue","setDateValue","_useState5","_useState6","setColor","_useState7","_useState8","_useState9","_useState10","isPopupOpen","setIsPopupOpen","_API$useAddCardMutati","addCards","ISODate","cardData","formatISO","representation","_x2","trim","strict","useEffect","currentDate","DropDownIcon","e","Popup","DatePickerCmponent","dateFns","ColumnWrapper","ColumnHeader","ColumnTitle","CardsList","cols","length","AddCardButton","columnTitle","_API$useDeleteColumnB","deleteColumn","isAddCardOpen","setIsAddCardOpen","isEditColumnOpen","setIsEditColumnOpen","_API$useGetAllCardsQu","refetchOnMountOrArgChange","skip","cards","data","isLoading","closeAddCard","handleDeleteColumn","map","index","_id","TaskCard","AddCard","AddColumn","Div","LabelGroup","Label","RadioWrap","FormicField","labelStyle","titleStyle","wordWrap","Filter","currentPrority","setCurrentPrority","isShowAllActive","setIsShowAllActive","filter","handleRadioClick","Formik","Form","role","disabled","size","_require","require","HeaderDashboard","isOpen","setIsOpen","toggleModal","MainContainer","ColumnsWrapper","_data$columns","_data$columns2","useParams","isAddColumnOpen","setIsAddColumnOpen","columns","Column"],"sourceRoot":""}