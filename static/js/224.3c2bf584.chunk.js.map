{"version":3,"file":"static/js/224.3c2bf584.chunk.js","mappings":"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","sources":["Services/API.js","components/Buttons/Button.jsx","components/HeaderDashboard/HeaderDashboard.styled.jsx","components/ModalBoard/ModalBoard.styled.jsx","components/ModalLayout/ModalLayout.jsx","components/Sidebar/SidebarCONSTANTS.js","components/AddCard/AddCard.styled.jsx","components/AddColumn/AddColumn.jsx","components/TaskCard/TaskCard.styled.jsx","components/TaskCard/TaskCard.jsx","components/ColorRadioButtons/ColorRadioButtons.jsx","components/Icons/DropDownIcon/DropDownIcon.styled.jsx","components/Icons/DropDownIcon/DropDownIcon.jsx","components/Popup/Popup.jsx","components/DatePicker/DatePicker.styled.jsx","components/DatePicker/DatePicker.jsx","components/AddCard/AddCard.jsx","components/Column/Column.styled.jsx","components/Column/Column.jsx","components/HeaderDashboard/Filter.styled.jsx","components/HeaderDashboard/Filter.jsx","components/HeaderDashboard/HeaderDashboard.jsx","pages/ScreensPage/ScreenPage.styled.jsx","pages/ScreensPage/ScreensPage.jsx"],"sourcesContent":["import {\n  useRegisterMutation,\n  useLogInMutation,\n  useLogOutMutation,\n  useGetCurrentUserQuery,\n  useUpdateUserMutation,\n  useThemeUserMutation,\n  useUpdateAvatarMutation,\n  useHelpUserMutation,\n  useGetBoardsQuery,\n  useGetBoardContentByIdQuery,\n  useGetBoardByIdQuery,\n  useAddBoardsMutation,\n  useDeleteBoardByIdMutation,\n  useUpdateBoardByIdMutation,\n  useAddColumnMutation,\n  useUpdateColumnByIdMutation,\n  useDeleteColumnByIdMutation,\n  useGetAllCardsQuery,\n  useAddCardMutation,\n  useUpdateCardByIdMutation,\n  useDeleteCardByIdMutation,\n  useUpdateCardColumnByIdMutation,\n} from './API_Component';\n\nexport const API = {\n  useRegisterMutation,\n  useLogInMutation,\n  useLogOutMutation,\n  useUpdateAvatarMutation,\n  useGetCurrentUserQuery,\n  useHelpUserMutation,\n  useThemeUserMutation,\n  useUpdateUserMutation,\n  useGetBoardsQuery,\n  useGetBoardContentByIdQuery,\n  useGetBoardByIdQuery,\n  useAddBoardsMutation,\n  useDeleteBoardByIdMutation,\n  useUpdateBoardByIdMutation,\n  useAddColumnMutation,\n  useUpdateColumnByIdMutation,\n  useDeleteColumnByIdMutation,\n  useGetAllCardsQuery,\n  useAddCardMutation,\n  useUpdateCardByIdMutation,\n  useDeleteCardByIdMutation,\n  useUpdateCardColumnByIdMutation,\n};\n","import * as React from 'react';\nimport Button from '@mui/material/Button';\n\nimport { Box, IconButton } from '@mui/material';\n\nimport sprite from '../../assets/images/sprite.svg';\n\n// Кнопка для модалок с иконкой\nexport const ButtonWithIcon = ({ title, onClick, type }) => {\n  return (\n    <Button\n      onClick={onClick}\n      type={type}\n      variant=\"contained\"\n      disableElevation\n      sx={{\n        display: 'flex',\n        gap: '8px',\n        color: '#161616',\n        fontFamily: 'Poppins, sans-serif',\n        alignItems: 'center',\n        textTransform: 'none',\n        borderRadius: '8px',\n        letterSpacing: '-0.02em',\n        fontSize: '14px',\n        // background: '#BEDBB0',\n        background: ' var(--button-bg-color)',\n        lineHeight: '21px',\n        fontWeight: '500',\n        fontStyle: 'normal',\n        width: '100%',\n        height: '56px',\n        '&:hover': {\n          // background: '#9DC888',\n          background: 'var( --button-bg-color-hover)',\n        },\n      }}\n    >\n      <Box\n        sx={{\n          width: '28px',\n          height: '28px',\n          background: 'var(--icon-plus-bg-color)',\n          borderRadius: '6px',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <svg width=\"14\" height=\"14\" stroke=\"var(--icon-plus-color)\">\n          <use href={sprite + '#icon-add'}></use>\n        </svg>\n      </Box>\n      {title}\n    </Button>\n  );\n};\n\n// Кнопка для модалок без иконки\nexport const ButtonWithoutIcon = ({ title, onClick, type }) => {\n  return (\n    <Button\n      type={type}\n      onClick={onClick}\n      disableElevation\n      sx={{\n        display: 'flex',\n        color: '#161616',\n        fontFamily: 'Poppins, sans-serif',\n        alignItems: 'center',\n        textTransform: 'none',\n        borderRadius: '8px',\n        marginTop: '24px',\n        letterSpacing: '-0.02em',\n        fontSize: '14px',\n        // background: '#BEDBB0',\n        background: 'var(--button-bg-color)',\n        lineHeight: '21px',\n        fontWeight: '500',\n        fontStyle: 'normal',\n        width: '100%',\n        height: '56px',\n        '&:hover': {\n          background: 'var( --button-bg-color-hover)',\n        },\n      }}\n    >\n      {title}\n    </Button>\n  );\n};\n\n// Кнопка для добавления колонки\nexport const ButtonAdd = ({ onClick }) => {\n  return (\n    <Button\n      onClick={onClick}\n      variant=\"contained\"\n      disableElevation\n      sx={{\n        display: 'flex',\n        gap: '8px',\n        color: 'var(--primary-text-color)',\n        fontFamily: 'Poppins, sans-serif',\n        alignItems: 'center',\n        textTransform: 'none',\n        borderRadius: '8px',\n        letterSpacing: '-0.02em',\n        fontSize: '14px',\n        background: 'var(--button-add-bg-color)',\n        lineHeight: '21px',\n        fontWeight: '500',\n        fontStyle: 'normal',\n        width: '334px',\n        height: '56px',\n        '&:hover': {\n          background: 'var(--button-add-bg-color)',\n        },\n      }}\n    >\n      <Box\n        sx={{\n          width: '28px',\n          height: '28px',\n          background: 'var(--button-add-box-color)',\n          borderRadius: '6px',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <svg width=\"14\" height=\"14\" stroke=\"var(--icon-add-color)\">\n          <use href={sprite + '#icon-add'}></use>\n        </svg>\n      </Box>\n      Add another column\n    </Button>\n  );\n};\n\n//Кнопка для Sidebar\nexport const ButtonSidebar = ({ onClick }) => {\n  return (\n    <IconButton\n      type=\"button\"\n      onClick={onClick}\n      sx={{\n        width: '40px',\n        height: '36px',\n        borderRadius: '6px',\n        background: 'var(--sidebar-icon-plus-bg-color)',\n\n        '&:hover, &:focus': {\n          background: 'var(--sidebar-icon-plus-bg-color-HOVER-FOCUS)',\n        },\n      }}\n    >\n      <svg width=\"20\" height=\"20\" stroke=\"var(--sidebar-icon-plus-color)\">\n        <use href={sprite + '#icon-add'}></use>\n      </svg>\n    </IconButton>\n  );\n};\n","import styled from '@emotion/styled';\nexport const Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  padding-bottom: 15px;\n  // padding: 14px 24px;\n  // background: #1f1f1f;\n  font-family: Poppins;\n\n  //   @media (min-width: 1280px) {\n  //       height: 48px;\n  //   };\n  //   @media (min-width: 768px) {\n  //       height: 80px;\n  //   };\n  //   @media (min-width: 375px) {\n  //       height: 134px;\n  //   };\n  //   @media (max-width: 374px) {\n  //       max-height: 134px;\n  //   };\n`;\n\nexport const TitleDashBoard = styled.p`\n  font-size: 18px;\n  font-weight: 500;\n  letter-spacing: -0.36px;\n  margin: 0;\n  color: var(--primary-text-color);\n`;\n\nexport const FilterButton = styled.button`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 2px;\n  background-color: transparent;\n  border: none;\n  outline: none;\n  opacity: 0.8;\n  cursor: pointer;\n`;\nexport const TitleFilter = styled.p`\n  font-size: 14px;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n  color: var(--secondary-text-color);\n  margin-left: 8px;\n  font-family: Poppins;\n`;\n","import styled from '@emotion/styled';\nimport { styled as MUI } from '@mui/material/styles';\n\nexport const FormStyled = MUI('form')({\n  display: 'flex',\n  flexDirection: 'column',\n  gap: '14px',\n});\n\nexport const ButtonClose = styled.button`\n  font-family: Poppins;\n  margin: 0;\n  padding: 0;\n  position: absolute;\n  right: 10px;\n  top: 10px;\n  width: 24px;\n  height: 24px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  background-color: transparent;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    transform: scale(1.2);\n    /* border: 1px solid #ffffff;\n    color: rgba(255, 255, 255, 1); */\n  }\n`;\n\nexport const InputStyled = styled.input`\n  font-family: Poppins;\n  resize: none;\n  color: var(--primary-text-color);\n  padding: 14px 14px;\n  background-color: transparent;\n  border: 1px solid rgba(190, 219, 176, 0.4);\n  border-radius: 8px;\n  margin-bottom: 10px;\n  :focus {\n    border: 1px solid #bedbb0;\n    outline: none;\n  }\n  ::placeholder {\n    color: var(--primary-text-color);\n    opacity: 30%;\n  }\n`;\n\nexport const TransparentSVG = styled.svg`\n  width: 18px;\n  height: 18px;\n  // stroke: rgba(255, 255, 255, 0.5);\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    stroke: #bedbb0;\n  }\n`;\n\nexport const UlStyled = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 6px;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  margin-bottom: 14px;\n`;\n\nexport const UlBgStyled = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 4px;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  margin-bottom: 14px;\n  max-width: 260px;\n`;\n\nexport const LiStyled = styled.li`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 28px;\n  height: 28px;\n  border-radius: 5px;\n\n  &:hover,\n  &:focus {\n    border: 1px solid #bedbb0;\n  }\n`;\n\nexport const ImgStyled = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  object-position: center;\n  cursor: pointer;\n`;\n\nexport const LiIconsStyled = styled.li`\n  display: flex;\n  width: 20px;\n  height: 20px;\n  align-items: center;\n  justify-content: center;\n\n  &:hover,\n  &:focus {\n    border-radius: 5px;\n    background-color: rgba(190, 219, 176, 0.2);\n  }\n`;\n","import { Modal, Box, Typography } from '@mui/material';\nimport sprite from '../../assets/images/sprite.svg';\nimport { ButtonClose } from 'components/ModalBoard/ModalBoard.styled';\n\n// import { useState } from 'react';\n\nconst modalStyles = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  borderRadius: 2,\n  border: '1px solid rgba(190, 219, 176, 0.50)',\n  background: 'var(--modal-bg-color)',\n  padding: 3,\n  fontFamily: 'Poppins',\n};\n\nconst titleStyles = {\n  color: 'var(--primary-text-color)',\n  fontSize: '18px',\n  fontStyle: 'normal',\n  fontWeight: 500,\n  fontFamily: 'Poppins',\n  lineHeight: 'normal',\n  letterSpacing: -0.36,\n  marginBottom: 3,\n};\n\nconst ModalLayout = ({ title, open, handleClose, children }) => {\n  return (\n    <>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-title\"\n        aria-describedby=\"modal-description\"\n      >\n        <Box sx={modalStyles}>\n          <Typography variant=\"h2\" sx={titleStyles}>\n            {title}\n          </Typography>\n          <ButtonClose type=\"button\" onClick={handleClose}>\n            <svg\n              style={{ stroke: 'var(--primary-text-color)' }}\n              width=\"18\"\n              height=\"18\"\n            >\n              <use href={sprite + '#icon-x-close'} />\n            </svg>\n          </ButtonClose>\n          {children}\n        </Box>\n      </Modal>\n    </>\n  );\n};\n\nexport default ModalLayout;\n","export const SIDEBARWIDTH = 260;\nexport const SIDEBARMOBILEWIDTH = 225;\n  \n\n\n\n","import styled from '@emotion/styled';\n\nexport const ComponentWrapper = styled.div`\n  padding: 0px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const FormStyled = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n  margin-bottom: 0px;\n`;\n\nexport const InputStyled = styled.input`\n  resize: none;\n  color: var(--primary-text-color);\n  padding: 14px 14px;\n  background-color: transparent;\n  border: 1px solid #bedbb0;\n  border-radius: 8px;\n  :focus {\n    border: 2px solid #bedbb0;\n    outline: none;\n  }\n  ::placeholder {\n    color: var(--primary-text-color);\n    opacity: 30%;\n  }\n`;\n\nexport const TextareaStyled = styled.textarea`\n  display: flex;\n  min-height: 155px;\n  color: var(--primary-text-color);\n  resize: none;\n  padding: 14px 14px;\n  background-color: transparent;\n  border: 1px solid #bedbb0;\n  border-radius: 8px;\n  text-align: top;\n  :focus {\n    border: 2px solid #bedbb0;\n    outline: none;\n  }\n  ::placeholder {\n    color: var(--primary-text-color);\n    opacity: 30%;\n  }\n`;\n\nexport const LabelColorBox = styled.div`\n  display: flex;\n  gap: 4px;\n`;\n\nexport const SubWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: left;\n  gap: 4px;\n`;\n\nexport const DateWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 4px;\n`;\n\nexport const DateText = styled.p`\n  color: var(--default-screen-page-link-color);\n  font-size: 14px;\n  margin: 0;\n`;\n\nexport const SubTitle = styled.p`\n  color: var(--primary-text-color);\n  font-size: 12px;\n  opacity: 50%;\n  margin: 0;\n`;\n","import React from 'react';\nimport { API } from 'Services/API';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { FormStyled, InputStyled } from '../AddCard/AddCard.styled';\nimport { ButtonWithIcon } from 'components/Buttons/Button';\nimport ModalLayout from '../ModalLayout/ModalLayout';\n\nconst AddColumn = ({\n  open,\n  modalType,\n  boardId,\n  close,\n  columnId,\n  titleValue,\n}) => {\n  const [addColumn] = API.useAddColumnMutation();\n  const [updateColumn] = API.useUpdateColumnByIdMutation();\n\n  const validationSchema = Yup.object({\n    title: Yup.string()\n      .min(2, 'Must be more then 2 symbols')\n      .required('Title is required')\n      .matches(\n        /^(\\w*)$/,\n        'Title may contain only letters, apostrophe, dash and spaces.'\n      ),\n  });\n\n  const formikTitle =\n    modalType === 'Add column' ? { title: '' } : { title: titleValue };\n\n  const formik = useFormik({\n    initialValues: formikTitle,\n    onSubmit: title => handleSubmit(title),\n    validationSchema,\n  });\n\n  const handleSubmit = async title => {\n    console.log('columnId :>> ', columnId);\n    if (modalType === 'Add column') {\n      try {\n        await addColumn({ boardId, title });\n        close();\n      } catch (error) {\n        console.log(error.message);\n      }\n    }\n    if (modalType === 'Edit column') {\n      try {\n        await updateColumn({ columnId, title });\n        close();\n      } catch (error) {\n        console.log(error.message);\n      }\n    }\n    formik.handleReset();\n  };\n\n  return (\n    <ModalLayout title={modalType} open={open} handleClose={close}>\n      <FormStyled onSubmit={formik.handleSubmit}>\n        <InputStyled\n          id=\"title\"\n          name=\"title\"\n          placeholder=\"Title\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.title}\n        />\n        <ButtonWithIcon\n          title={modalType === 'Add column' ? 'Add' : 'Edit'}\n          type={'submit'}\n        />\n      </FormStyled>\n    </ModalLayout>\n  );\n};\n\nexport default AddColumn;\n","import styled from '@emotion/styled';\nconst getPriorityColor = priority => {\n  switch (priority) {\n    case 3:\n      return '#BEDBB0';\n    case 1:\n      return '#8FA1D0';\n    case 2:\n      return '#E09CB5';\n    default:\n      return '#bababa';\n  }\n};\nexport const TypographyStylesTitle = {\n  color: '#FFF',\n  fontSize: '14px',\n  fontWeight: '600',\n  letterSpacing: '-0.28px',\n  marginBottom: '8px',\n};\nexport const TypographyStylesDescription = {\n  color: 'rgba(255, 255, 255, 0.50)',\n  fontSize: '12px',\n  fontWeight: '400',\n  letterSpacing: '-0.24px',\n  whitespace: 'nowrap',\n  lineHeight: '16px',\n  width: '290px' /* Задаємо фіксовану ширину, де текст буде обрізаний */,\n  whiteSpace: 'nowrap' /* Забороняємо перенесення тексту на новий рядок */,\n  overflow:\n    'hidden' /* Приховуємо будь-який текст, який не поміщається в обрізаному вікні */,\n  textOverflow: 'ellipsis',\n};\nexport const TypographyStylesPriority = {\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'start',\n  gap: '4px',\n  color: ' rgba(255, 255, 255, 0.50)',\n  fontFamily: 'Poppins',\n  fontSize: '8px',\n\n  fontWeight: '400',\n  lineHeigt: 'normal',\n  letterSpacing: '-0.16px',\n};\nexport const CardContentStyles = {\n  borderBottom: '1px solid rgba(255, 255, 255, 0.10)',\n  padding: '0px',\n  paddingBottom: '14px',\n  marginBottom: '14px',\n};\nexport const ActionsBox = {\n  display: 'flex',\n  alignItems: 'base-line',\n  justifyContent: 'center',\n  gap: '14px',\n};\nexport const CardActionsStyled = {\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n};\nexport const Circle = styled.div`\n  width: 12px;\n  height: 12px;\n  border-radius: 50%;\n  background-color: ${props => getPriorityColor(props.priority)};\n`;\nexport const CardStyles = styled.div`\n  width: 334px;\n  height: 154px;\n  padding-top: 14px;\n  padding-bottom: 14px;\n  padding-left: 24px;\n  padding-right: 20px;\n  background-color: #121212;\n  border-radius: 8px;\n  border-left: 4px solid ${props => getPriorityColor(props.priority)};\n`;\nexport default getPriorityColor;\n","import React from 'react';\nimport { format } from 'date-fns';\nimport { useState } from 'react';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport CardActions from '@mui/material/CardActions';\nimport { IconButton } from '@mui/material';\nimport MenuItem from '@mui/material/MenuItem';\nimport Menu from '@mui/material/Menu';\nimport Box from '@mui/material/Box';\nimport sprite from '../../assets/images/sprite.svg';\nimport { styled } from '@mui/material';\nimport getPriorityColor from './TaskCard.styled';\n\nimport { deleteCard, setCardData } from '../../redux/tasks/cardsAPISlice';\nimport { useDispatch } from 'react-redux';\nimport { API } from 'Services/API';\n\nimport {\n  TypographyStylesTitle,\n  TypographyStylesDescription,\n  TypographyStylesPriority,\n  CardContentStyles,\n  ActionsBox,\n  CardActionsStyled,\n  Circle,\n} from './TaskCard.styled';\nconst StyledIconButton = styled(IconButton)`\n  &:hover svg {\n    stroke: #bedbb0;\n    stroke-opacity: 1;\n    transition: stroke 0.3s;\n  }\n`;\n\nconst CardStyles = styled(Card)`\n  width: 334px;\n  height: 154px;\n  padding-top: 14px;\n  padding-bottom: 14px;\n  padding-left: 24px;\n  padding-right: 20px;\n  background-color: #121212;\n  border-radius: 8px;\n  border-left: 4px solid ${props => getPriorityColor(props.priority)};\n`;\n\nconst ListMenuStyles = styled(MenuItem)`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  color: rgba(255, 255, 255, 0.5);\n  font-family: 'Poppins';\n  font-size: 14px;\n\n  font-weight: 400px;\n\n  &:hover {\n    color: #bedbb0;\n  }\n  &:hover svg {\n    stroke: #bedbb0;\n    stroke-opacity: 1;\n    transition: stroke 0.3s;\n  }\n`;\nfunction TaskCard({ title, description, priority, deadline, moveCard, id }) {\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [updateCardById] = API.useUpdateCardByIdMutation();\n  const [deleteCardById] = API.useDeleteCardByIdMutation();\n  const dispatch = useDispatch();\n\n  const date = new Date(`${deadline}`);\n  const formattedDate = format(date, 'dd/MM/yyyy');\n\n  const handleOpenMenu = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleCloseMenu = () => {\n    setAnchorEl(null);\n  };\n\n  const handleMoveCard = newColumn => {\n    handleCloseMenu();\n    moveCard(newColumn);\n  };\n  const handleDeleteCard = async () => {\n    try {\n      const response = await deleteCardById({ id });\n      dispatch(deleteCard(response));\n    } catch (error) {\n      console.error('Error deleting card:', error);\n    }\n  };\n\n  const handleUpdateCard = async () => {\n    try {\n      const updatedData = {\n        title,\n        description,\n        priority,\n        deadline,\n\n        /* об'єкт з оновленими даними картки */\n      };\n      const response = await updateCardById({ id, updatedData });\n      dispatch(setCardData(response));\n    } catch (error) {\n      console.error('Error updating card:', error);\n    }\n  };\n\n  return (\n    <CardStyles priority={priority}>\n      <CardContent sx={CardContentStyles}>\n        <Typography sx={TypographyStylesTitle} variant=\"h4\" component=\"div\">\n          Заголовок картки {title}\n        </Typography>\n        <Typography sx={TypographyStylesDescription} variant=\"body2\">\n          Текст або вміст картки буде тут. {description}\n        </Typography>\n      </CardContent>\n      <CardActions sx={CardActionsStyled}>\n        <Box sx={ActionsBox}>\n          <Typography sx={TypographyStylesPriority} variant=\"body2\">\n            Priority:\n            <Circle priority={priority} />\n            <Typography variant=\"subText\">{priority}</Typography>\n          </Typography>\n          <Typography sx={TypographyStylesPriority} variant=\"body2\">\n            Deadline:\n            <Box\n              sx={{\n                width: '14px',\n                height: '14px',\n                color: '#fff',\n                fontFamily: 'Poppins',\n                fontSize: '10px',\n                fontStyle: 'normal',\n                fontWeight: 400,\n                lineHeight: 'normal',\n                letterSpacing: '-0.2px',\n              }}\n            >\n              {' '}\n              {formattedDate}\n            </Box>\n          </Typography>\n        </Box>\n        <Box>\n          <StyledIconButton onClick={handleOpenMenu} aria-label=\"next-colomn\">\n            <svg stroke=\"#fff\" strokeOpacity=\"0.5\" width=\"16\" height=\"16\">\n              <use href={sprite + '#icon-active'} />\n            </svg>\n          </StyledIconButton>\n          <StyledIconButton onClick={handleUpdateCard} aria-label=\"edit\">\n            <svg stroke=\"#fff\" strokeOpacity=\"0.5\" width=\"16\" height=\"16\">\n              <use href={sprite + '#icon-pencil'} />\n            </svg>\n          </StyledIconButton>\n          <StyledIconButton onClick={handleDeleteCard} aria-label=\"remove\">\n            <svg stroke=\"#fff\" strokeOpacity=\"0.5\" width=\"16\" height=\"16\">\n              <use href={sprite + '#icon-trash'} />\n            </svg>\n          </StyledIconButton>\n        </Box>\n      </CardActions>\n      <Menu\n        anchorEl={anchorEl}\n        open={Boolean(anchorEl)}\n        onClose={handleCloseMenu}\n        PaperProps={{\n          sx: {\n            backgroundColor: '#151515',\n            width: '135px',\n          },\n        }}\n      >\n        {/* List of columns to move the card */}\n        <ListMenuStyles onClick={() => handleMoveCard('Column 1')}>\n          {' '}\n          <Box> In progress </Box>\n          <Box>\n            {' '}\n            <svg stroke=\"#fff\" strokeOpacity=\"0.5\" width=\"16\" height=\"16\">\n              <use href={sprite + '#icon-active'} />\n            </svg>\n          </Box>\n        </ListMenuStyles>\n        <ListMenuStyles onClick={() => handleMoveCard('Column 2')}>\n          <Box> Done </Box>\n          <Box>\n            {' '}\n            <svg stroke=\"#fff\" strokeOpacity=\"0.5\" width=\"16\" height=\"16\">\n              <use href={sprite + '#icon-active'} />\n            </svg>\n          </Box>\n        </ListMenuStyles>\n      </Menu>\n    </CardStyles>\n  );\n}\n\nexport default TaskCard;\n","import * as React from 'react';\nimport Radio from '@mui/material/Radio';\n\nexport default function ColorRadioButtons({ onColorChange, value }) {\n  const [selectedValue, setSelectedValue] = React.useState('0');\n\n  const handleChange = event => {\n    setSelectedValue(event.target.value);\n    onColorChange(event.target.value);\n  };\n\n  const controlProps = item => ({\n    checked: selectedValue === item,\n    onChange: handleChange,\n    value: item,\n  });\n\n  return (\n    <div>\n      <Radio\n        {...controlProps('1')}\n        sx={{ color: '#8FA1D0', '&.Mui-checked': { color: '#8FA1D0' } }}\n      />\n      <Radio\n        {...controlProps('2')}\n        sx={{ color: '#E09CB5', '&.Mui-checked': { color: '#E09CB5' } }}\n      />\n      <Radio\n        {...controlProps('3')}\n        sx={{ color: '#BEDBB0', '&.Mui-checked': { color: '#BEDBB0' } }}\n      />\n      <Radio\n        {...controlProps('0')}\n        sx={{ color: 'grey', '&.Mui-checked': { color: 'grey' } }}\n      />\n    </div>\n  );\n}\n","import styled from \"@emotion/styled\";\n\nexport const DropDawnBtn = styled.div`\n  outline: none;\n  background-color: transparent;\n  border: none;\n  transition: all 0.3s ease-in-out;\n  :hover,\n  :focus {\n    transform: translateY(5px);\n  }\n`;\nexport const DropDownSVG = styled.svg`\n  stroke: var(--default-screen-page-link-color);\n`;\n","import React from 'react'\nimport sprite from '../../../assets/images/sprite.svg';\nimport { DropDawnBtn, DropDownSVG } from './DropDownIcon.styled';\n\nconst DropDownIcon = ({onClick}) => {\n  return (\n    <div>\n      <DropDawnBtn id={'date-picker'} onClick={onClick}>\n        <DropDownSVG width=\"18\" height=\"18\">\n          <use href={sprite + '#icon-drop-down'} />\n        </DropDownSVG>\n      </DropDawnBtn>\n    </div>\n  );\n}\n\nexport default DropDownIcon\n","import { Popover } from '@mui/material';\nimport React from 'react';\n\nconst PopupStyles = {\n  '.MuiPaper-root': {\n    backgroundColor: '#1F1F1F',\n    borderRadius: '8px',\n  },\n};\n\nconst Popup = ({ anchorEl, open, onClose, children }) => {\n  return (\n    <Popover\n      sx={PopupStyles}\n      anchorEl={anchorEl}\n      open={open}\n      onClose={onClose}\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'left',\n      }}\n      transformOrigin={{\n        vertical: 'top',\n        horizontal: 'left',\n      }}\n    >\n      {children}\n    </Popover>\n  );\n};\n\nexport default Popup;\n","import { DateCalendar } from '@mui/x-date-pickers/DateCalendar';\nimport styled from '@emotion/styled';\n\nexport const DateCalendarStyled = styled(DateCalendar)`\n  .MuiDateCalendar-root {\n    font-family: 'Poppins';\n    background: 'var(--primary-bg-color)';\n    color: 'var(--primary-text-color)';\n  }\n`;\n\nexport const DatePickerStyles = {\n  '.MuiTypography-root': {\n    width: '24px',\n    m: '5px',\n    fontSize: '14px',\n    fontWeight: 500,\n    fontFamily: 'Poppins',\n    color: 'var(--secondary-text-color)',\n  },\n  '.MuiPickersCalendarHeader-label': {\n    fontSize: '14px',\n    fontWeight: 600,\n    fontFamily: 'Poppins',\n    color: 'var(--primary-text-color)',\n  },\n  '.MuiDateCalendar-root': {\n    width: '235px',\n  },\n  '.MuiPaper-root': {\n    backgroundColor: 'var(--primary-bg-color)',\n  },\n  '.MuiYearCalendar-root': {\n    width: '265px',\n  },\n  '.MuiPickersDay-root': {\n    color: 'var(--primary-text-color)',\n  },\n  '.MuiButtonBase-root': {\n    width: '24px',\n    height: '24px',\n    m: '5px',\n    color: 'var(--primary-text-color)',\n  },\n\n  '.MuiPickersArrowSwitcher-spacer': {\n    width: '0px',\n  },\n  '.MuiPickersFadeTransitionGroup-root': {\n    overflow: 'hidden',\n  },\n  '.MuiButtonBase-root:hover': {\n    backgroundColor: 'var(--default-screen-page-link-color)',\n    color: 'var(--primary-bg-color)',\n  },\n  '.MuiPickersYear-yearButton.Mui-selected': {\n    backgroundColor: 'var(--button-bg-color)',\n    color: 'var(--primary-bg-color)',\n  },\n  '.MuiPickersYear-yearButton:hover': {\n    backgroundColor: 'var(--button-bg-color)',\n    color: 'var(--primary-bg-color)',\n  },\n  '.MuiPickersDay-today': {\n    backgroundColor: 'var(--button-bg-color)',\n    color: 'var(--primary-bg-color)',\n    border: '1px solid var(--button-bg-color)',\n  },\n  '.MuiPickersDay-dayOutsideMonth': {\n    fontWeight: 400,\n    color: 'rgba(255, 255, 255, 0.18)',\n  },\n  '.MuiButtonBase-root.Mui-disabled': {\n    fontWeight: 400,\n    color: 'rgba(255, 255, 255, 0.18)',\n  },\n  '.css-qa7bje-MuiButtonBase-root-MuiPickersDay-root.Mui-disabled:not(.Mui-selected)':\n    {\n      fontWeight: 400,\n      color: 'rgba(255, 255, 255, 0.38)',\n    },\n  'MuiPickersYear-yearButton.Mui-selected': {\n    backgroundColor: 'var(--button-bg-color) !important',\n  },\n  'MuiPickersYear-yearButton.Mui-selected:hover': {\n    backgroundColor: 'var(--button-bg-color) !important',\n  },\n  width: '265px',\n  height: '295px',\n  backgroundColor: 'var(--primary-bg-color)',\n  border: '1px solid var(--default-screen-page-link-color)',\n  color: 'var(--primary-text-color)',\n  borderRadius: '8px',\n  fontStyle: 'normal',\n  fontWeight: 500,\n  lineHeight: 'normal',\n  letterSpacing: -0.36,\n  marginBottom: 0,\n};\n","import { DateCalendarStyled, DatePickerStyles } from \"./DatePicker.styled\";\n\n\nconst DatePickerCmponent = ({ onChange }) => {\n  return (\n    <div>\n      <DateCalendarStyled\n        sx={DatePickerStyles}\n        onChange={onChange}\n        format=\"LL\"\n        disablePast\n        showDaysOutsideCurrentMonth\n      />\n    </div>\n  );\n};\n\nexport default DatePickerCmponent;\n","import React, { useEffect, useState } from 'react';\nimport { useFormik } from 'formik';\nimport { format } from 'date-fns';\nimport * as Yup from 'yup';\nimport { API } from 'Services/API';\nimport formatISO from 'date-fns/formatISO';\nimport Notiflix from 'notiflix';\n\nimport {\n  FormStyled,\n  TextareaStyled,\n  SubWrapper,\n  DateText,\n  DateWrapper,\n  SubTitle,\n  InputStyled,\n} from './AddCard.styled';\nimport ColorRadioButtons from 'components/ColorRadioButtons/ColorRadioButtons';\nimport { ButtonWithIcon } from 'components/Buttons/Button';\nimport DropDownIcon from 'components/Icons/DropDownIcon/DropDownIcon';\nimport Popup from 'components/Popup/Popup';\nimport DatePickerCmponent from 'components/DatePicker/DatePicker';\nimport ModalLayout from '../ModalLayout/ModalLayout';\n\nNotiflix.Notify.init({\n  success: {\n    background: 'var(--button-bg-color)',\n  },\n});\n\n\nconst AddCard = ({\n  modalType,\n  close,\n  open,\n  handleClose,\n  columnId,\n  cardId = '',\n}) => {\n  const [date, setDate] = useState('');\n  const [dateValue, setDateValue] = useState('');\n  const [color, setColor] = useState('0');\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  const [addCards] = API.useAddCardMutation();\n\n  const handleDateClick = e => {\n    setAnchorEl(e.currentTarget);\n    setIsPopupOpen(true);\n  };\n\n  const onDateChange = e => {\n    const dateFns = format(e, 'LLLL d');\n    setDateValue(dateFns);\n    setDate(e);\n    setAnchorEl(null);\n    setIsPopupOpen(false);\n  };\n\n  const onColorChange = value => {\n    console.log('value :>> ', value);\n    setColor(value);\n  };\n\n  const handleSubmit = async (title, description) => {\n    const ISODate = formatISO(date, { representation: 'date' });\n\n    const cardData = {\n      title,\n      description,\n      priority: color,\n      deadline: ISODate,\n    };\n\n    try {\n      await addCards({ columnId, cardData });\n\n      Notiflix.Notify.success('Your card successfully added');\n\n    } catch (error) {\n      if (error.status === 400) {\n        Notiflix.Notify.failure('All field must be filled in');\n      } else {\n        console.log('An error occurred:', error.data.message);\n      }\n    }\n    setDateValue('');\n    setDate('');\n    formik.handleReset();\n    close();\n  };\n\n  const validationSchema = Yup.object({\n    title: Yup.string()\n      .trim('The title cannot include leading and trailing spaces')\n      .strict(true)\n      .min(2, 'Must be more then 2 symbols')\n      .required('Title is required'),\n    description: Yup.string(),\n    color: Yup.string(),\n  });\n\n  const formik = useFormik({\n    initialValues: { title: '', description: '' },\n    onSubmit: ({ title, description }) => handleSubmit(title, description),\n    validationSchema,\n  });\n\n  useEffect(() => {\n    const currentDate = format(new Date(), \"'Today,' LLLL d\");\n    setDateValue(currentDate);\n  }, [open]);\n\n  return (\n    <ModalLayout title={modalType} open={open} handleClose={handleClose}>\n      <FormStyled onSubmit={formik.handleSubmit}>\n        <InputStyled\n          id=\"title\"\n          name=\"title\"\n          placeholder=\"Title\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.title}\n        />\n\n        <TextareaStyled\n          id=\"description\"\n          name=\"description\"\n          placeholder=\"Description\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.description}\n        />\n\n        <SubWrapper>\n          <SubTitle>Label color</SubTitle>\n          <ColorRadioButtons onColorChange={onColorChange} />\n        </SubWrapper>\n\n        <SubWrapper>\n          <SubTitle>Deadline</SubTitle>\n          <DateWrapper>\n            <DateText>{dateValue}</DateText>\n            <DropDownIcon onClick={handleDateClick} />\n          </DateWrapper>\n        </SubWrapper>\n\n        <ButtonWithIcon\n          title={modalType === 'Add card' ? 'Add' : 'Edit'}\n          type={'submit'}\n        />\n      </FormStyled>\n\n      <Popup\n        anchorEl={anchorEl}\n        open={isPopupOpen}\n        onClose={() => setIsPopupOpen(false)}\n      >\n        <DatePickerCmponent onChange={onDateChange} />\n      </Popup>\n    </ModalLayout>\n  );\n};\n\nexport default AddCard;\n","import { ButtonWithIcon } from '../Buttons/Button';\nimport styled from '@emotion/styled';\nimport { IconButton } from '@mui/material';\n\nexport const ColumnWrapper = styled.li`\n  display: flex;\n  flex-direction: column;\n  /* grid-template-rows: 56px auto 56px; */\n  align-items: left;\n  /* gap: 14px; */\n  width: 346px;\n  max-height: 100%;\n  padding-right: 12px;\n  padding-bottom: 14px;\n  margin-right: 14px;\n\n  @media screen and (min-width: 1400px) {\n    max-height: 80vh;\n  }\n`;\n\nexport const ColumnHeader = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  max-width: 334px;\n  height: 56px;\n  background-color: var(--secondary-bg-color);\n  color: var(--primary-text-color);\n  padding: 20px;\n  border-radius: 8px;\n  margin-bottom: 14px;\n`;\n\nexport const ColumnTitle = styled.h2`\n  display: flex;\n  font-family: 'Poppins';\n  font-weight: 600;\n  font-size: 14px;\n  margin: 0;\n`;\n\nexport const CardsList = styled.ul`\n  display: ${props => {\n    if (props.cols.length < 4) {\n      return `flex`;\n    }\n    return `grid`;\n  }};\n  flex-direction: column;\n  grid-template-rows: 155px;\n  width: 346px;\n  margin-bottom: 14px;\n  max-height: 60vh;\n  gap: 8px;\n  border-radius: 8px;\n  padding-right: 8px;\n  overflow-x: hidden;\n  overflow-y: ${props => {\n    if (props.cols.length < 4) {\n      return `hidden`;\n    }\n    return `scroll`;\n  }};\n  ::-webkit-scrollbar {\n    border-radius: 5px;\n    margin-left: 4px;\n    width: 8px;\n    background-color: rgba(255, 255, 255, 0.2);\n  }\n  ::-webkit-scrollbar-thumb {\n    background: #121212;\n    border-radius: 5px;\n  }\n  ::-webkit-scrollbar-thumb:hover {\n    background: #9dc888;\n  }\n`;\n\nexport const StyledIconButton = styled(IconButton)`\n  width: 18px;\n  height: 18px;\n  padding: 0;\n  margin: 4px;\n  &:hover svg {\n    stroke: #bedbb0;\n    stroke-opacity: 1;\n    transition: stroke 0.3s;\n  }\n`;\n\nexport const AddCardButton = styled(ButtonWithIcon)`\n  width: 334px;\n`;\n","import React, { useState } from 'react';\nimport { API } from 'Services/API';\nimport sprite from '../../assets/images/sprite.svg';\nimport TaskCard from '../TaskCard/TaskCard';\nimport AddCard from '../AddCard/AddCard';\nimport {\n  AddCardButton,\n  CardsList,\n  ColumnHeader,\n  ColumnTitle,\n  ColumnWrapper,\n  StyledIconButton,\n} from './Column.styled';\nimport AddColumn from 'components/AddColumn/AddColumn';\n\nconst Column = ({ columnTitle, columnId, cards }) => {\n  const [deleteColumn] = API.useDeleteColumnByIdMutation();\n\n  const [isAddCardOpen, setIsAddCardOpen] = useState(false);\n  const [isEditColumnOpen, setIsEditColumnOpen] = useState(false);\n\n  const closeAddCard = () => setIsAddCardOpen(false);\n  const handleClick = () => setIsAddCardOpen(true);\n\n  const openEditColumn = () => setIsEditColumnOpen(true);\n  const closeEditColumn = () => setIsEditColumnOpen(false);\n\n  const handleDeleteColumn = async () => {\n    try {\n      await deleteColumn({ columnId });\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  return (\n    <ColumnWrapper>\n      <ColumnHeader>\n        <ColumnTitle>{columnTitle}</ColumnTitle>\n        <div>\n          <StyledIconButton onClick={openEditColumn} aria-label=\"edit\">\n            <svg\n              stroke=\"var(--primary-text-color)\"\n              strokeOpacity=\"0.5\"\n              width=\"16\"\n              height=\"16\"\n            >\n              <use href={sprite + '#icon-pencil'} />\n            </svg>\n          </StyledIconButton>\n          <StyledIconButton onClick={handleDeleteColumn} aria-label=\"remove\">\n            <svg\n              stroke=\"var(--primary-text-color)\"\n              strokeOpacity=\"0.5\"\n              width=\"16\"\n              height=\"16\"\n            >\n              <use href={sprite + '#icon-trash'} />\n            </svg>\n          </StyledIconButton>\n        </div>\n      </ColumnHeader>\n      <CardsList cols={cards}>\n        {cards?.map(\n          ({ title, description, priority, deadline, _id: id }, index) => {\n            return (\n              <TaskCard\n                key={id}\n                title={title}\n                description={description}\n                priority={priority}\n                deadline={deadline}\n                id={id}\n              />\n            );\n          }\n        )}\n      </CardsList>\n\n      <AddCardButton onClick={handleClick} title={'Add card'} />\n\n      <AddCard\n        columnId={columnId}\n        modalType={'Add card'}\n        open={isAddCardOpen}\n        handleClose={closeAddCard}\n        close={closeAddCard}\n      />\n      <AddColumn\n        modalType={'Edit column'}\n        open={isEditColumnOpen}\n        columnId={columnId}\n        close={closeEditColumn}\n        titleValue={columnTitle}\n      />\n    </ColumnWrapper>\n  );\n};\n\nexport default Column;\n","import styled from '@emotion/styled';\nimport { Field as FormicField } from 'formik';\n\nexport const Div = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: baseline;\n  margin-bottom: 2px;\n`;\n\nexport const Button = styled.button`\n  color: rgba(255, 255, 255, 0.5);\n  font-size: 12px;\n  font-weight: 400;\n  letter-spacing: -0.24px;\n  text-decoration-line: underline;\n\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n`;\nexport const LabelGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  justify-content: center;\n  /* align-items: baseline; */\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: center;\n  /* justify-content: center; */\n  gap: 8px;\n  cursor: pointer;\n  color: var(--secondary-text-color);\n  font-size: 12px;\n  font-weight: 400;\n  letter-spacing: -0.24px;\n  padding-top: 1px;\n  padding-bottom: 1px;\n`;\n\nexport const Field = styled(FormicField)`\n  width: 14px;\n  height: 14px;\n  background-color: transparent;\n\n  display: grid;\n  place-content: center;\n\n  ::after {\n    content: '';\n    left: 6.4%;\n    position: absolute;\n    transform: translate(6px, 1px);\n    width: 12px;\n    height: 12px;\n    border: 2.5px solid black;\n    border-radius: 50%;\n    opacity: 0;\n  }\n  ::before {\n    content: '';\n    width: 14px;\n    height: 14px;\n    border-radius: 50%;\n    transition: 120ms transform ease-in-out;\n    background-color: ${props => props.color};\n  }\n\n  :checked::after {\n    opacity: 1;\n  }\n`;\n\n// export const Field = styled.div`\n//   width: 14px;\n//   height: 14px;\n//   border-radius: 14px;\n//   position: absolute;\n//   top: 50%;\n//   left: 50%;\n//   transform: translate(-50%, -50%);\n\n//   background-color: ${props =>\n//     props.color === 'without' && 'rgb(128, 128, 128)'};\n//   background-color: ${props =>\n//     props.color === 'low' && 'rgba(143, 161, 208, 1)'};\n//   background-color: ${props =>\n//     props.color === 'medium' && 'rgba(224, 156, 181, 1)'};\n//   background-color: ${props =>\n//     props.color === 'high' && 'rgba(190, 219, 176, 1)'};\n\n//   transition: all 250ms linear;\n\n//   &.active {\n//     width: 6px;\n//     height: 6px;\n//   }\n// `;\n\nexport const RadioWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`;\n","import { Radio, Typography } from '@mui/material';\n// import { LiStyled, UlBgStyled } from 'components/ModalLayout/Modal.styled';\nimport ModalLayout from 'components/ModalLayout/ModalLayout';\nimport { Form, Formik } from 'formik';\nimport { useState } from 'react';\n\n// import { arrBG } from '../ModalBoard/data';\nimport { Button, Div, Label, LabelGroup, RadioWrap } from './Filter.styled';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/boards/boardsAPISlice';\n// import {\n//   ImgStyled,\n//   LiStyled,\n//   UlBgStyled,\n// } from 'components/ModalBoard/ModalBoard.styled';\n\nconst labelStyle = {\n  color: 'var(--primary-text-color)',\n  fontSize: 14,\n  fontStyle: 'normal',\n  fontWeight: 500,\n  lineHeight: 'normal',\n  letterSpacing: -0.36,\n  // marginBottom: 24 / 8,\n};\n\nconst titleStyle = {\n  color: 'var(--primary-text-color)',\n  fontSize: 18,\n  fontFamily: 'Poppins',\n  fontWeight: '500',\n  wordWrap: 'break-word',\n  marginBottom: '14px',\n  paddingBottom: '14px',\n  borderBottom: '0.50px rgba(255, 255, 255, 0.10) solid',\n};\n\nexport const Filter = ({ filter, open, onClose }) => {\n  // const [bgImgIndex, setBgImgIndex] = useState(null);\n  // const [backgroundURL, setBackgroundURL] = useState(arrBG[0]);\n  // const [backgroundIndex, setBackgroundIndex] = useState(0);\n\n  const [currentPrority, setCurrentPrority] = useState('');\n  const [isShowAllActive, setIsShowAllActive] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const initialValues = {\n    currentPrority: '',\n  };\n\n  const controlProps = item => ({\n    checked: currentPrority === item,\n    onChange: handleChange,\n    value: item,\n  });\n  const handleChange = event => {\n    // const filter = event.target.value;\n    // filter(event.target.value);\n    dispatch(setFilter(event.target.value));\n    setCurrentPrority(event.target.value);\n    // dispatch(setFilterCards(filter));\n    setIsShowAllActive(false);\n  };\n\n  const handleShowAll = () => {\n    setCurrentPrority('');\n    // dispatch(setFilterCards(''));\n    setIsShowAllActive(true);\n  };\n\n  const handleRadioClick = () => {\n    if (isShowAllActive) {\n      setIsShowAllActive(false);\n    }\n  };\n  console.log(currentPrority);\n\n  return (\n    <ModalLayout open={open} handleClose={onClose}>\n      <Typography variant=\"h2\" sx={titleStyle}>\n        Filters\n      </Typography>\n      <Formik initialValues={initialValues}>\n        <Form onChange={handleChange}>\n          <LabelGroup role=\"group\" aria-labelledby=\"my-radio-group\">\n            <Div>\n              <Typography variant=\"h2\" sx={labelStyle}>\n                Label Color\n              </Typography>\n              <Button\n                type=\"button\"\n                onClick={handleShowAll}\n                disabled={isShowAllActive}\n              >\n                Show all\n              </Button>\n            </Div>\n            <RadioWrap>\n              <Label>\n                <Radio\n                  onClick={handleRadioClick}\n                  checked={currentPrority === '0'}\n                  name=\"currentPrority\"\n                  {...controlProps('0')}\n                  size=\"small\"\n                  sx={{ color: 'grey', '&.Mui-checked': { color: 'grey' } }}\n                />\n                Without priority\n              </Label>\n              <Label>\n                <Radio\n                  onClick={handleRadioClick}\n                  checked={currentPrority === '1'}\n                  name=\"currentPrority\"\n                  {...controlProps('1')}\n                  size=\"small\"\n                  sx={{\n                    color: '#8FA1D0',\n                    '&.Mui-checked': { color: '#8FA1D0' },\n                  }}\n                />\n                Low\n              </Label>\n              <Label>\n                <Radio\n                  onClick={handleRadioClick}\n                  checked={currentPrority === '2'}\n                  name=\"currentPrority\"\n                  {...controlProps('2')}\n                  size=\"small\"\n                  sx={{\n                    color: '#E09CB5',\n                    '&.Mui-checked': { color: '#E09CB5' },\n                  }}\n                />\n                Medium\n              </Label>\n\n              <Label>\n                <Radio\n                  onClick={handleRadioClick}\n                  checked={currentPrority === '3'}\n                  name=\"currentPrority\"\n                  {...controlProps('3')}\n                  size=\"small\"\n                  sx={{\n                    color: '#BEDBB0',\n                    '&.Mui-checked': { color: '#BEDBB0' },\n                  }}\n                />\n                High\n              </Label>\n            </RadioWrap>\n          </LabelGroup>\n        </Form>\n      </Formik>\n    </ModalLayout>\n  );\n};\n","// import ModalLayout from 'components/ModalLayout/ModalLayout';\nimport sprite from '../../assets/images/sprite.svg';\nimport { useState } from 'react';\nimport { Filter } from './Filter';\n\nconst {\n  Container,\n  TitleDashBoard,\n  FilterButton,\n  TitleFilter,\n} = require('./HeaderDashboard.styled');\nexport const HeaderDashboard = ({ title, filter }) => {\n  const [isOpen, setIsOpen] = useState();\n  const toggleModal = () => setIsOpen(!isOpen);\n\n  return (\n    <Container>\n      <TitleDashBoard>{title}</TitleDashBoard>\n      <FilterButton onClick={toggleModal}>\n        <svg\n          aria-label=\"filter icon\"\n          width=\"16\"\n          height=\"16\"\n          stroke=\"var(--secondary-text-color)\"\n        >\n          <use href={sprite + '#icon-filter'}></use>\n        </svg>\n        <TitleFilter>Filters</TitleFilter>\n      </FilterButton>\n      {isOpen && <Filter filter={filter} open={isOpen} onClose={toggleModal} />}\n    </Container>\n  );\n};\n","import styled from '@emotion/styled';\nimport { SIDEBARWIDTH } from 'components/Sidebar/SidebarCONSTANTS';\nimport bgData from './bg-data.json';\n\nexport const MainWrapper = styled.main`\n  min-height: 100vh;\n  background-color: var(--primary-bg-color);\n  @media screen and (min-width: 0px) {\n  }\n\n  @media screen and (min-width: 767px) {\n    height: 100vh;\n  }\n\n  @media screen and (min-width: 1400px) {\n    height: 100vh;\n    @media (-webkit-min-device-pixel-ratio: 1) {\n    }\n    background-image: url(${() => bgData[0].desktop[0].x1[1]});\n    background-repeat: no-repeat;\n    background-size: cover;\n  }\n`;\n\nexport const MainContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n\n  height: 100vh;\n  padding-top: 78px;\n  padding-left: 24px;\n  padding-right: 24px;\n  padding-bottom: 78px;\n  @media screen and (min-width: 0px) {\n    width: 100vw;\n    height: 100%;\n  }\n  @media screen and (min-width: 767px) {\n  }\n  @media screen and (min-width: 1400px) {\n    width: calc(100vw - ${SIDEBARWIDTH}px);\n  }\n`;\n\nexport const ColumnsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 34px;\n  align-items: top;\n  overflow: hidden;\n  ::-webkit-scrollbar {\n    border-radius: 5px;\n    margin-left: 4px;\n    height: 8px;\n    background-color: var(--screen-page-scrollbar-bg-color);\n  }\n  ::-webkit-scrollbar-thumb {\n    background-color: var(--screen-page-scrollbar-thumb-color);\n    border-radius: 5px;\n  }\n  ::-webkit-scrollbar-thumb:hover {\n    background-color: var(--screen-page-scrollbar-thumb-color-HOVER);\n  }\n\n  @media screen and (min-width: 767px) {\n    display: grid;\n    grid-template-columns: ${props => {\n      return `repeat(${props.cols}, 334px)`;\n    }};\n    overflow-x: ${props => {\n      if (props.cols > 3) {\n        return 'scroll';\n      }\n      return 'hidden';\n    }};\n  }\n\n  @media screen and (min-width: 1400px) {\n    display: grid;\n    overflow-x: ${props => {\n      if (props.cols > 4) {\n        return 'scroll';\n      }\n      return 'hidden';\n    }};\n  }\n`;\n\nexport const screenSyles = {\n  pt: { 0: 9.25, 768: 11, 1440: 9.75 },\n  pb: { 0: 3, 768: 4, 1440: 1 },\n  pl: { 0: 2.5, 768: 4, 1440: 3 },\n  pr: { 0: 2.5, 768: 4, 1440: 3 },\n  height: '100vh',\n  width: { 0: '100vw', 1440: `calc(100vw - ${SIDEBARWIDTH}px)` },\n  flexGrow: 1,\n\n  backgroundColor: 'var(--primary-bg-color)',\n};\n","import React, { useEffect, useState } from 'react';\nimport { ButtonAdd } from 'components/Buttons/Button';\nimport AddColumn from 'components/AddColumn/AddColumn';\nimport Column from '../../components/Column/Column';\nimport { HeaderDashboard } from 'components/HeaderDashboard/HeaderDashboard';\nimport { API } from 'Services/API';\nimport { useParams } from 'react-router-dom';\nimport {\n  MainWrapper,\n  ColumnsWrapper,\n  MainContainer,\n} from './ScreenPage.styled';\nimport { useDispatch, useSelector } from 'react-redux';\n\n// console.log('window :>> ', window.devicePixelRatio);\n\nconst ScreensPage = () => {\n  const { boardId } = useParams();\n  const [filterValue, setFilterValue] = useState('');\n  const stateFilter = useSelector(state => state.boards?.filter);\n\n//  console.log('filter :>> ', stateFilter);\n\n  const dispatch = useDispatch();\n\n  const reqData = {\n    id: boardId,\n    filter: filterValue,\n  };\n  const [isAddColumnOpen, setIsAddColumnOpen] = useState(false);\n\n  const { data } = API.useGetBoardContentByIdQuery(reqData, {\n    refetchOnMountOrArgChange: true,\n    skip: false,\n  });\n\n  // console.log('data :>> ', data);\n\n  const openAddColumn = () => setIsAddColumnOpen(true);\n  const closeAddColumn = () => setIsAddColumnOpen(false);\n\n  // const setBoardBgImage = () => { };\n  \n  useEffect(() => {\n    if (stateFilter === \"0\") {\n      setFilterValue('');\n    } else {\n      setFilterValue(stateFilter);\n    }\n  }, [dispatch, stateFilter]);\n\n  return (\n    <MainWrapper>\n      <MainContainer>\n        <HeaderDashboard filter={setFilterValue} title={data?.title} />\n\n        <ColumnsWrapper cols={!data?.content ? 1 : data?.content?.length + 1}>\n          {data?.content?.map(\n            ({ _id: columnId, title: columnTitle, cards }) => (\n              <Column\n                key={columnId}\n                columnTitle={columnTitle}\n                columnId={columnId}\n                cards={cards}\n              />\n            )\n          )}\n          <ButtonAdd onClick={openAddColumn}></ButtonAdd>\n        </ColumnsWrapper>\n\n        <AddColumn\n          modalType={'Add column'}\n          open={isAddColumnOpen}\n          boardId={boardId}\n          close={closeAddColumn}\n        />\n      </MainContainer>\n    </MainWrapper>\n  );\n};\n\nexport default ScreensPage;\n"],"names":["API","useRegisterMutation","useLogInMutation","useLogOutMutation","useUpdateAvatarMutation","useGetCurrentUserQuery","useHelpUserMutation","useThemeUserMutation","useUpdateUserMutation","useGetBoardsQuery","useGetBoardContentByIdQuery","useGetBoardByIdQuery","useAddBoardsMutation","useDeleteBoardByIdMutation","useUpdateBoardByIdMutation","useAddColumnMutation","useUpdateColumnByIdMutation","useDeleteColumnByIdMutation","useGetAllCardsQuery","useAddCardMutation","useUpdateCardByIdMutation","useDeleteCardByIdMutation","useUpdateCardColumnByIdMutation","ButtonWithIcon","_ref","title","onClick","type","_jsxs","Button","variant","disableElevation","sx","display","gap","color","fontFamily","alignItems","textTransform","borderRadius","letterSpacing","fontSize","background","lineHeight","fontWeight","fontStyle","width","height","children","_jsx","Box","justifyContent","stroke","href","sprite","ButtonWithoutIcon","_ref2","marginTop","ButtonAdd","_ref3","ButtonSidebar","_ref4","IconButton","Container","styled","_templateObject","_taggedTemplateLiteral","TitleDashBoard","_templateObject2","FilterButton","_templateObject3","TitleFilter","_templateObject4","FormStyled","MUI","flexDirection","ButtonClose","InputStyled","TransparentSVG","UlStyled","UlBgStyled","_templateObject5","ImgStyled","_templateObject6","_templateObject7","LiIconsStyled","_templateObject8","modalStyles","position","top","left","transform","border","padding","titleStyles","marginBottom","open","handleClose","_Fragment","Modal","onClose","Typography","style","SIDEBARWIDTH","SIDEBARMOBILEWIDTH","TextareaStyled","SubWrapper","DateWrapper","DateText","SubTitle","_templateObject9","modalType","boardId","close","columnId","titleValue","_API$useAddColumnMuta","addColumn","_slicedToArray","_API$useUpdateColumnB","updateColumn","validationSchema","Yup","min","required","matches","formikTitle","formik","useFormik","initialValues","onSubmit","handleSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","console","log","t0","message","t1","handleReset","stop","_x","apply","arguments","ModalLayout","id","name","placeholder","onChange","handleChange","onBlur","handleBlur","value","values","getPriorityColor","priority","TypographyStylesTitle","TypographyStylesDescription","whitespace","whiteSpace","overflow","textOverflow","TypographyStylesPriority","lineHeigt","CardContentStyles","borderBottom","paddingBottom","ActionsBox","CardActionsStyled","Circle","props","StyledIconButton","CardStyles","Card","ListMenuStyles","MenuItem","description","deadline","moveCard","_useState","useState","_useState2","anchorEl","setAnchorEl","_API$useUpdateCardByI","updateCardById","_API$useDeleteCardByI","deleteCardById","dispatch","useDispatch","date","Date","concat","formattedDate","format","handleCloseMenu","handleMoveCard","newColumn","handleDeleteCard","response","sent","deleteCard","error","handleUpdateCard","_callee2","updatedData","_context2","setCardData","CardContent","component","CardActions","event","currentTarget","strokeOpacity","Menu","Boolean","PaperProps","backgroundColor","ColorRadioButtons","onColorChange","_React$useState","React","_React$useState2","selectedValue","setSelectedValue","target","controlProps","item","checked","Radio","_objectSpread","DropDawnBtn","DropDownSVG","PopupStyles","Popover","anchorOrigin","vertical","horizontal","transformOrigin","DateCalendarStyled","DateCalendar","DatePickerStyles","m","disablePast","showDaysOutsideCurrentMonth","Notiflix","success","cardId","setDate","_useState3","_useState4","dateValue","setDateValue","_useState5","_useState6","setColor","_useState7","_useState8","_useState9","_useState10","isPopupOpen","setIsPopupOpen","_API$useAddCardMutati","addCards","ISODate","cardData","formatISO","representation","status","data","_x2","trim","strict","useEffect","currentDate","DropDownIcon","e","Popup","DatePickerCmponent","dateFns","ColumnWrapper","ColumnHeader","ColumnTitle","CardsList","cols","length","AddCardButton","columnTitle","cards","_API$useDeleteColumnB","deleteColumn","isAddCardOpen","setIsAddCardOpen","isEditColumnOpen","setIsEditColumnOpen","closeAddCard","handleDeleteColumn","map","index","_id","TaskCard","AddCard","AddColumn","Div","LabelGroup","Label","RadioWrap","FormicField","labelStyle","titleStyle","wordWrap","Filter","filter","currentPrority","setCurrentPrority","isShowAllActive","setIsShowAllActive","setFilter","handleRadioClick","Formik","Form","role","disabled","size","_require","require","HeaderDashboard","isOpen","setIsOpen","toggleModal","MainWrapper","bgData","MainContainer","ColumnsWrapper","_data$content","_data$content2","useParams","filterValue","setFilterValue","stateFilter","useSelector","state","_state$boards","boards","reqData","isAddColumnOpen","setIsAddColumnOpen","refetchOnMountOrArgChange","skip","content","Column"],"sourceRoot":""}