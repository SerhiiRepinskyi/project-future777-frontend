{"version":3,"file":"static/js/224.62f07dad.chunk.js","mappings":"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","sources":["Services/API.js","components/HeaderDashboard/HeaderDashboard.styled.jsx","components/ModalBoard/ModalBoard.styled.jsx","components/ModalLayout/ModalLayout.jsx","components/Sidebar/SidebarBoardItem-styled.jsx","components/Sidebar/SidebarBoardItemIcon.jsx","components/Sidebar/SidebarCONSTANTS.js","components/AddCard/AddCard.styled.jsx","components/AddColumn/AddColumn.jsx","components/ColorRadioButtons/ColorRadioButtons.jsx","components/Icons/DropDownIcon/DropDownIcon.styled.jsx","components/Icons/DropDownIcon/DropDownIcon.jsx","components/Popup/Popup.jsx","components/DatePicker/DatePicker.styled.jsx","components/DatePicker/DatePicker.jsx","components/AddCard/AddCard.jsx","components/TaskCard/TaskCard.styled.jsx","components/TaskCard/TaskCard.jsx","components/Column/Column.styled.jsx","components/Column/Column.jsx","components/HeaderDashboard/Filter.styled.jsx","components/HeaderDashboard/Filter.jsx","components/HeaderDashboard/HeaderDashboard.jsx","pages/ScreensPage/ScreenPage.styled.jsx","pages/ScreensPage/ScreensPage.jsx"],"sourcesContent":["import {\n  useRegisterMutation,\n  useLogInMutation,\n  useLogOutMutation,\n  useGetCurrentUserQuery,\n  useUpdateUserMutation,\n  useThemeUserMutation,\n  useUpdateAvatarMutation,\n  useHelpUserMutation,\n  useGetBoardsQuery,\n  useGetBoardContentByIdQuery,\n  useGetBoardByIdQuery,\n  useAddBoardsMutation,\n  useDeleteBoardByIdMutation,\n  useUpdateBoardByIdMutation,\n  useAddColumnMutation,\n  useUpdateColumnByIdMutation,\n  useDeleteColumnByIdMutation,\n  useGetAllCardsQuery,\n  useAddCardMutation,\n  useUpdateCardByIdMutation,\n  useDeleteCardByIdMutation,\n  useUpdateCardColumnByIdMutation,\n  useLoginGoogleUserMutation\n} from './API_Component';\n\nexport const API = {\n  useRegisterMutation,\n  useLogInMutation,\n  useLogOutMutation,\n  useUpdateAvatarMutation,\n  useGetCurrentUserQuery,\n  useHelpUserMutation,\n  useThemeUserMutation,\n  useUpdateUserMutation,\n  useGetBoardsQuery,\n  useGetBoardContentByIdQuery,\n  useGetBoardByIdQuery,\n  useAddBoardsMutation,\n  useDeleteBoardByIdMutation,\n  useUpdateBoardByIdMutation,\n  useAddColumnMutation,\n  useUpdateColumnByIdMutation,\n  useDeleteColumnByIdMutation,\n  useGetAllCardsQuery,\n  useAddCardMutation,\n  useUpdateCardByIdMutation,\n  useDeleteCardByIdMutation,\n  useUpdateCardColumnByIdMutation,\n  useLoginGoogleUserMutation\n};\n","import styled from '@emotion/styled';\nexport const Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  padding: 12px 24px;\n  margin-bottom: 12px;\n  background: rgba(255, 255, 255, 0.2);\n  font-family: Poppins;\n\n  //   @media (min-width: 1280px) {\n  //       height: 48px;\n  //   };\n  //   @media (min-width: 768px) {\n  //       height: 80px;\n  //   };\n  //   @media (min-width: 375px) {\n  //       height: 134px;\n  //   };\n  //   @media (max-width: 374px) {\n  //       max-height: 134px;\n  //   };\n`;\n\nexport const TitleContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 12px;\n`;\n\nexport const TitleDashBoard = styled.p`\n  font-size: 18px;\n  font-weight: 500;\n  letter-spacing: -0.36px;\n  margin: 0;\n  color: var(--primary-text-color);\n`;\n\nexport const FilterButton = styled.button`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 2px;\n  background-color: transparent;\n  border: none;\n  outline: none;\n  opacity: 0.8;\n  cursor: pointer;\n`;\nexport const TitleFilter = styled.p`\n  font-size: 14px;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n  color: var(--secondary-text-color);\n  margin-left: 8px;\n  font-family: Poppins;\n`;\n","import styled from '@emotion/styled';\nimport { styled as MUI } from '@mui/material/styles';\n\nexport const FormStyled = MUI('form')({\n  display: 'flex',\n  flexDirection: 'column',\n  gap: '14px',\n});\n\nexport const ButtonClose = styled.button`\n  font-family: Poppins;\n  margin: 0;\n  padding: 0;\n  position: absolute;\n  right: 10px;\n  top: 10px;\n  width: 24px;\n  height: 24px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  background-color: transparent;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    transform: scale(1.2);\n    /* border: 1px solid #ffffff;\n    color: rgba(255, 255, 255, 1); */\n  }\n`;\n\nexport const InputStyled = styled.input`\n  font-family: Poppins;\n  resize: none;\n  color: var(--primary-text-color);\n  padding: 14px 14px;\n  background-color: transparent;\n  border: 1px solid rgba(190, 219, 176, 0.4);\n  border-radius: 8px;\n  margin-bottom: 10px;\n  :focus {\n    border: 1px solid #bedbb0;\n    outline: none;\n  }\n  ::placeholder {\n    color: var(--primary-text-color);\n    opacity: 30%;\n  }\n`;\n\nexport const TransparentSVG = styled.svg`\n  width: 18px;\n  height: 18px;\n  // stroke: rgba(255, 255, 255, 0.5);\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    stroke: #bedbb0;\n  }\n`;\n\nexport const UlStyled = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 6px;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  margin-bottom: 14px;\n`;\n\nexport const UlBgStyled = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 4px;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  margin-bottom: 14px;\n  max-width: 260px;\n`;\n\nexport const LiStyled = styled.li`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 28px;\n  height: 28px;\n  border-radius: 5px;\n\n  &:hover,\n  &:focus {\n    border: 1px solid #bedbb0;\n  }\n`;\n\nexport const ImgStyled = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  object-position: center;\n  cursor: pointer;\n`;\n\nexport const LiIconsStyled = styled.li`\n  display: flex;\n  width: 20px;\n  height: 20px;\n  align-items: center;\n  justify-content: center;\n\n  &:hover,\n  &:focus {\n    border-radius: 5px;\n    background-color: rgba(190, 219, 176, 0.2);\n  }\n`;\n","import { Modal, Box, Typography } from '@mui/material';\nimport sprite from '../../assets/images/sprite.svg';\nimport { ButtonClose } from 'components/ModalBoard/ModalBoard.styled';\n\n// import { useState } from 'react';\n\nconst modalStyles = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  borderRadius: 2,\n  border: '1px solid rgba(190, 219, 176, 0.50)',\n  background: 'var(--modal-bg-color)',\n  padding: 3,\n  fontFamily: 'Poppins',\n};\n\nconst titleStyles = {\n  color: 'var(--primary-text-color)',\n  fontSize: '18px',\n  fontStyle: 'normal',\n  fontWeight: 500,\n  fontFamily: 'Poppins',\n  lineHeight: 'normal',\n  letterSpacing: -0.36,\n  marginBottom: 3,\n};\n\nconst ModalLayout = ({ title, open, handleClose, children }) => {\n  return (\n    <>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-title\"\n        aria-describedby=\"modal-description\"\n      >\n        <Box sx={modalStyles}>\n          <Typography variant=\"h2\" sx={titleStyles}>\n            {title}\n          </Typography>\n          <ButtonClose type=\"button\" onClick={handleClose}>\n            <svg\n              style={{ stroke: 'var(--primary-text-color)' }}\n              width=\"18\"\n              height=\"18\"\n            >\n              <use href={sprite + '#icon-x-close'} />\n            </svg>\n          </ButtonClose>\n          {children}\n        </Box>\n      </Modal>\n    </>\n  );\n};\n\nexport default ModalLayout;\n","import { styled } from '@mui/material/styles';\nimport { keyframes } from '@mui/system';\n\nconst slideAround = keyframes`\n  0% {transform: rotate(0deg)}\n  100% {transform: rotate(360deg)}\n`;\n\nexport const BoardItemWrap = styled('div')({\n  paddingTop: '20px',\n  paddingBottom: '20px',\n\n  width: '100%',\n  display: 'flex',\n  flexDirection: 'row',\n  gap: '8px',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n\n  overflow: 'hidden',\n});\n\nexport const BoardItemIcon = styled('svg')(({startAnimation})=> ({\n  width: '18px',\n  height: '18px',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  stroke: 'var(--sidebar-primary-text-color)',\n\n  animation: startAnimation ? `${slideAround} 1s  ease-out` : 'none',\n}));\n\nexport const BoardItemCurrentIcon = styled('svg')({\n  width: '16px',\n  height: '16px',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n});\n\nexport const BoardItemTitleWrap = styled('div')({\n  overflow: 'hidden',\n  whiteSpace: 'nowrap',\n});\n\nexport const BoardItemTitle = styled('p')(\n  ({ titleWidth, titleWrapWidth, current }) => {\n    const slideText = keyframes`\n    0% { transform: translateX(0px); }\n    100% { transform: translateX(${titleWrapWidth - titleWidth}px); }\n  `;\n\n    return {\n      margin: '0px',\n      color: 'var(--sidebar-primary-text-color)',\n      fontFamily: 'Poppins',\n      fontSize: '14px',\n      fontStyle: 'normal',\n      fontWeight: '500',\n      letterSpacing: '-0.28px',\n\n      animationName: titleWidth >= titleWrapWidth && current ? slideText : 'none',\n      animationDuration: `${titleWidth * 30}ms`,\n      animationTimingFunction: 'linear',\n      animationIterationCount: 'infinite',\n      animationDirection: 'alternate',\n    };\n  }\n);\n","import { useEffect, useState } from \"react\";\nimport { BoardItemIcon } from \"./SidebarBoardItem-styled\"\nimport sprite from '../../assets/images/sprite.svg';\n\n\nexport const SidebarBoardItemIcon = ({current, iconId}) => {\n\n    const [startAnimation, setStartAnimation] = useState(true);\n\n    useEffect(() => {\n        const randomNumber = Math.floor(Math.random() * (15000 - 7000 + 1)) + 7000;\n        const interval = setInterval(() => {\n          setStartAnimation(true);\n          setTimeout(() => {\n            setStartAnimation(false);\n          }, 1000);\n        }, randomNumber);\n    \n        return () => {\n          clearInterval(interval);\n        };\n      }, []);\n\n    return (\n        <BoardItemIcon\n        startAnimation={startAnimation}\n        sx={{ opacity: current ? 1 : 0.5 }}\n      >\n        <use href={sprite + iconId}></use>\n      </BoardItemIcon>\n    )\n}","export const SIDEBARWIDTH = 260;\nexport const SIDEBARMOBILEWIDTH = 225;\n  \n\n\n\n","import styled from '@emotion/styled';\n\nexport const ComponentWrapper = styled.div`\n  padding: 0px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const FormStyled = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 350px;\n  gap: 14px;\n  margin-bottom: 0px;\n`;\n\nexport const InputStyled = styled.input`\n  resize: none;\n  color: var(--primary-text-color);\n  padding: 14px 14px;\n  background-color: transparent;\n  border: 1px solid #bedbb0;\n  border-radius: 8px;\n  :focus {\n    border: 2px solid #bedbb0;\n    outline: none;\n  }\n  ::placeholder {\n    color: var(--primary-text-color);\n    opacity: 30%;\n  }\n`;\n\nexport const TextareaStyled = styled.textarea`\n  display: flex;\n  min-height: 155px;\n  color: var(--primary-text-color);\n  resize: none;\n  padding: 14px 14px;\n  background-color: transparent;\n  border: 1px solid #bedbb0;\n  border-radius: 8px;\n  text-align: top;\n  :focus {\n    border: 2px solid #bedbb0;\n    outline: none;\n  }\n  ::placeholder {\n    color: var(--primary-text-color);\n    opacity: 30%;\n  }\n`;\n\nexport const LabelColorBox = styled.div`\n  display: flex;\n  gap: 4px;\n`;\n\nexport const SubWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: left;\n  gap: 4px;\n`;\n\nexport const DateWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 4px;\n`;\n\nexport const DateText = styled.p`\n  color: var(--default-screen-page-link-color);\n  font-size: 14px;\n  margin: 0;\n`;\n\nexport const SubTitle = styled.p`\n  color: var(--primary-text-color);\n  font-size: 12px;\n  opacity: 50%;\n  margin: 0;\n`;\n","import React from 'react';\nimport { API } from 'Services/API';\nimport { ErrorMessage, useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { FormStyled, InputStyled } from '../AddCard/AddCard.styled';\nimport { ButtonWithIcon } from 'components/Buttons/Button';\nimport ModalLayout from '../ModalLayout/ModalLayout';\nimport Notiflix from 'notiflix';\n\nconst AddColumn = ({\n  open,\n  modalType,\n  boardId,\n  close,\n  columnId,\n  titleValue,\n}) => {\n  const [addColumn] = API.useAddColumnMutation();\n  const [updateColumn] = API.useUpdateColumnByIdMutation();\n\n  const validationSchema = Yup.object({\n    title: Yup.string()\n      .min(2, 'Must be more then 2 symbols')\n      .required('Title is required'),\n  });\n\n  const formikTitle =\n    modalType === 'Add column' ? { title: '' } : { title: titleValue };\n\n  const {\n    values,\n    errors,\n    touched,\n    handleBlur,\n    handleChange,\n    handleReset,\n    handleSubmit,\n    isValid,\n    dirty,\n  } = useFormik({\n    initialValues: formikTitle,\n    onSubmit: title => handleColumnSubmit(title),\n    validationSchema,\n    enableReinitialize: true,\n  });\n\n  const handleColumnSubmit = async title => {\n    if (modalType === 'Add column') {\n      try {\n        await addColumn({ boardId, title });\n      } catch (error) {\n        console.log(error.message);\n      }\n    }\n\n    if (modalType === 'Edit column') {\n      if (title.title === titleValue) {\n        return Notiflix.Notify.failure('Nothing changed');\n      }\n      \n      try {\n        await updateColumn({ columnId, title });\n        Notiflix.Notify.success('Your column successfully updated');\n        \n      } catch (error) {\n        console.log(error.message);\n      }\n    }\n    handleReset();\n    close();\n  };\n\n  return (\n    <ModalLayout title={modalType} open={open} handleClose={close}>\n      <FormStyled onSubmit={handleSubmit}>\n        <InputStyled\n          id=\"title\"\n          name=\"title\"\n          placeholder=\"Title\"\n          onChange={handleChange}\n          onBlur={handleBlur}\n          value={values.title}\n        />\n        {touched.title && errors.title && dirty && (\n          <ErrorMessage\n            name=\"title\"\n            render={msg => {\n              Notiflix.Notify.warning(` ${msg}`);\n            }}\n          />\n        )}\n        <ButtonWithIcon\n          title={modalType === 'Add column' ? 'Add' : 'Edit'}\n          type={'submit'}\n          disabled={!dirty || !isValid}\n        />\n      </FormStyled>\n    </ModalLayout>\n  );\n};\n\nexport default AddColumn;\n","import * as React from 'react';\nimport Radio from '@mui/material/Radio';\n\nexport default function ColorRadioButtons({ onColorChange, value = '0' }) {\n  const [selectedValue, setSelectedValue] = React.useState(value);\n\n  const handleChange = event => {\n    setSelectedValue(event.target.value);\n    onColorChange(event.target.value);\n  };\n\n  const controlProps = item => ({\n    checked: selectedValue === item,\n    onChange: handleChange,\n    value: item,\n  });\n\n  return (\n    <div>\n      <Radio\n        {...controlProps('1')}\n        sx={{ color: '#8FA1D0', '&.Mui-checked': { color: '#8FA1D0' } }}\n      />\n      <Radio\n        {...controlProps('2')}\n        sx={{ color: '#E09CB5', '&.Mui-checked': { color: '#E09CB5' } }}\n      />\n      <Radio\n        {...controlProps('3')}\n        sx={{ color: '#BEDBB0', '&.Mui-checked': { color: '#BEDBB0' } }}\n      />\n      <Radio\n        {...controlProps('0')}\n        sx={{ color: 'grey', '&.Mui-checked': { color: 'grey' } }}\n      />\n    </div>\n  );\n}\n","import styled from \"@emotion/styled\";\n\nexport const DropDawnBtn = styled.div`\n  outline: none;\n  background-color: transparent;\n  border: none;\n  transition: all 0.3s ease-in-out;\n  :hover,\n  :focus {\n    transform: translateY(5px);\n  }\n`;\nexport const DropDownSVG = styled.svg`\n  stroke: var(--default-screen-page-link-color);\n`;\n","import React from 'react'\nimport sprite from '../../../assets/images/sprite.svg';\nimport { DropDawnBtn, DropDownSVG } from './DropDownIcon.styled';\n\nconst DropDownIcon = ({onClick}) => {\n  return (\n    <div>\n      <DropDawnBtn id={'date-picker'} onClick={onClick}>\n        <DropDownSVG width=\"18\" height=\"18\">\n          <use href={sprite + '#icon-drop-down'} />\n        </DropDownSVG>\n      </DropDawnBtn>\n    </div>\n  );\n}\n\nexport default DropDownIcon\n","import { Popover } from '@mui/material';\nimport React from 'react';\n\nconst PopupStyles = {\n  '.MuiPaper-root': {\n    backgroundColor: '#1F1F1F',\n    borderRadius: '8px',\n  },\n};\n\nconst Popup = ({ anchorEl, open, onClose, children }) => {\n  return (\n    <Popover\n      sx={PopupStyles}\n      anchorEl={anchorEl}\n      open={open}\n      onClose={onClose}\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'left',\n      }}\n      transformOrigin={{\n        vertical: 'top',\n        horizontal: 'left',\n      }}\n    >\n      {children}\n    </Popover>\n  );\n};\n\nexport default Popup;\n","import { DateCalendar } from '@mui/x-date-pickers/DateCalendar';\nimport styled from '@emotion/styled';\n\nexport const DateCalendarStyled = styled(DateCalendar)`\n  .MuiDateCalendar-root {\n    font-family: 'Poppins';\n    background: 'var(--primary-bg-color)';\n    color: 'var(--primary-text-color)';\n  }\n`;\n\nexport const DatePickerStyles = {\n  '.MuiTypography-root': {\n    width: '24px',\n    m: '5px',\n    fontSize: '14px',\n    fontWeight: 500,\n    fontFamily: 'Poppins',\n    color: 'var(--secondary-text-color)',\n  },\n  '.MuiPickersCalendarHeader-label': {\n    fontSize: '14px',\n    fontWeight: 600,\n    fontFamily: 'Poppins',\n    color: 'var(--primary-text-color)',\n  },\n  '.MuiDateCalendar-root': {\n    width: '235px',\n  },\n  '.MuiPaper-root': {\n    backgroundColor: 'var(--primary-bg-color)',\n  },\n  '.MuiYearCalendar-root': {\n    width: '265px',\n  },\n  '.MuiPickersDay-root': {\n    color: 'var(--primary-text-color)',\n  },\n  '.MuiButtonBase-root': {\n    width: '24px',\n    height: '24px',\n    m: '5px',\n    color: 'var(--primary-text-color)',\n  },\n\n  '.MuiPickersArrowSwitcher-spacer': {\n    width: '0px',\n  },\n  '.MuiPickersFadeTransitionGroup-root': {\n    overflow: 'hidden',\n  },\n  '.MuiButtonBase-root:hover': {\n    backgroundColor: 'var(--default-screen-page-link-color)',\n    color: 'var(--primary-bg-color)',\n  },\n  '.MuiPickersYear-yearButton.Mui-selected': {\n    backgroundColor: 'var(--button-bg-color)',\n    color: 'var(--primary-bg-color)',\n  },\n  '.MuiPickersYear-yearButton:hover': {\n    backgroundColor: 'var(--button-bg-color)',\n    color: 'var(--primary-bg-color)',\n  },\n  '.MuiPickersDay-today': {\n    backgroundColor: 'var(--button-bg-color)',\n    color: 'var(--primary-bg-color)',\n    border: '1px solid var(--button-bg-color)',\n  },\n  '.MuiPickersDay-dayOutsideMonth': {\n    fontWeight: 400,\n    color: 'rgba(255, 255, 255, 0.18)',\n  },\n  '.MuiButtonBase-root.Mui-disabled': {\n    fontWeight: 400,\n    color: 'rgba(255, 255, 255, 0.18)',\n  },\n  '.css-qa7bje-MuiButtonBase-root-MuiPickersDay-root.Mui-disabled:not(.Mui-selected)':\n    {\n      fontWeight: 400,\n      color: 'rgba(255, 255, 255, 0.38)',\n    },\n  'MuiPickersYear-yearButton.Mui-selected': {\n    backgroundColor: 'var(--button-bg-color) !important',\n  },\n  'MuiPickersYear-yearButton.Mui-selected:hover': {\n    backgroundColor: 'var(--button-bg-color) !important',\n  },\n  width: '265px',\n  height: '295px',\n  backgroundColor: 'var(--primary-bg-color)',\n  border: '1px solid var(--default-screen-page-link-color)',\n  color: 'var(--primary-text-color)',\n  borderRadius: '8px',\n  fontStyle: 'normal',\n  fontWeight: 500,\n  lineHeight: 'normal',\n  letterSpacing: -0.36,\n  marginBottom: 0,\n};\n","import { DateCalendarStyled, DatePickerStyles } from \"./DatePicker.styled\";\n\n\nconst DatePickerCmponent = ({ onChange }) => {\n  return (\n    <div>\n      <DateCalendarStyled\n        sx={DatePickerStyles}\n        onChange={onChange}\n        format=\"LL\"\n        disablePast\n        showDaysOutsideCurrentMonth\n      />\n    </div>\n  );\n};\n\nexport default DatePickerCmponent;\n","import React, { useEffect, useState } from 'react';\nimport { useFormik } from 'formik';\nimport { format, parseISO } from 'date-fns';\nimport * as Yup from 'yup';\nimport { API } from 'Services/API';\nimport formatISO from 'date-fns/formatISO';\nimport Notiflix from 'notiflix';\n\nimport {\n  FormStyled,\n  TextareaStyled,\n  SubWrapper,\n  DateText,\n  DateWrapper,\n  SubTitle,\n  InputStyled,\n} from './AddCard.styled';\nimport ColorRadioButtons from 'components/ColorRadioButtons/ColorRadioButtons';\nimport { ButtonWithIcon } from 'components/Buttons/Button';\nimport DropDownIcon from 'components/Icons/DropDownIcon/DropDownIcon';\nimport Popup from 'components/Popup/Popup';\nimport DatePickerCmponent from 'components/DatePicker/DatePicker';\nimport ModalLayout from '../ModalLayout/ModalLayout';\n\nNotiflix.Notify.init({\n  success: {\n    background: 'var(--button-bg-color)',\n  },\n});\n\nconst AddCard = ({\n  modalType,\n  close,\n  open,\n  handleClose,\n  columnId,\n  cardId = '',\n  titleValue = '',\n  descrValue = '',\n  priorityValue = '0',\n  deadlineValue,\n}) => {\n  const [date, setDate] = useState('');\n  const [dateValue, setDateValue] = useState(\"\");\n  const [color, setColor] = useState(priorityValue.toString());\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  const [addCards] = API.useAddCardMutation();\n  const [updateCard] = API.useUpdateCardByIdMutation();\n\n  const handleDateClick = e => {\n    setAnchorEl(e.currentTarget);\n    setIsPopupOpen(true);\n  };\n\n  const onDateChange = e => {\n    console.log('Data :>> ', e);\n    const dateFns = format(e, 'LLLL d');\n    setDateValue(dateFns);\n    setDate(e);\n    setAnchorEl(null);\n    setIsPopupOpen(false);\n  };\n\n  const onColorChange = value => {\n    console.log('value :>> ', value);\n    setColor(value);\n  };\n\n  const handleSubmitForm = async (title, description) => {\n    if (modalType === 'Add card') {\n      if (!date) {\n        Notiflix.Notify.failure('Please select the date');\n      }\n\n      const ISODate = formatISO(date, { representation: 'date' });\n      console.log('ISODate :>> ', ISODate);\n\n      const cardData = {\n        title,\n        description,\n        priority: color,\n        deadline: ISODate,\n      };\n\n      try {\n        await addCards({ columnId, cardData });\n        Notiflix.Notify.success('Your card successfully added');\n      } catch (error) {\n        if (error.status === 400) {\n          return Notiflix.Notify.failure('All field must be filled in');\n        } else {\n          console.log('An error occurred:', error.data.message);\n        }\n      }\n    } else {\n      const ISODate = formatISO(date, { representation: 'date' });\n      const cardData = {\n        title,\n        description,\n        priority: color,\n        deadline: ISODate,\n      };\n\n      try {\n        await updateCard({ cardId, cardData });\n        Notiflix.Notify.success('Your card successfully updated');\n      } catch (error) {\n        if (error.status === 400) {\n          return Notiflix.Notify.failure('All field must be filled in');\n        } else {\n          console.log('An error occurred:', error.message);\n        }\n      }\n    }\n\n    setDateValue('');\n    setDate('');\n    handleReset();\n    close();\n  };\n\n  const validationSchema = Yup.object({\n    title: Yup.string()\n      .trim('The title cannot include leading and trailing spaces')\n      .strict(true)\n      .min(2, 'Must be more then 2 symbols')\n      .required('Title is required'),\n    description: Yup.string()\n      .min(5, 'Must be more then 5 symbols')\n      .required('Description is required'),\n  });\n\n  const cardInitialValues =\n    modalType === 'Add card'\n      ? { title: '', description: '' }\n      : { title: titleValue, description: descrValue };\n\n  const {\n    values,\n    handleBlur,\n    handleChange,\n    handleReset,\n    handleSubmit,\n    isValid,\n    dirty,\n  } = useFormik({\n    initialValues: cardInitialValues,\n    onSubmit: ({ title, description }) => handleSubmitForm(title, description),\n    validationSchema,\n    enableReinitialize: true,\n  });\n\n  useEffect(() => {\n    if (modalType === 'Add card') {\n      const currentDate = format(new Date(), \"'Today,' LLLL d\");\n      setDateValue(currentDate);\n    }\n    if (modalType === 'Edit card') {\n      console.log('deadlineValue :>> ', deadlineValue);\n      const dateISO = parseISO(deadlineValue, \"LLLL d\");\n      setDate(dateISO);\n      const currentDate = format(dateISO, \"LLLL d\");\n      setDateValue(currentDate);\n    }\n  }, [modalType, deadlineValue]);\n\n  return (\n    <ModalLayout title={modalType} open={open} handleClose={handleClose}>\n      <FormStyled onSubmit={handleSubmit}>\n        <InputStyled\n          id=\"title\"\n          name=\"title\"\n          placeholder=\"Title\"\n          onChange={handleChange}\n          onBlur={handleBlur}\n          value={values.title}\n        />\n\n        <TextareaStyled\n          id=\"description\"\n          name=\"description\"\n          placeholder=\"Description\"\n          onChange={handleChange}\n          onBlur={handleBlur}\n          value={values.description}\n        />\n\n        <SubWrapper>\n          <SubTitle>Label color</SubTitle>\n          <ColorRadioButtons value={color} onColorChange={onColorChange} />\n        </SubWrapper>\n\n        <SubWrapper>\n          <SubTitle>Deadline</SubTitle>\n          <DateWrapper>\n            <DateText>{dateValue}</DateText>\n            <DropDownIcon onClick={handleDateClick} />\n          </DateWrapper>\n        </SubWrapper>\n\n        <ButtonWithIcon\n          title={modalType === 'Add card' ? 'Add' : 'Edit'}\n          type={'submit'}\n          disabled={!dirty || !isValid}\n        />\n      </FormStyled>\n\n      <Popup\n        anchorEl={anchorEl}\n        open={isPopupOpen}\n        onClose={() => setIsPopupOpen(false)}\n      >\n        <DatePickerCmponent onChange={onDateChange} />\n      </Popup>\n    </ModalLayout>\n  );\n};\n\nexport default AddCard;\n","import styled from '@emotion/styled';\nimport { IconButton } from '@mui/material';\nimport { useState } from 'react';\n// import EllipsisText from 'react-ellipsis-text';\nimport MenuItem from '@mui/material/MenuItem';\nexport function getPriorityColor(priority) {\n  switch (priority) {\n    case 3:\n      return '#BEDBB0';\n    case 1:\n      return '#8FA1D0';\n    case 2:\n      return '#E09CB5';\n    default:\n      return '#bababa';\n  }\n}\nexport function getPriorityText(priority) {\n  switch (priority) {\n    case 3:\n      return 'High';\n    case 1:\n      return 'Low';\n    case 2:\n      return 'Medium';\n    default:\n      return 'Without';\n  }\n}\nexport const TypographyStylesTitle = {\n  color: 'var(--primary-text-color)',\n  fontSize: '14px',\n  fontWeight: '600',\n  letterSpacing: '-0.28px',\n  marginBottom: '8px',\n};\n\nexport const TypographyStylesPriority = {\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'start',\n  gap: '4px',\n  color: 'var( --secondary-text-color)',\n  fontFamily: 'Poppins',\n  fontSize: '8px',\n\n  fontWeight: '400',\n  lineHeigt: 'normal',\n  letterSpacing: '-0.16px',\n};\nexport const CardContentStyles = {\n  borderBottom: '1px solid var(--cards-underline)',\n  padding: '0px',\n  paddingBottom: '14px',\n  marginBottom: '14px',\n};\nexport const ActionsBox = {\n  display: 'flex',\n  alignItems: 'base-line',\n  justifyContent: 'center',\n  gap: '14px',\n};\nexport const CardActionsStyled = {\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n};\nexport const Circle = styled.div`\n  width: 12px;\n  height: 12px;\n  border-radius: 50%;\n  background-color: ${props => getPriorityColor(props.priority)};\n`;\nexport const TypographyText = styled.div`\n  color: var(--primary-text-color);\n\n  font-size: 10px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  letter-spacing: -0.2px;\n`;\nexport const CardStyles = styled.div`\n  width: 100%;\n  height: 154px;\n  padding-top: 14px;\n  padding-bottom: 14px;\n  padding-left: 24px;\n  padding-right: 20px;\n  background-color: var(--cards-bg-color);\n  border-radius: 8px;\n  border-left: 4px solid ${props => getPriorityColor(props.priority)};\n  overflow: auto;\n`;\nexport const StyledIconButton = styled(IconButton)`\n  &:hover svg {\n    stroke: var(--default-screen-page-link-color);\n    stroke-opacity: 1;\n    transition: stroke 0.3s;\n  }\n`;\nexport const ListMenuStyles = styled(MenuItem)`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  color: var(--secondary-text-color);\n  font-family: 'Poppins';\n  font-size: 14px;\n\n  font-weight: 400px;\n\n  &:hover {\n    color: var(--default-screen-page-link-color);\n  }\n  &:hover svg {\n    stroke: var(--default-screen-page-link-color);\n    stroke-opacity: 1;\n    transition: stroke 0.3s;\n  }\n`;\nconst TextContainer = styled.div`\n  max-height: ${props =>\n    props.expanded\n      ? 'none'\n      : '36px'}; /* Максимальна висота для двох рядків тексту */\n  overflow: hidden;\n  position: relative;\n`;\n\nconst Text = styled.div`\n  color: var(--secondary-text-color);\n  font-size: 12px;\n  font-weight: 400px;\n  padding-right: 18px;\n  line-height: 18px; /* Висота рядка */\n`;\n\nconst ReadMore = styled.div`\n  color: var(--secondary-text-color);\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  background-color: transparent;\n  padding: 0 5px;\n  font-weight: bold;\n  cursor: pointer;\n  display: ${props => (props.expanded ? 'none' : 'block')};\n  &:hover {\n    text-decoration: underline;\n  }\n`;\nconst ShowMoreButton = styled.button`\n  color: var(--primary-text-color);\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nexport const TruncatedText = ({ text }) => {\n  const [expanded, setExpanded] = useState(false);\n\n  const toggleExpanded = () => {\n    setExpanded(!expanded);\n  };\n\n  const resetText = () => {\n    setExpanded(false);\n  };\n\n  return (\n    <TextContainer expanded={expanded}>\n      <Text>{text}</Text>\n      {!expanded && (\n        <>\n          <ReadMore onClick={toggleExpanded}>...</ReadMore>\n        </>\n      )}\n      {expanded && <ShowMoreButton onClick={resetText}>Go back</ShowMoreButton>}\n    </TextContainer>\n  );\n};\n","import React from 'react';\nimport { format } from 'date-fns';\nimport { useState } from 'react';\nimport AddCard from 'components/AddCard/AddCard';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport CardActions from '@mui/material/CardActions';\n\nimport Menu from '@mui/material/Menu';\nimport Box from '@mui/material/Box';\nimport sprite from '../../assets/images/sprite.svg';\n\nimport { getPriorityText } from './TaskCard.styled';\n\nimport { deleteCard } from '../../redux/tasks/cardsAPISlice';\nimport { useDispatch } from 'react-redux';\nimport { API } from 'Services/API';\n\nimport {\n  TypographyStylesTitle,\n  TypographyStylesPriority,\n  CardContentStyles,\n  ActionsBox,\n  CardActionsStyled,\n  Circle,\n  TypographyText,\n  StyledIconButton,\n  CardStyles,\n  ListMenuStyles,\n  TruncatedText,\n} from './TaskCard.styled';\n\nfunction TaskCard({\n  title,\n  description,\n  priority,\n  deadline,\n  moveCard,\n  id,\n  columnId,\n}) {\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const [deleteCardById] = API.useDeleteCardByIdMutation();\n\n  const [isAddCardOpen, setIsAddCardOpen] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const closeAddCard = () => setIsAddCardOpen(false);\n  const handleClick = () => setIsAddCardOpen(true);\n\n  const handleOpenMenu = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleCloseMenu = () => {\n    setAnchorEl(null);\n  };\n\n  const handleMoveCard = newColumn => {\n    handleCloseMenu();\n    moveCard(newColumn);\n  };\n  const handleDeleteCard = async () => {\n    try {\n      const response = await deleteCardById(id);\n      dispatch(deleteCard(response));\n    } catch (error) {\n      console.error('Error deleting card:', error);\n    }\n  };\n\n  const date = new Date(`${deadline}`);\n  const formattedDate = format(date, 'dd/MM/yyyy');\n\n  const currentDate = new Date();\n  const formatteCurrentDate = format(currentDate, 'dd/MM/yyyy');\n  const isDeadlineToday = formattedDate === formatteCurrentDate;\n\n  return (\n    <CardStyles priority={priority}>\n      <CardContent sx={CardContentStyles}>\n        <Typography sx={TypographyStylesTitle} variant=\"h4\" component=\"div\">\n          {title}\n        </Typography>\n        <TruncatedText text={description} />\n      </CardContent>\n      <CardActions sx={CardActionsStyled}>\n        <Box sx={ActionsBox}>\n          <Box sx={TypographyStylesPriority} variant=\"body2\">\n            Priority:\n            <Box sx={{ display: 'flex', gap: '4px', alignItems: 'center' }}>\n              <Circle priority={priority} />\n              <TypographyText variant=\"subText\">\n                {getPriorityText(priority)}\n              </TypographyText>\n            </Box>\n          </Box>\n          <Box sx={TypographyStylesPriority} variant=\"body2\">\n            Deadline:\n            <Box\n              sx={{\n                width: '14px',\n                height: '14px',\n                color: 'var(--primary-text-color)',\n                fontFamily: 'Poppins',\n                fontSize: '10px',\n                fontStyle: 'normal',\n                fontWeight: 400,\n                lineHeight: 'normal',\n                letterSpacing: '-0.2px',\n              }}\n            >\n              {' '}\n              {formattedDate}\n            </Box>\n          </Box>\n        </Box>\n        <Box>\n          {isDeadlineToday && (\n            <StyledIconButton aria-label=\"deadline\">\n              <svg stroke=\"#BEDBB0\" width=\"16\" height=\"16\">\n                <use href={sprite + '#icon-bell'} />\n              </svg>\n            </StyledIconButton>\n          )}\n          <StyledIconButton onClick={handleOpenMenu} aria-label=\"next-colomn\">\n            <svg stroke=\"var(--cards-icon-color)\" width=\"16\" height=\"16\">\n              <use href={sprite + '#icon-active'} />\n            </svg>\n          </StyledIconButton>\n          <StyledIconButton\n            onClick={handleClick}\n            title={'Edit card'}\n            aria-label=\"edit\"\n          >\n            <svg stroke=\"var(--cards-icon-color)\" width=\"16\" height=\"16\">\n              <use href={sprite + '#icon-pencil'} />\n            </svg>\n          </StyledIconButton>\n          {isAddCardOpen ? (\n            <AddCard\n              columnId={columnId}\n              cardId={id}\n              modalType={'Edit card'}\n              open={isAddCardOpen}\n              handleClose={closeAddCard}\n              close={closeAddCard}\n              titleValue={title}\n              descrValue={description}\n              priorityValue={priority}\n              deadlineValue={deadline}\n            />\n          ) : (\n            <></>\n          )}\n          <StyledIconButton onClick={handleDeleteCard} aria-label=\"remove\">\n            <svg stroke=\"var(--cards-icon-color)\" width=\"16\" height=\"16\">\n              <use href={sprite + '#icon-trash'} />\n            </svg>\n          </StyledIconButton>\n        </Box>\n      </CardActions>\n      <Menu\n        anchorEl={anchorEl}\n        open={Boolean(anchorEl)}\n        onClose={handleCloseMenu}\n        PaperProps={{\n          sx: {\n            backgroundColor: '#151515',\n            width: '135px',\n          },\n        }}\n      >\n        {/* List of columns to move the card */}\n        <ListMenuStyles onClick={() => handleMoveCard('Column 1')}>\n          {' '}\n          <Box> In progress </Box>\n          <Box>\n            {' '}\n            <svg stroke=\"var(--cards-icon-color)\" width=\"16\" height=\"16\">\n              <use href={sprite + '#icon-active'} />\n            </svg>\n          </Box>\n        </ListMenuStyles>\n        <ListMenuStyles onClick={() => handleMoveCard('Column 2')}>\n          <Box> Done </Box>\n          <Box>\n            {' '}\n            <svg stroke=\"var(--cards-icon-color)\" width=\"16\" height=\"16\">\n              <use href={sprite + '#icon-active'} />\n            </svg>\n          </Box>\n        </ListMenuStyles>\n      </Menu>\n    </CardStyles>\n  );\n}\n\nexport default TaskCard;\n","import { ButtonWithIcon } from '../Buttons/Button';\nimport styled from '@emotion/styled';\nimport { IconButton } from '@mui/material';\n\nexport const ColumnWrapper = styled.li`\n  display: flex;\n  flex-direction: column;\n  /* grid-template-rows: 56px auto 56px; */\n  align-items: left;\n  /* gap: 14px; */\n  max-width: 346px;\n  max-height: 100%;\n  padding-right: 12px;\n  padding-bottom: 14px;\n  margin-right: 14px;\n  margin-bottom: auto;\n\n  @media screen and (min-width: 768px) {\n    width: 346px;\n    max-height: 80vh;\n    margin-bottom: auto;\n  }\n`;\n\nexport const ColumnHeader = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  max-width: 334px;\n  height: 56px;\n  background-color: var(--secondary-bg-color);\n  color: var(--primary-text-color);\n  padding: 20px;\n  border-radius: 8px;\n  margin-bottom: 14px;\n`;\n\nexport const ColumnTitle = styled.h2`\n  display: flex;\n  font-family: 'Poppins';\n  font-weight: 600;\n  font-size: 14px;\n  margin: 0;\n`;\n\nexport const CardsList = styled.ul`\n  display: ${props => {\n    if (props.cols.length < 4) {\n      return `flex`;\n    }\n    return `grid`;\n  }};\n  @media screen and (max-width: 0px) {\n    min-width: 280px;\n  }\n\n  flex-direction: column;\n  grid-template-rows: auto;\n  width: 100%;\n  margin-bottom: 14px;\n  max-height: 60vh;\n  gap: 8px;\n  border-radius: 8px;\n  padding-right: ${props => {\n    if (props.cols.length < 4) {\n      return `0`;\n    }\n    return `8px`;\n  }};\n  overflow-x: hidden;\n  overflow-y: ${props => {\n    if (props.cols.length < 4) {\n      return `hidden`;\n    }\n    return `scroll`;\n  }};\n  ::-webkit-scrollbar {\n    border-radius: 5px;\n    margin-left: 4px;\n    width: 8px;\n    background-color: var(--screen-page-scrollbar-bg-color);\n  }\n  ::-webkit-scrollbar-thumb {\n    background: var(--screen-page-scrollbar-thumb-color);\n    border-radius: 5px;\n  }\n  ::-webkit-scrollbar-thumb:hover {\n    background: var(--screen-page-scrollbar-thumb-color-HOVER);\n  }\n`;\n\nexport const StyledIconButton = styled(IconButton)`\n  width: 18px;\n  height: 18px;\n  padding: 0;\n  margin: 4px;\n  &:hover svg {\n    stroke: #bedbb0;\n    stroke-opacity: 1;\n    transition: stroke 0.3s;\n  }\n`;\n\nexport const AddCardButton = styled(ButtonWithIcon)`\n  @media screen and (min-width: 0px) {\n    width: 280px;\n  }\n  width: 334px;\n`;\n","import React, { useState } from 'react';\nimport { API } from 'Services/API';\nimport sprite from '../../assets/images/sprite.svg';\nimport TaskCard from '../TaskCard/TaskCard';\nimport AddCard from '../AddCard/AddCard';\nimport {\n  AddCardButton,\n  CardsList,\n  ColumnHeader,\n  ColumnTitle,\n  ColumnWrapper,\n  StyledIconButton,\n} from './Column.styled';\nimport AddColumn from 'components/AddColumn/AddColumn';\n\nconst Column = ({ columnTitle, columnId, cards, columnData, isFetching }) => {\n  const [deleteColumn] = API.useDeleteColumnByIdMutation();\n\n  const [isAddCardOpen, setIsAddCardOpen] = useState(false);\n  const [isEditColumnOpen, setIsEditColumnOpen] = useState(false);\n\n  const closeAddCard = () => setIsAddCardOpen(false);\n  const handleClick = () => setIsAddCardOpen(true);\n\n  const openEditColumn = () => setIsEditColumnOpen(true);\n  const closeEditColumn = () => setIsEditColumnOpen(false);\n\n  const handleDeleteColumn = async () => {\n    try {\n      await deleteColumn({ columnId });\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  return (\n    <ColumnWrapper>\n      <ColumnHeader>\n        <ColumnTitle>{columnTitle}</ColumnTitle>\n        <div>\n          <StyledIconButton onClick={openEditColumn} aria-label=\"edit\">\n            <svg\n              stroke=\"var(--primary-text-color)\"\n              strokeOpacity=\"0.5\"\n              width=\"16\"\n              height=\"16\"\n            >\n              <use href={sprite + '#icon-pencil'} />\n            </svg>\n          </StyledIconButton>\n          <StyledIconButton onClick={handleDeleteColumn} aria-label=\"remove\">\n            <svg\n              stroke=\"var(--primary-text-color)\"\n              strokeOpacity=\"0.5\"\n              width=\"16\"\n              height=\"16\"\n            >\n              <use href={sprite + '#icon-trash'} />\n            </svg>\n          </StyledIconButton>\n        </div>\n      </ColumnHeader>\n      <CardsList cols={cards}>\n        {cards?.map(({ title, description, priority, deadline, _id: id }) => {\n          return (\n            <TaskCard\n              key={id}\n              title={title}\n              description={description}\n              priority={priority}\n              deadline={deadline}\n              id={id}\n            />\n          );\n        })}\n      </CardsList>\n\n      <AddCardButton onClick={handleClick} title={'Add card'} />\n\n      {isAddCardOpen ? (\n        <AddCard\n          columnId={columnId}\n          modalType={'Add card'}\n          open={isAddCardOpen}\n          handleClose={closeAddCard}\n          close={closeAddCard}\n        />\n      ) : (\n        <></>\n      )}\n      {isEditColumnOpen ? (\n        <AddColumn\n          modalType={'Edit column'}\n          open={isEditColumnOpen}\n          columnId={columnId}\n          close={closeEditColumn}\n          titleValue={columnTitle}\n          column={columnData}\n        />\n      ) : (\n        <></>\n      )}\n    </ColumnWrapper>\n  );\n};\n\nexport default Column;\n","import styled from '@emotion/styled';\nimport { Field as FormicField } from 'formik';\n\nexport const Div = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: baseline;\n  margin-bottom: 2px;\n`;\nexport const FormPopup = styled.form`\n  background-color: var(--modal-bg-color);\n  height: 275px;\n  width: 200px;\n  border-radius: 8px;\n  padding: 24px;\n`;\n\nexport const Button = styled.button`\n  color: var(--secondary-text-color);\n  font-size: 12px;\n  font-weight: 400;\n  letter-spacing: -0.24px;\n  text-decoration-line: underline;\n\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n`;\nexport const LabelGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  justify-content: center;\n  /* align-items: baseline; */\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: center;\n  /* justify-content: center; */\n  gap: 8px;\n  cursor: pointer;\n  color: var(--secondary-text-color);\n  font-size: 12px;\n  font-weight: 400;\n  letter-spacing: -0.24px;\n  padding-top: 1px;\n  padding-bottom: 1px;\n`;\n\nexport const Field = styled(FormicField)`\n  width: 14px;\n  height: 14px;\n  background-color: transparent;\n\n  display: grid;\n  place-content: center;\n\n  ::after {\n    content: '';\n    left: 6.4%;\n    position: absolute;\n    transform: translate(6px, 1px);\n    width: 12px;\n    height: 12px;\n    border: 2.5px solid black;\n    border-radius: 50%;\n    opacity: 0;\n  }\n  ::before {\n    content: '';\n    width: 14px;\n    height: 14px;\n    border-radius: 50%;\n    transition: 120ms transform ease-in-out;\n    background-color: ${props => props.color};\n  }\n\n  :checked::after {\n    opacity: 1;\n  }\n`;\n\n// export const Field = styled.div`\n//   width: 14px;\n//   height: 14px;\n//   border-radius: 14px;\n//   position: absolute;\n//   top: 50%;\n//   left: 50%;\n//   transform: translate(-50%, -50%);\n\n//   background-color: ${props =>\n//     props.color === 'without' && 'rgb(128, 128, 128)'};\n//   background-color: ${props =>\n//     props.color === 'low' && 'rgba(143, 161, 208, 1)'};\n//   background-color: ${props =>\n//     props.color === 'medium' && 'rgba(224, 156, 181, 1)'};\n//   background-color: ${props =>\n//     props.color === 'high' && 'rgba(190, 219, 176, 1)'};\n\n//   transition: all 250ms linear;\n\n//   &.active {\n//     width: 6px;\n//     height: 6px;\n//   }\n// `;\n\nexport const RadioWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`;\n","import { Popper, Radio, Typography } from '@mui/material';\nimport { Formik } from 'formik';\nimport { useState } from 'react';\nimport {\n  Button,\n  Div,\n  FormPopup,\n  Label,\n  LabelGroup,\n  RadioWrap,\n} from './Filter.styled';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/boards/boardsAPISlice';\n\nconst labelStyle = {\n  color: 'var(--primary-text-color)',\n  fontSize: '12px',\n  fontStyle: 'normal',\n  fontWeight: 500,\n  lineHeight: 'normal',\n  letterSpacing: -0.36,\n};\n\nconst titleStyle = {\n  color: 'var(--primary-text-color)',\n  fontSize: '14px',\n  fontFamily: 'Poppins',\n  fontWeight: '500',\n  wordWrap: 'break-word',\n  marginBottom: '14px',\n  paddingBottom: '14px',\n  borderBottom: '0.50px var(--border-filters) solid',\n};\n\nexport const Filter = ({ filter, open, onClose, anchorEl }) => {\n  const [currentPrority, setCurrentPrority] = useState('');\n  const [isShowAllActive, setIsShowAllActive] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const initialValues = {\n    currentPrority: '',\n  };\n\n  const controlProps = item => ({\n    checked: currentPrority === item,\n    onChange: handleChange,\n    value: item,\n  });\n  const handleChange = event => {\n    dispatch(setFilter(event.target.value));\n    setCurrentPrority(event.target.value);\n    setIsShowAllActive(false);\n  };\n\n  const handleShowAll = () => {\n    setCurrentPrority('');\n    dispatch(setFilter(''));\n    setIsShowAllActive(true);\n  };\n\n  const handleRadioClick = () => {\n    if (isShowAllActive) {\n      setIsShowAllActive(false);\n    }\n  };\n\n  return (\n    <Popper\n      open={open}\n      placement={'bottom-end'}\n      anchorEl={anchorEl}\n      onClose={onClose}\n    >\n      <Formik initialValues={initialValues}>\n        <FormPopup onChange={handleChange}>\n          <Typography variant=\"h3\" sx={titleStyle}>\n            Filters\n          </Typography>\n          <LabelGroup role=\"group\" aria-labelledby=\"my-radio-group\">\n            <Div>\n              <Typography variant=\"h2\" sx={labelStyle}>\n                Label Color\n              </Typography>\n              <Button\n                type=\"button\"\n                onClick={handleShowAll}\n                disabled={isShowAllActive}\n              >\n                Show all\n              </Button>\n            </Div>\n            <RadioWrap>\n              <Label>\n                <Radio\n                  onClick={handleRadioClick}\n                  checked={currentPrority === '0'}\n                  name=\"currentPrority\"\n                  {...controlProps('0')}\n                  size=\"small\"\n                  sx={{ color: 'grey', '&.Mui-checked': { color: 'grey' } }}\n                />\n                Without priority\n              </Label>\n              <Label>\n                <Radio\n                  onClick={handleRadioClick}\n                  checked={currentPrority === '1'}\n                  name=\"currentPrority\"\n                  {...controlProps('1')}\n                  size=\"small\"\n                  sx={{\n                    color: '#8FA1D0',\n                    '&.Mui-checked': { color: '#8FA1D0' },\n                  }}\n                />\n                Low\n              </Label>\n              <Label>\n                <Radio\n                  onClick={handleRadioClick}\n                  checked={currentPrority === '2'}\n                  name=\"currentPrority\"\n                  {...controlProps('2')}\n                  size=\"small\"\n                  sx={{\n                    color: '#E09CB5',\n                    '&.Mui-checked': { color: '#E09CB5' },\n                  }}\n                />\n                Medium\n              </Label>\n\n              <Label>\n                <Radio\n                  onClick={handleRadioClick}\n                  checked={currentPrority === '3'}\n                  name=\"currentPrority\"\n                  {...controlProps('3')}\n                  size=\"small\"\n                  sx={{\n                    color: '#BEDBB0',\n                    '&.Mui-checked': { color: '#BEDBB0' },\n                  }}\n                />\n                High\n              </Label>\n            </RadioWrap>\n          </LabelGroup>\n        </FormPopup>\n      </Formik>\n    </Popper>\n  );\n};\n\n// export const Filter = ({ filter, open, onClose }) => {\n//   const [currentPrority, setCurrentPrority] = useState('');\n//   const [isShowAllActive, setIsShowAllActive] = useState(false);\n\n//   const dispatch = useDispatch();\n\n//   const initialValues = {\n//     currentPrority: '',\n//   };\n\n//   const controlProps = item => ({\n//     checked: currentPrority === item,\n//     onChange: handleChange,\n//     value: item,\n//   });\n//   const handleChange = event => {\n//     // const filter = event.target.value;\n//     // filter(event.target.value);\n//     dispatch(setFilter(event.target.value));\n//     setCurrentPrority(event.target.value);\n//     // dispatch(setFilterCards(filter));\n//     setIsShowAllActive(false);\n//   };\n\n//   const handleShowAll = () => {\n//     setCurrentPrority('');\n//     // dispatch(setFilterCards(''));\n//     setIsShowAllActive(true);\n//   };\n\n//   const handleRadioClick = () => {\n//     if (isShowAllActive) {\n//       setIsShowAllActive(false);\n//     }\n//   };\n//   console.log(currentPrority);\n\n//   return (\n//     <ModalLayout open={open} handleClose={onClose}>\n//       <Typography variant=\"h2\" sx={titleStyle}>\n//         Filters\n//       </Typography>\n//       <Formik initialValues={initialValues}>\n//         <Form onChange={handleChange}>\n//           <LabelGroup role=\"group\" aria-labelledby=\"my-radio-group\">\n//             <Div>\n//               <Typography variant=\"h2\" sx={labelStyle}>\n//                 Label Color\n//               </Typography>\n//               <Button\n//                 type=\"button\"\n//                 onClick={handleShowAll}\n//                 disabled={isShowAllActive}\n//               >\n//                 Show all\n//               </Button>\n//             </Div>\n//             <RadioWrap>\n//               <Label>\n//                 <Radio\n//                   onClick={handleRadioClick}\n//                   checked={currentPrority === '0'}\n//                   name=\"currentPrority\"\n//                   {...controlProps('0')}\n//                   size=\"small\"\n//                   sx={{ color: 'grey', '&.Mui-checked': { color: 'grey' } }}\n//                 />\n//                 Without priority\n//               </Label>\n//               <Label>\n//                 <Radio\n//                   onClick={handleRadioClick}\n//                   checked={currentPrority === '1'}\n//                   name=\"currentPrority\"\n//                   {...controlProps('1')}\n//                   size=\"small\"\n//                   sx={{\n//                     color: '#8FA1D0',\n//                     '&.Mui-checked': { color: '#8FA1D0' },\n//                   }}\n//                 />\n//                 Low\n//               </Label>\n//               <Label>\n//                 <Radio\n//                   onClick={handleRadioClick}\n//                   checked={currentPrority === '2'}\n//                   name=\"currentPrority\"\n//                   {...controlProps('2')}\n//                   size=\"small\"\n//                   sx={{\n//                     color: '#E09CB5',\n//                     '&.Mui-checked': { color: '#E09CB5' },\n//                   }}\n//                 />\n//                 Medium\n//               </Label>\n\n//               <Label>\n//                 <Radio\n//                   onClick={handleRadioClick}\n//                   checked={currentPrority === '3'}\n//                   name=\"currentPrority\"\n//                   {...controlProps('3')}\n//                   size=\"small\"\n//                   sx={{\n//                     color: '#BEDBB0',\n//                     '&.Mui-checked': { color: '#BEDBB0' },\n//                   }}\n//                 />\n//                 High\n//               </Label>\n//             </RadioWrap>\n//           </LabelGroup>\n//         </Form>\n//       </Formik>\n//     </ModalLayout>\n//   );\n// };\n","import sprite from '../../assets/images/sprite.svg';\nimport { useEffect, useState } from 'react';\nimport { Filter } from './Filter';\nimport { SidebarBoardItemIcon } from 'components/Sidebar/SidebarBoardItemIcon';\n\nconst {\n  Container,\n  TitleDashBoard,\n  FilterButton,\n  TitleFilter,\n  TitleContainer,\n} = require('./HeaderDashboard.styled');\nexport const HeaderDashboard = ({ title, filter, iconId }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const toggleModal = e => {\n    setIsOpen(!isOpen);\n    setAnchorEl(e.currentTarget);\n  };\n\n  const handleKeyDown = e => {\n    if (e.key === 'Escape') {\n      setIsOpen(false);\n      window.removeEventListener('keydown', handleKeyDown);\n    }\n  };\n  const handleWindowClick = e => {\n    if (e.target.nodeName === 'DIV') {\n      setIsOpen(false);\n      window.removeEventListener('mousedown', handleWindowClick);\n    }\n  };\n  useEffect(() => {\n    if (isOpen) {\n      window.addEventListener('mousedown', handleWindowClick);\n      window.addEventListener('keydown', handleKeyDown);\n    }\n  });\n  return (\n    <Container>\n      <TitleContainer>\n        <SidebarBoardItemIcon current={true } iconId={iconId} />\n        <TitleDashBoard>{title}</TitleDashBoard>\n      </TitleContainer>\n      <FilterButton onClick={toggleModal}>\n        <svg\n          aria-label=\"filter icon\"\n          width=\"16\"\n          height=\"16\"\n          stroke=\"var(--secondary-text-color)\"\n        >\n          <use href={sprite + '#icon-filter'}></use>\n        </svg>\n        <TitleFilter>Filters</TitleFilter>\n      </FilterButton>\n      {isOpen && (\n        <Filter\n          filter={filter}\n          open={isOpen}\n          onClose={toggleModal}\n          anchorEl={anchorEl}\n        />\n      )}\n    </Container>\n  );\n};\n","import styled from '@emotion/styled';\nimport { SIDEBARWIDTH } from 'components/Sidebar/SidebarCONSTANTS';\nimport bgData from './bg-data.json';\n\nexport const MainWrapper = styled.main`\n  min-height: 100%;\n  background-color: var(--primary-bg-color);\n  background-repeat: no-repeat;\n  background-size: cover;\n  padding-bottom: 18px;\n  overflow-y: hidden;\n  @media screen and (min-width: 0px) {\n    padding-top: 60px;\n    min-height: 100vh;\n    @media (-webkit-min-device-pixel-ratio: 1) {\n      background-image: ${props => {\n        if (props.index === undefined) {\n          return 'none';\n        }\n        return `url(${bgData[2].mobile[0][props.index]})`;\n      }};\n    }\n    @media (-webkit-min-device-pixel-ratio: 2) {\n      background-image: ${props => {\n        if (props.index === undefined) {\n          return 'none';\n        }\n        return `url(${bgData[2].mobile[1][props.index]})`;\n      }};\n    }\n    @media (-webkit-min-device-pixel-ratio: 3) {\n      background-image: ${props => {\n        if (props.index === undefined) {\n          return 'none';\n        }\n        return `url(${bgData[2].mobile[2][props.index]})`;\n      }};\n    }\n  }\n\n  @media screen and (min-width: 767px) {\n    padding-top: 68px;\n    height: 100vh;\n    @media (-webkit-min-device-pixel-ratio: 1) {\n      background-image: ${props => {\n        if (props.index === undefined) {\n          return 'none';\n        }\n        return `url(${bgData[1].laptop[0][props.index]})`;\n      }};\n    }\n    @media (-webkit-min-device-pixel-ratio: 2) {\n      background-image: ${props => {\n        if (props.index === undefined) {\n          return 'none';\n        }\n        return `url(${bgData[1].laptop[1][props.index]})`;\n      }};\n    }\n    @media (-webkit-min-device-pixel-ratio: 3) {\n      background-image: ${props => {\n        if (props.index === undefined) {\n          return 'none';\n        }\n        return `url(${bgData[1].laptop[2][props.index]})`;\n      }};\n    }\n  }\n\n  @media screen and (min-width: 1400px) {\n    height: 100vh;\n    @media (-webkit-min-device-pixel-ratio: 1) {\n      background-image: ${props => {\n        if (props.index === undefined) {\n          return 'none';\n        }\n        return `url(${bgData[0].desktop[0][props.index]})`;\n      }};\n    }\n    @media (-webkit-min-device-pixel-ratio: 2) {\n      background-image: ${props => {\n        if (props.index === undefined) {\n          return 'none';\n        }\n        return `url(${bgData[0].desktop[1][props.index]})`;\n      }};\n    }\n    @media (-webkit-min-device-pixel-ratio: 3) {\n      background-image: ${props => {\n        if (props.index === undefined) {\n          return 'none';\n        }\n        return `url(${bgData[0].desktop[2][props.index]})`;\n      }};\n    }\n\n    background-repeat: no-repeat;\n    background-size: cover;\n  }\n`;\n\nexport const MainContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n\n  height: 100vh;\n\n  padding-left: 24px;\n  padding-right: 24px;\n  padding-bottom: 28px;\n  margin-bottom: 28px;\n  @media screen and (min-width: 0px) {\n    width: 100vw;\n    height: 100%;\n  }\n  @media screen and (min-width: 767px) {\n  }\n  @media screen and (min-width: 1400px) {\n    width: calc(100vw - ${SIDEBARWIDTH}px);\n  }\n`;\n\nexport const ColumnsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 34px;\n  align-items: top;\n  overflow: hidden;\n  margin-bottom: auto;\n  ::-webkit-scrollbar {\n    border-radius: 5px;\n    margin-left: 4px;\n    height: 8px;\n    background-color: var(--screen-page-scrollbar-bg-color);\n  }\n  ::-webkit-scrollbar-thumb {\n    background-color: var(--screen-page-scrollbar-thumb-color);\n    border-radius: 5px;\n  }\n  ::-webkit-scrollbar-thumb:hover {\n    background-color: var(--screen-page-scrollbar-thumb-color-HOVER);\n  }\n\n  @media screen and (min-width: 767px) {\n    display: grid;\n    margin-bottom: auto;\n    grid-template-columns: ${props => {\n      return `repeat(${props.cols}, 334px)`;\n    }};\n    overflow-x: ${props => {\n      if (props.cols > 3) {\n        return 'scroll';\n      }\n      return 'hidden';\n    }};\n  }\n\n  @media screen and (min-width: 768px) and (max-width: 1139px) {\n    display: grid;\n    margin-bottom: auto;\n\n    overflow-x: ${props => {\n      if (props.cols > 2) {\n        return 'scroll';\n      }\n      return 'hidden';\n    }};\n  }\n\n  @media screen and (min-width: 1140px) and (max-width: 1400px) {\n    display: grid;\n    margin-bottom: auto;\n\n    overflow-x: ${props => {\n      if (props.cols > 4) {\n        return 'scroll';\n      }\n      return 'hidden';\n    }};\n  }\n`;\n\nexport const screenSyles = {\n  pt: { 0: 9.25, 768: 11, 1440: 9.75 },\n  pb: { 0: 3, 768: 4, 1440: 1 },\n  pl: { 0: 2.5, 768: 4, 1440: 3 },\n  pr: { 0: 2.5, 768: 4, 1440: 3 },\n  height: '100vh',\n  width: { 0: '100vw', 1440: `calc(100vw - ${SIDEBARWIDTH}px)` },\n  flexGrow: 1,\n\n  backgroundColor: 'var(--primary-bg-color)',\n};\n","import React, { useEffect, useState } from 'react';\nimport { ButtonAdd } from 'components/Buttons/Button';\nimport AddColumn from 'components/AddColumn/AddColumn';\nimport Column from '../../components/Column/Column';\nimport { HeaderDashboard } from 'components/HeaderDashboard/HeaderDashboard';\nimport { API } from 'Services/API';\nimport { useParams } from 'react-router-dom';\nimport {\n  MainWrapper,\n  ColumnsWrapper,\n  MainContainer,\n} from './ScreenPage.styled';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst ScreensPage = () => {\n  const { boardId } = useParams();\n  const [filterValue, setFilterValue] = useState('');\n  const stateFilter = useSelector(state => state.boards.filter);\n  const dispatch = useDispatch();\n\n  const reqData = {\n    id: boardId,\n    filter: filterValue,\n  };\n  const [isAddColumnOpen, setIsAddColumnOpen] = useState(false);\n\n  const {  data, isFetching } = API.useGetBoardContentByIdQuery(\n    reqData,\n    {\n      refetchOnMountOrArgChange: true,\n      // skip: false,\n    }\n  );\nconsole.log('data :>> ', data);\n\n  const openAddColumn = () => setIsAddColumnOpen(true);\n  const closeAddColumn = () => setIsAddColumnOpen(false);\n\n  useEffect(() => {\n    setFilterValue(stateFilter);\n    \n  }, [dispatch, stateFilter]);\n\n  return (\n    <MainWrapper index={data?.background}>\n      <HeaderDashboard\n        iconId={data?.iconId}\n        filter={setFilterValue}\n        title={data?.title}\n      />\n      <MainContainer>\n        <ColumnsWrapper cols={!data?.content ? 1 : data?.content?.length + 1}>\n          {data?.content?.map(\n            ({ _id: columnId, title: columnTitle, cards }, index) => (\n              <Column\n                isFetching={isFetching}\n                key={columnId}\n                columnData={data.content[index]}\n                columnTitle={columnTitle}\n                columnId={columnId}\n                cards={cards}\n              />\n            )\n          )}\n\n          <ButtonAdd onClick={openAddColumn}></ButtonAdd>\n        </ColumnsWrapper>\n\n        {isAddColumnOpen ? (\n          <AddColumn\n            modalType={'Add column'}\n            open={isAddColumnOpen}\n            boardId={boardId}\n            close={closeAddColumn}\n          />\n        ) : (\n          <></>\n        )}\n      </MainContainer>\n    </MainWrapper>\n  );\n};\n\nexport default ScreensPage;\n"],"names":["API","useRegisterMutation","useLogInMutation","useLogOutMutation","useUpdateAvatarMutation","useGetCurrentUserQuery","useHelpUserMutation","useThemeUserMutation","useUpdateUserMutation","useGetBoardsQuery","useGetBoardContentByIdQuery","useGetBoardByIdQuery","useAddBoardsMutation","useDeleteBoardByIdMutation","useUpdateBoardByIdMutation","useAddColumnMutation","useUpdateColumnByIdMutation","useDeleteColumnByIdMutation","useGetAllCardsQuery","useAddCardMutation","useUpdateCardByIdMutation","useDeleteCardByIdMutation","useUpdateCardColumnByIdMutation","useLoginGoogleUserMutation","Container","styled","_templateObject","_taggedTemplateLiteral","TitleContainer","_templateObject2","TitleDashBoard","_templateObject3","FilterButton","_templateObject4","TitleFilter","_templateObject5","FormStyled","MUI","display","flexDirection","gap","ButtonClose","InputStyled","TransparentSVG","UlStyled","UlBgStyled","ImgStyled","_templateObject6","_templateObject7","LiIconsStyled","_templateObject8","modalStyles","position","top","left","transform","borderRadius","border","background","padding","fontFamily","titleStyles","color","fontSize","fontStyle","fontWeight","lineHeight","letterSpacing","marginBottom","_ref","title","open","handleClose","children","_jsx","_Fragment","Modal","onClose","_jsxs","Box","sx","Typography","variant","type","onClick","style","stroke","width","height","href","sprite","slideAround","keyframes","BoardItemWrap","paddingTop","paddingBottom","justifyContent","alignItems","overflow","BoardItemIcon","animation","startAnimation","concat","BoardItemCurrentIcon","BoardItemTitleWrap","whiteSpace","BoardItemTitle","_ref2","titleWidth","titleWrapWidth","current","slideText","margin","animationName","animationDuration","animationTimingFunction","animationIterationCount","animationDirection","SidebarBoardItemIcon","iconId","_useState","useState","_useState2","_slicedToArray","setStartAnimation","useEffect","randomNumber","Math","floor","random","interval","setInterval","setTimeout","clearInterval","opacity","SIDEBARWIDTH","SIDEBARMOBILEWIDTH","TextareaStyled","SubWrapper","DateWrapper","DateText","SubTitle","_templateObject9","modalType","boardId","close","columnId","titleValue","_API$useAddColumnMuta","addColumn","_API$useUpdateColumnB","updateColumn","validationSchema","Yup","min","required","formikTitle","_useFormik","useFormik","initialValues","onSubmit","handleColumnSubmit","enableReinitialize","values","errors","touched","handleBlur","handleChange","handleReset","handleSubmit","isValid","dirty","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","t0","console","log","message","abrupt","Notiflix","t1","stop","_x","apply","arguments","ModalLayout","id","name","placeholder","onChange","onBlur","value","ErrorMessage","render","msg","ButtonWithIcon","disabled","ColorRadioButtons","onColorChange","_ref$value","_React$useState","React","_React$useState2","selectedValue","setSelectedValue","event","target","controlProps","item","checked","Radio","_objectSpread","DropDawnBtn","DropDownSVG","PopupStyles","backgroundColor","anchorEl","Popover","anchorOrigin","vertical","horizontal","transformOrigin","DateCalendarStyled","DateCalendar","DatePickerStyles","m","format","disablePast","showDaysOutsideCurrentMonth","success","_ref$cardId","cardId","_ref$titleValue","_ref$descrValue","descrValue","_ref$priorityValue","priorityValue","deadlineValue","date","setDate","_useState3","_useState4","dateValue","setDateValue","_useState5","toString","_useState6","setColor","_useState7","_useState8","setAnchorEl","_useState9","_useState10","isPopupOpen","setIsPopupOpen","_API$useAddCardMutati","addCards","_API$useUpdateCardByI","updateCard","handleSubmitForm","description","ISODate","cardData","_ISODate","_cardData","formatISO","representation","priority","deadline","status","data","_x2","trim","strict","cardInitialValues","_ref3","currentDate","Date","dateISO","parseISO","DropDownIcon","e","currentTarget","Popup","DatePickerCmponent","dateFns","getPriorityColor","getPriorityText","TypographyStylesTitle","TypographyStylesPriority","lineHeigt","CardContentStyles","borderBottom","ActionsBox","CardActionsStyled","Circle","props","TypographyText","CardStyles","StyledIconButton","IconButton","ListMenuStyles","MenuItem","TextContainer","expanded","Text","ReadMore","ShowMoreButton","TruncatedText","text","setExpanded","moveCard","_API$useDeleteCardByI","deleteCardById","isAddCardOpen","setIsAddCardOpen","dispatch","useDispatch","closeAddCard","handleCloseMenu","handleMoveCard","newColumn","handleDeleteCard","response","sent","deleteCard","error","formattedDate","isDeadlineToday","CardContent","component","CardActions","AddCard","Menu","Boolean","PaperProps","ColumnWrapper","ColumnHeader","ColumnTitle","CardsList","cols","length","AddCardButton","columnTitle","cards","columnData","_API$useDeleteColumnB","isFetching","deleteColumn","isEditColumnOpen","setIsEditColumnOpen","handleDeleteColumn","strokeOpacity","map","_id","TaskCard","AddColumn","column","Div","FormPopup","Button","LabelGroup","Label","RadioWrap","FormicField","labelStyle","titleStyle","wordWrap","Filter","filter","currentPrority","setCurrentPrority","isShowAllActive","setIsShowAllActive","setFilter","handleRadioClick","Popper","placement","Formik","role","size","_require","require","HeaderDashboard","isOpen","setIsOpen","toggleModal","handleKeyDown","key","window","removeEventListener","handleWindowClick","nodeName","addEventListener","MainWrapper","undefined","index","bgData","MainContainer","ColumnsWrapper","_data$content","_data$content2","useParams","filterValue","setFilterValue","stateFilter","useSelector","state","boards","reqData","isAddColumnOpen","setIsAddColumnOpen","_API$useGetBoardConte","refetchOnMountOrArgChange","content","Column","ButtonAdd"],"sourceRoot":""}