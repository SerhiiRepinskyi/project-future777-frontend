{"version":3,"file":"static/js/244.7c587970.chunk.js","mappings":"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","sources":["components/AddCard/AddCard.styled.jsx","components/AddColumn/AddColumn.jsx","pages/ScreensPage/ScreensPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport RadioButtonIcon from '@mui/material/Radio';\n\nexport const ComponentWrapper = styled.div`\n  padding: 24px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const FormStyled = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n  margin-bottom: 24px;\n`;\n\nexport const InputStyled = styled.input`\n  resize: none;\n  color: #ffffff;\n  padding: 14px 14px;\n  background-color: transparent;\n  border: 1px solid #bedbb0;\n  border-radius: 8px;\n  :focus {\n    border: 2px solid #bedbb0;\n    outline: none;\n  }\n  ::placeholder {\n    color: #ffffff;\n    opacity: 30%;\n  }\n`;\n\nexport const TextareaStyled = styled.textarea`\n  display: flex;\n  min-height: 155px;\n  color: #ffffff;\n  resize: none;\n  padding: 14px 14px;\n  background-color: transparent;\n  border: 1px solid #bedbb0;\n  border-radius: 8px;\n  text-align: top;\n  :focus {\n    border: 2px solid #bedbb0;\n    outline: none;\n  }\n  ::placeholder {\n    color: #ffffff;\n    opacity: 30%;\n  }\n`;\n\nexport const LabelColorBox = styled.div`\n  display: flex;\n  gap: 4px;\n`;\n\nexport const RadioIcon = styled(RadioButtonIcon)`\n  width: 14px;\n  height: 14px;\n  border-radius: 50%;\n  background-color: #8fa1d0;\n`;\n\nexport const RadioIconChecked = styled(RadioButtonIcon)`\n  width: 14px;\n  height: 14px;\n  border-radius: 50%;\n  border: solid 2px #8fa1d0;\n  background-color: none;\n`;\n\nexport const SubWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: left;\n  gap: 4px;\n`;\n\nexport const DateWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 4px;\n`;\n\nexport const DateText = styled.p`\n  color: #bedbb0;\n  font-size: 14px;\n  margin: 0;\n`;\n\nexport const SubTitle = styled.p`\n  color: #ffffff;\n  font-size: 12px;\n  opacity: 50%;\n  margin: 0;\n`;\n","import React from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { ComponentWrapper, FormStyled, InputStyled } from '../AddCard/AddCard.styled';\nimport { ButtonWithIcon } from 'components/Buttons/Button';\n\nconst AddColumn = () => {\n  const validationSchema = Yup.object({\n    title: Yup.string()\n      .min(2, 'Must be more then 2 symbols')\n      .required('Title is required')\n      .matches(\n        /^(\\w*)$/,\n        'Title may contain only letters, apostrophe, dash and spaces.'\n      ),\n  });\n\n  const formik = useFormik({\n    initialValues: { title: '' },\n    onSubmit: ({ title }) => handleSubmit(title),\n    validationSchema,\n  });\n\n  const handleSubmit = title => {\n    console.log('Title => ', title);\n\n    formik.handleReset();\n  };\n\n  return (\n    <ComponentWrapper>\n      <FormStyled onSubmit={formik.handleSubmit}>\n        <InputStyled\n          id=\"title\"\n          name=\"title\"\n          placeholder=\"Title\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.title}\n        />\n              <ButtonWithIcon title={'Add'} type={'submit'} />\n      </FormStyled>\n    </ComponentWrapper>\n  );\n};\n\nexport default AddColumn;\n","import React, { useState } from 'react';\nimport { Typography, Toolbar, Box, IconButton } from '@mui/material';\nimport { SIDEBARWIDTH } from 'components/Sidebar/SidebarCONSTANTS';\nimport { ButtonAdd } from 'components/Buttons/Button';\nimport ModalLayout from '../../components/ModalLayout/ModalLayout'\nimport AddColumn from 'components/AddColumn/AddColumn';\nimport sprite from '../../assets/images/sprite.svg';\n\nconst ScreensPage = () => {\n  const [isAddColumnOpen, setIsAddColumnOpen] = useState(false);\n\n  const openAddColumn = () => setIsAddColumnOpen(true);\n  const closeAddColumn = () => setIsAddColumnOpen(false);\n\n  return (\n      <Box\n        component=\"main\"\n        sx={{\n          flexGrow: 1,\n          p: 3,\n          width: {\n            1440: `calc(100% - ${SIDEBARWIDTH}px)`,\n            height: '100vh',\n            backgroundColor: '#2e2e2e',\n          },\n        }}\n      >\n        <Toolbar />\n        <Typography paragraph sx={{\n          color: '#ffffff',\n          fontFamily: 'Poppins, sans-serif',\n          fontWeight: 500,\n          fontSize: '16px', }}>\n          BoardName\n        </Typography>\n<IconButton\n  sx={{\n    position: 'absolute',\n    top: '70px',\n    right: '40px',\n    zIndex: 1,\n    color: '#ffffff',\n    fontFamily: 'Poppins, sans-serif',\n    fontWeight: 500,\n    fontSize: '16px',\n    lineHeight: '21px',\n    letterSpacing: '-2%',\n  }}\n>\n  <svg\n    stroke=\"#fff\"\n    strokeOpacity=\"1\"\n    width=\"18\"\n    height=\"18\"\n    style={{ verticalAlign: 'middle', marginRight: '8px' }}\n  >\n    <use href={sprite + '#icon-filter'} />\n  </svg>\n  Filter\n</IconButton>\n         <ButtonAdd onClick={openAddColumn}></ButtonAdd>\n        {/* Використовуйте відповідний компонент ModalLayout з дочірнім елементом AddColumn */}\n        <ModalLayout open={isAddColumnOpen} handleClose={closeAddColumn}>\n          <AddColumn />\n        </ModalLayout>\n      </Box>\n  );\n};\n\nexport default ScreensPage;\n"],"names":["ComponentWrapper","styled","_templateObject","_taggedTemplateLiteral","FormStyled","_templateObject2","InputStyled","_templateObject3","_templateObject4","_templateObject5","RadioButtonIcon","_templateObject6","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","validationSchema","Yup","title","min","required","matches","formik","useFormik","initialValues","onSubmit","_ref","handleSubmit","console","log","handleReset","_jsx","children","_jsxs","id","name","placeholder","onChange","handleChange","onBlur","handleBlur","value","values","ButtonWithIcon","type","_useState","useState","_useState2","_slicedToArray","isAddColumnOpen","setIsAddColumnOpen","Box","component","sx","flexGrow","p","width","concat","SIDEBARWIDTH","height","backgroundColor","Toolbar","Typography","paragraph","color","fontFamily","fontWeight","fontSize","IconButton","position","top","right","zIndex","lineHeight","letterSpacing","stroke","strokeOpacity","style","verticalAlign","marginRight","href","sprite","ButtonAdd","onClick","ModalLayout","open","handleClose","AddColumn"],"sourceRoot":""}