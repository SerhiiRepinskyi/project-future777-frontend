{"version":3,"file":"static/js/224.de8051e3.chunk.js","mappings":"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","sources":["Services/API.js","components/HeaderDashboard/HeaderDashboard.styled.jsx","components/ModalBoard/ModalBoard.styled.jsx","components/ModalLayout/ModalLayout.jsx","components/Sidebar/SidebarCONSTANTS.js","components/AddCard/AddCard.styled.jsx","components/AddColumn/AddColumn.jsx","components/ColorRadioButtons/ColorRadioButtons.jsx","components/Icons/DropDownIcon/DropDownIcon.styled.jsx","components/Icons/DropDownIcon/DropDownIcon.jsx","components/Popup/Popup.jsx","components/DatePicker/DatePicker.styled.jsx","components/DatePicker/DatePicker.jsx","components/AddCard/AddCard.jsx","components/TaskCard/TaskCard.styled.jsx","components/TaskCard/TaskCard.jsx","components/Column/Column.styled.jsx","components/Column/Column.jsx","components/HeaderDashboard/Filter.styled.jsx","components/HeaderDashboard/Filter.jsx","components/HeaderDashboard/HeaderDashboard.jsx","pages/ScreensPage/ScreenPage.styled.jsx","pages/ScreensPage/ScreensPage.jsx"],"sourcesContent":["import {\n  useRegisterMutation,\n  useLogInMutation,\n  useLogOutMutation,\n  useGetCurrentUserQuery,\n  useUpdateUserMutation,\n  useThemeUserMutation,\n  useUpdateAvatarMutation,\n  useHelpUserMutation,\n  useGetBoardsQuery,\n  useGetBoardContentByIdQuery,\n  useGetBoardByIdQuery,\n  useAddBoardsMutation,\n  useDeleteBoardByIdMutation,\n  useUpdateBoardByIdMutation,\n  useAddColumnMutation,\n  useUpdateColumnByIdMutation,\n  useDeleteColumnByIdMutation,\n  useGetAllCardsQuery,\n  useAddCardMutation,\n  useUpdateCardByIdMutation,\n  useDeleteCardByIdMutation,\n  useUpdateCardColumnByIdMutation,\n  useLoginGoogleUserMutation\n} from './API_Component';\n\nexport const API = {\n  useRegisterMutation,\n  useLogInMutation,\n  useLogOutMutation,\n  useUpdateAvatarMutation,\n  useGetCurrentUserQuery,\n  useHelpUserMutation,\n  useThemeUserMutation,\n  useUpdateUserMutation,\n  useGetBoardsQuery,\n  useGetBoardContentByIdQuery,\n  useGetBoardByIdQuery,\n  useAddBoardsMutation,\n  useDeleteBoardByIdMutation,\n  useUpdateBoardByIdMutation,\n  useAddColumnMutation,\n  useUpdateColumnByIdMutation,\n  useDeleteColumnByIdMutation,\n  useGetAllCardsQuery,\n  useAddCardMutation,\n  useUpdateCardByIdMutation,\n  useDeleteCardByIdMutation,\n  useUpdateCardColumnByIdMutation,\n  useLoginGoogleUserMutation\n};\n","import styled from '@emotion/styled';\nexport const Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  padding: 12px 24px;\n  margin-bottom: 12px;\n  background: rgba(255, 255, 255, 0.2);\n  font-family: Poppins;\n\n  //   @media (min-width: 1280px) {\n  //       height: 48px;\n  //   };\n  //   @media (min-width: 768px) {\n  //       height: 80px;\n  //   };\n  //   @media (min-width: 375px) {\n  //       height: 134px;\n  //   };\n  //   @media (max-width: 374px) {\n  //       max-height: 134px;\n  //   };\n`;\n\nexport const TitleDashBoard = styled.p`\n  font-size: 18px;\n  font-weight: 500;\n  letter-spacing: -0.36px;\n  margin: 0;\n  color: var(--primary-text-color);\n`;\n\nexport const FilterButton = styled.button`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 2px;\n  background-color: transparent;\n  border: none;\n  outline: none;\n  opacity: 0.8;\n  cursor: pointer;\n`;\nexport const TitleFilter = styled.p`\n  font-size: 14px;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n  color: var(--secondary-text-color);\n  margin-left: 8px;\n  font-family: Poppins;\n`;\n","import styled from '@emotion/styled';\nimport { styled as MUI } from '@mui/material/styles';\n\nexport const FormStyled = MUI('form')({\n  display: 'flex',\n  flexDirection: 'column',\n  gap: '14px',\n});\n\nexport const ButtonClose = styled.button`\n  font-family: Poppins;\n  margin: 0;\n  padding: 0;\n  position: absolute;\n  right: 10px;\n  top: 10px;\n  width: 24px;\n  height: 24px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  background-color: transparent;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    transform: scale(1.2);\n    /* border: 1px solid #ffffff;\n    color: rgba(255, 255, 255, 1); */\n  }\n`;\n\nexport const InputStyled = styled.input`\n  font-family: Poppins;\n  resize: none;\n  color: var(--primary-text-color);\n  padding: 14px 14px;\n  background-color: transparent;\n  border: 1px solid rgba(190, 219, 176, 0.4);\n  border-radius: 8px;\n  margin-bottom: 10px;\n  :focus {\n    border: 1px solid #bedbb0;\n    outline: none;\n  }\n  ::placeholder {\n    color: var(--primary-text-color);\n    opacity: 30%;\n  }\n`;\n\nexport const TransparentSVG = styled.svg`\n  width: 18px;\n  height: 18px;\n  // stroke: rgba(255, 255, 255, 0.5);\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    stroke: #bedbb0;\n  }\n`;\n\nexport const UlStyled = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 6px;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  margin-bottom: 14px;\n`;\n\nexport const UlBgStyled = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 4px;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  margin-bottom: 14px;\n  max-width: 260px;\n`;\n\nexport const LiStyled = styled.li`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 28px;\n  height: 28px;\n  border-radius: 5px;\n\n  &:hover,\n  &:focus {\n    border: 1px solid #bedbb0;\n  }\n`;\n\nexport const ImgStyled = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  object-position: center;\n  cursor: pointer;\n`;\n\nexport const LiIconsStyled = styled.li`\n  display: flex;\n  width: 20px;\n  height: 20px;\n  align-items: center;\n  justify-content: center;\n\n  &:hover,\n  &:focus {\n    border-radius: 5px;\n    background-color: rgba(190, 219, 176, 0.2);\n  }\n`;\n","import { Modal, Box, Typography } from '@mui/material';\nimport sprite from '../../assets/images/sprite.svg';\nimport { ButtonClose } from 'components/ModalBoard/ModalBoard.styled';\n\n// import { useState } from 'react';\n\nconst modalStyles = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  borderRadius: 2,\n  border: '1px solid rgba(190, 219, 176, 0.50)',\n  background: 'var(--modal-bg-color)',\n  padding: 3,\n  fontFamily: 'Poppins',\n};\n\nconst titleStyles = {\n  color: 'var(--primary-text-color)',\n  fontSize: '18px',\n  fontStyle: 'normal',\n  fontWeight: 500,\n  fontFamily: 'Poppins',\n  lineHeight: 'normal',\n  letterSpacing: -0.36,\n  marginBottom: 3,\n};\n\nconst ModalLayout = ({ title, open, handleClose, children }) => {\n  return (\n    <>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-title\"\n        aria-describedby=\"modal-description\"\n      >\n        <Box sx={modalStyles}>\n          <Typography variant=\"h2\" sx={titleStyles}>\n            {title}\n          </Typography>\n          <ButtonClose type=\"button\" onClick={handleClose}>\n            <svg\n              style={{ stroke: 'var(--primary-text-color)' }}\n              width=\"18\"\n              height=\"18\"\n            >\n              <use href={sprite + '#icon-x-close'} />\n            </svg>\n          </ButtonClose>\n          {children}\n        </Box>\n      </Modal>\n    </>\n  );\n};\n\nexport default ModalLayout;\n","export const SIDEBARWIDTH = 260;\nexport const SIDEBARMOBILEWIDTH = 225;\n  \n\n\n\n","import styled from '@emotion/styled';\n\nexport const ComponentWrapper = styled.div`\n  padding: 0px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const FormStyled = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 350px;\n  gap: 14px;\n  margin-bottom: 0px;\n`;\n\nexport const InputStyled = styled.input`\n  resize: none;\n  color: var(--primary-text-color);\n  padding: 14px 14px;\n  background-color: transparent;\n  border: 1px solid #bedbb0;\n  border-radius: 8px;\n  :focus {\n    border: 2px solid #bedbb0;\n    outline: none;\n  }\n  ::placeholder {\n    color: var(--primary-text-color);\n    opacity: 30%;\n  }\n`;\n\nexport const TextareaStyled = styled.textarea`\n  display: flex;\n  min-height: 155px;\n  color: var(--primary-text-color);\n  resize: none;\n  padding: 14px 14px;\n  background-color: transparent;\n  border: 1px solid #bedbb0;\n  border-radius: 8px;\n  text-align: top;\n  :focus {\n    border: 2px solid #bedbb0;\n    outline: none;\n  }\n  ::placeholder {\n    color: var(--primary-text-color);\n    opacity: 30%;\n  }\n`;\n\nexport const LabelColorBox = styled.div`\n  display: flex;\n  gap: 4px;\n`;\n\nexport const SubWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: left;\n  gap: 4px;\n`;\n\nexport const DateWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 4px;\n`;\n\nexport const DateText = styled.p`\n  color: var(--default-screen-page-link-color);\n  font-size: 14px;\n  margin: 0;\n`;\n\nexport const SubTitle = styled.p`\n  color: var(--primary-text-color);\n  font-size: 12px;\n  opacity: 50%;\n  margin: 0;\n`;\n","import React from 'react';\nimport { API } from 'Services/API';\nimport { ErrorMessage, useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { FormStyled, InputStyled } from '../AddCard/AddCard.styled';\nimport { ButtonWithIcon } from 'components/Buttons/Button';\nimport ModalLayout from '../ModalLayout/ModalLayout';\nimport Notiflix from 'notiflix';\n\nconst AddColumn = ({\n  open,\n  modalType,\n  boardId,\n  close,\n  columnId,\n  titleValue,\n}) => {\n  const [addColumn] = API.useAddColumnMutation();\n  const [updateColumn] = API.useUpdateColumnByIdMutation();\n\n  const validationSchema = Yup.object({\n    title: Yup.string()\n      .min(2, 'Must be more then 2 symbols')\n      .required('Title is required'),\n  });\n\n  const formikTitle =\n    modalType === 'Add column' ? { title: '' } : { title: titleValue };\n\n  const {\n    values,\n    errors,\n    touched,\n    handleBlur,\n    handleChange,\n    handleReset,\n    handleSubmit,\n    isValid,\n    dirty,\n  } = useFormik({\n    initialValues: formikTitle,\n    onSubmit: title => handleColumnSubmit(title),\n    validationSchema,\n    enableReinitialize: true,\n  });\n\n  const handleColumnSubmit = async title => {\n    if (modalType === 'Add column') {\n      try {\n        await addColumn({ boardId, title });\n      } catch (error) {\n        console.log(error.message);\n      }\n    }\n\n    if (modalType === 'Edit column') {\n      if (title.title === titleValue) {\n        return Notiflix.Notify.failure('Nothing changed');\n      }\n      \n      try {\n        await updateColumn({ columnId, title });\n        Notiflix.Notify.success('Your column successfully updated');\n        \n      } catch (error) {\n        console.log(error.message);\n      }\n    }\n    handleReset();\n    close();\n  };\n\n  return (\n    <ModalLayout title={modalType} open={open} handleClose={close}>\n      <FormStyled onSubmit={handleSubmit}>\n        <InputStyled\n          id=\"title\"\n          name=\"title\"\n          placeholder=\"Title\"\n          onChange={handleChange}\n          onBlur={handleBlur}\n          value={values.title}\n        />\n        {touched.title && errors.title && dirty && (\n          <ErrorMessage\n            name=\"title\"\n            render={msg => {\n              Notiflix.Notify.warning(` ${msg}`);\n            }}\n          />\n        )}\n        <ButtonWithIcon\n          title={modalType === 'Add column' ? 'Add' : 'Edit'}\n          type={'submit'}\n          disabled={!dirty || !isValid}\n        />\n      </FormStyled>\n    </ModalLayout>\n  );\n};\n\nexport default AddColumn;\n","import * as React from 'react';\nimport Radio from '@mui/material/Radio';\n\nexport default function ColorRadioButtons({ onColorChange, value = '0' }) {\n  const [selectedValue, setSelectedValue] = React.useState(value);\n\n  const handleChange = event => {\n    setSelectedValue(event.target.value);\n    onColorChange(event.target.value);\n  };\n\n  const controlProps = item => ({\n    checked: selectedValue === item,\n    onChange: handleChange,\n    value: item,\n  });\n\n  return (\n    <div>\n      <Radio\n        {...controlProps('1')}\n        sx={{ color: '#8FA1D0', '&.Mui-checked': { color: '#8FA1D0' } }}\n      />\n      <Radio\n        {...controlProps('2')}\n        sx={{ color: '#E09CB5', '&.Mui-checked': { color: '#E09CB5' } }}\n      />\n      <Radio\n        {...controlProps('3')}\n        sx={{ color: '#BEDBB0', '&.Mui-checked': { color: '#BEDBB0' } }}\n      />\n      <Radio\n        {...controlProps('0')}\n        sx={{ color: 'grey', '&.Mui-checked': { color: 'grey' } }}\n      />\n    </div>\n  );\n}\n","import styled from \"@emotion/styled\";\n\nexport const DropDawnBtn = styled.div`\n  outline: none;\n  background-color: transparent;\n  border: none;\n  transition: all 0.3s ease-in-out;\n  :hover,\n  :focus {\n    transform: translateY(5px);\n  }\n`;\nexport const DropDownSVG = styled.svg`\n  stroke: var(--default-screen-page-link-color);\n`;\n","import React from 'react'\nimport sprite from '../../../assets/images/sprite.svg';\nimport { DropDawnBtn, DropDownSVG } from './DropDownIcon.styled';\n\nconst DropDownIcon = ({onClick}) => {\n  return (\n    <div>\n      <DropDawnBtn id={'date-picker'} onClick={onClick}>\n        <DropDownSVG width=\"18\" height=\"18\">\n          <use href={sprite + '#icon-drop-down'} />\n        </DropDownSVG>\n      </DropDawnBtn>\n    </div>\n  );\n}\n\nexport default DropDownIcon\n","import { Popover } from '@mui/material';\nimport React from 'react';\n\nconst PopupStyles = {\n  '.MuiPaper-root': {\n    backgroundColor: '#1F1F1F',\n    borderRadius: '8px',\n  },\n};\n\nconst Popup = ({ anchorEl, open, onClose, children }) => {\n  return (\n    <Popover\n      sx={PopupStyles}\n      anchorEl={anchorEl}\n      open={open}\n      onClose={onClose}\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'left',\n      }}\n      transformOrigin={{\n        vertical: 'top',\n        horizontal: 'left',\n      }}\n    >\n      {children}\n    </Popover>\n  );\n};\n\nexport default Popup;\n","import { DateCalendar } from '@mui/x-date-pickers/DateCalendar';\nimport styled from '@emotion/styled';\n\nexport const DateCalendarStyled = styled(DateCalendar)`\n  .MuiDateCalendar-root {\n    font-family: 'Poppins';\n    background: 'var(--primary-bg-color)';\n    color: 'var(--primary-text-color)';\n  }\n`;\n\nexport const DatePickerStyles = {\n  '.MuiTypography-root': {\n    width: '24px',\n    m: '5px',\n    fontSize: '14px',\n    fontWeight: 500,\n    fontFamily: 'Poppins',\n    color: 'var(--secondary-text-color)',\n  },\n  '.MuiPickersCalendarHeader-label': {\n    fontSize: '14px',\n    fontWeight: 600,\n    fontFamily: 'Poppins',\n    color: 'var(--primary-text-color)',\n  },\n  '.MuiDateCalendar-root': {\n    width: '235px',\n  },\n  '.MuiPaper-root': {\n    backgroundColor: 'var(--primary-bg-color)',\n  },\n  '.MuiYearCalendar-root': {\n    width: '265px',\n  },\n  '.MuiPickersDay-root': {\n    color: 'var(--primary-text-color)',\n  },\n  '.MuiButtonBase-root': {\n    width: '24px',\n    height: '24px',\n    m: '5px',\n    color: 'var(--primary-text-color)',\n  },\n\n  '.MuiPickersArrowSwitcher-spacer': {\n    width: '0px',\n  },\n  '.MuiPickersFadeTransitionGroup-root': {\n    overflow: 'hidden',\n  },\n  '.MuiButtonBase-root:hover': {\n    backgroundColor: 'var(--default-screen-page-link-color)',\n    color: 'var(--primary-bg-color)',\n  },\n  '.MuiPickersYear-yearButton.Mui-selected': {\n    backgroundColor: 'var(--button-bg-color)',\n    color: 'var(--primary-bg-color)',\n  },\n  '.MuiPickersYear-yearButton:hover': {\n    backgroundColor: 'var(--button-bg-color)',\n    color: 'var(--primary-bg-color)',\n  },\n  '.MuiPickersDay-today': {\n    backgroundColor: 'var(--button-bg-color)',\n    color: 'var(--primary-bg-color)',\n    border: '1px solid var(--button-bg-color)',\n  },\n  '.MuiPickersDay-dayOutsideMonth': {\n    fontWeight: 400,\n    color: 'rgba(255, 255, 255, 0.18)',\n  },\n  '.MuiButtonBase-root.Mui-disabled': {\n    fontWeight: 400,\n    color: 'rgba(255, 255, 255, 0.18)',\n  },\n  '.css-qa7bje-MuiButtonBase-root-MuiPickersDay-root.Mui-disabled:not(.Mui-selected)':\n    {\n      fontWeight: 400,\n      color: 'rgba(255, 255, 255, 0.38)',\n    },\n  'MuiPickersYear-yearButton.Mui-selected': {\n    backgroundColor: 'var(--button-bg-color) !important',\n  },\n  'MuiPickersYear-yearButton.Mui-selected:hover': {\n    backgroundColor: 'var(--button-bg-color) !important',\n  },\n  width: '265px',\n  height: '295px',\n  backgroundColor: 'var(--primary-bg-color)',\n  border: '1px solid var(--default-screen-page-link-color)',\n  color: 'var(--primary-text-color)',\n  borderRadius: '8px',\n  fontStyle: 'normal',\n  fontWeight: 500,\n  lineHeight: 'normal',\n  letterSpacing: -0.36,\n  marginBottom: 0,\n};\n","import { DateCalendarStyled, DatePickerStyles } from \"./DatePicker.styled\";\n\n\nconst DatePickerCmponent = ({ onChange }) => {\n  return (\n    <div>\n      <DateCalendarStyled\n        sx={DatePickerStyles}\n        onChange={onChange}\n        format=\"LL\"\n        disablePast\n        showDaysOutsideCurrentMonth\n      />\n    </div>\n  );\n};\n\nexport default DatePickerCmponent;\n","import React, { useEffect, useState } from 'react';\nimport { useFormik } from 'formik';\nimport { format, parseISO } from 'date-fns';\nimport * as Yup from 'yup';\nimport { API } from 'Services/API';\nimport formatISO from 'date-fns/formatISO';\nimport Notiflix from 'notiflix';\n\nimport {\n  FormStyled,\n  TextareaStyled,\n  SubWrapper,\n  DateText,\n  DateWrapper,\n  SubTitle,\n  InputStyled,\n} from './AddCard.styled';\nimport ColorRadioButtons from 'components/ColorRadioButtons/ColorRadioButtons';\nimport { ButtonWithIcon } from 'components/Buttons/Button';\nimport DropDownIcon from 'components/Icons/DropDownIcon/DropDownIcon';\nimport Popup from 'components/Popup/Popup';\nimport DatePickerCmponent from 'components/DatePicker/DatePicker';\nimport ModalLayout from '../ModalLayout/ModalLayout';\n\nNotiflix.Notify.init({\n  success: {\n    background: 'var(--button-bg-color)',\n  },\n});\n\nconst AddCard = ({\n  modalType,\n  close,\n  open,\n  handleClose,\n  columnId,\n  cardId = '',\n  titleValue = '',\n  descrValue = '',\n  priorityValue = '0',\n  deadlineValue,\n}) => {\n  const [date, setDate] = useState('');\n  const [dateValue, setDateValue] = useState(\"\");\n  const [color, setColor] = useState(priorityValue.toString());\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  const [addCards] = API.useAddCardMutation();\n  const [updateCard] = API.useUpdateCardByIdMutation();\n\n  const handleDateClick = e => {\n    setAnchorEl(e.currentTarget);\n    setIsPopupOpen(true);\n  };\n\n  const onDateChange = e => {\n    console.log('Data :>> ', e);\n    const dateFns = format(e, 'LLLL d');\n    setDateValue(dateFns);\n    setDate(e);\n    setAnchorEl(null);\n    setIsPopupOpen(false);\n  };\n\n  const onColorChange = value => {\n    console.log('value :>> ', value);\n    setColor(value);\n  };\n\n  const handleSubmitForm = async (title, description) => {\n    if (modalType === 'Add card') {\n      if (!date) {\n        Notiflix.Notify.failure('Please select the date');\n      }\n\n      const ISODate = formatISO(date, { representation: 'date' });\n      console.log('ISODate :>> ', ISODate);\n\n      const cardData = {\n        title,\n        description,\n        priority: color,\n        deadline: ISODate,\n      };\n\n      try {\n        await addCards({ columnId, cardData });\n        Notiflix.Notify.success('Your card successfully added');\n      } catch (error) {\n        if (error.status === 400) {\n          return Notiflix.Notify.failure('All field must be filled in');\n        } else {\n          console.log('An error occurred:', error.data.message);\n        }\n      }\n    } else {\n      const ISODate = formatISO(date, { representation: 'date' });\n      const cardData = {\n        title,\n        description,\n        priority: color,\n        deadline: ISODate,\n      };\n\n      try {\n        await updateCard({ cardId, cardData });\n        Notiflix.Notify.success('Your card successfully updated');\n      } catch (error) {\n        if (error.status === 400) {\n          return Notiflix.Notify.failure('All field must be filled in');\n        } else {\n          console.log('An error occurred:', error.message);\n        }\n      }\n    }\n\n    setDateValue('');\n    setDate('');\n    handleReset();\n    close();\n  };\n\n  const validationSchema = Yup.object({\n    title: Yup.string()\n      .trim('The title cannot include leading and trailing spaces')\n      .strict(true)\n      .min(2, 'Must be more then 2 symbols')\n      .required('Title is required'),\n    description: Yup.string()\n      .min(5, 'Must be more then 5 symbols')\n      .required('Description is required'),\n  });\n\n  const cardInitialValues =\n    modalType === 'Add card'\n      ? { title: '', description: '' }\n      : { title: titleValue, description: descrValue };\n\n  const {\n    values,\n    handleBlur,\n    handleChange,\n    handleReset,\n    handleSubmit,\n    isValid,\n    dirty,\n  } = useFormik({\n    initialValues: cardInitialValues,\n    onSubmit: ({ title, description }) => handleSubmitForm(title, description),\n    validationSchema,\n    enableReinitialize: true,\n  });\n\n  useEffect(() => {\n    if (modalType === 'Add card') {\n      const currentDate = format(new Date(), \"'Today,' LLLL d\");\n      setDateValue(currentDate);\n    }\n    if (modalType === 'Edit card') {\n      console.log('deadlineValue :>> ', deadlineValue);\n      const dateISO = parseISO(deadlineValue, \"LLLL d\");\n      setDate(dateISO);\n      const currentDate = format(dateISO, \"LLLL d\");\n      setDateValue(currentDate);\n    }\n  }, [modalType, deadlineValue]);\n\n  return (\n    <ModalLayout title={modalType} open={open} handleClose={handleClose}>\n      <FormStyled onSubmit={handleSubmit}>\n        <InputStyled\n          id=\"title\"\n          name=\"title\"\n          placeholder=\"Title\"\n          onChange={handleChange}\n          onBlur={handleBlur}\n          value={values.title}\n        />\n\n        <TextareaStyled\n          id=\"description\"\n          name=\"description\"\n          placeholder=\"Description\"\n          onChange={handleChange}\n          onBlur={handleBlur}\n          value={values.description}\n        />\n\n        <SubWrapper>\n          <SubTitle>Label color</SubTitle>\n          <ColorRadioButtons value={color} onColorChange={onColorChange} />\n        </SubWrapper>\n\n        <SubWrapper>\n          <SubTitle>Deadline</SubTitle>\n          <DateWrapper>\n            <DateText>{dateValue}</DateText>\n            <DropDownIcon onClick={handleDateClick} />\n          </DateWrapper>\n        </SubWrapper>\n\n        <ButtonWithIcon\n          title={modalType === 'Add card' ? 'Add' : 'Edit'}\n          type={'submit'}\n          disabled={!dirty || !isValid}\n        />\n      </FormStyled>\n\n      <Popup\n        anchorEl={anchorEl}\n        open={isPopupOpen}\n        onClose={() => setIsPopupOpen(false)}\n      >\n        <DatePickerCmponent onChange={onDateChange} />\n      </Popup>\n    </ModalLayout>\n  );\n};\n\nexport default AddCard;\n","import styled from '@emotion/styled';\nimport { IconButton } from '@mui/material';\nimport { useState } from 'react';\n// import EllipsisText from 'react-ellipsis-text';\nimport MenuItem from '@mui/material/MenuItem';\nexport function getPriorityColor(priority) {\n  switch (priority) {\n    case 3:\n      return '#BEDBB0';\n    case 1:\n      return '#8FA1D0';\n    case 2:\n      return '#E09CB5';\n    default:\n      return '#bababa';\n  }\n}\nexport function getPriorityText(priority) {\n  switch (priority) {\n    case 3:\n      return 'High';\n    case 1:\n      return 'Low';\n    case 2:\n      return 'Medium';\n    default:\n      return 'Without';\n  }\n}\nexport const TypographyStylesTitle = {\n  color: 'var(--primary-text-color)',\n  fontSize: '14px',\n  fontWeight: '600',\n  letterSpacing: '-0.28px',\n  marginBottom: '8px',\n};\n\nexport const TypographyStylesPriority = {\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'start',\n  gap: '4px',\n  color: 'var( --secondary-text-color)',\n  fontFamily: 'Poppins',\n  fontSize: '8px',\n\n  fontWeight: '400',\n  lineHeigt: 'normal',\n  letterSpacing: '-0.16px',\n};\nexport const CardContentStyles = {\n  borderBottom: '1px solid var(--cards-underline)',\n  padding: '0px',\n  paddingBottom: '14px',\n  marginBottom: '14px',\n};\nexport const ActionsBox = {\n  display: 'flex',\n  alignItems: 'base-line',\n  justifyContent: 'center',\n  gap: '14px',\n};\nexport const CardActionsStyled = {\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n};\nexport const Circle = styled.div`\n  width: 12px;\n  height: 12px;\n  border-radius: 50%;\n  background-color: ${props => getPriorityColor(props.priority)};\n`;\nexport const TypographyText = styled.div`\n  color: var(--primary-text-color);\n\n  font-size: 10px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  letter-spacing: -0.2px;\n`;\nexport const CardStyles = styled.div`\n  width: 100%;\n  height: 154px;\n  padding-top: 14px;\n  padding-bottom: 14px;\n  padding-left: 24px;\n  padding-right: 20px;\n  background-color: var(--cards-bg-color);\n  border-radius: 8px;\n  border-left: 4px solid ${props => getPriorityColor(props.priority)};\n  overflow: auto;\n`;\nexport const StyledIconButton = styled(IconButton)`\n  &:hover svg {\n    stroke: var(--default-screen-page-link-color);\n    stroke-opacity: 1;\n    transition: stroke 0.3s;\n  }\n`;\nexport const ListMenuStyles = styled(MenuItem)`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  color: var(--secondary-text-color);\n  font-family: 'Poppins';\n  font-size: 14px;\n\n  font-weight: 400px;\n\n  &:hover {\n    color: var(--default-screen-page-link-color);\n  }\n  &:hover svg {\n    stroke: var(--default-screen-page-link-color);\n    stroke-opacity: 1;\n    transition: stroke 0.3s;\n  }\n`;\nconst TextContainer = styled.div`\n  max-height: ${props =>\n    props.expanded\n      ? 'none'\n      : '36px'}; /* Максимальна висота для двох рядків тексту */\n  overflow: hidden;\n  position: relative;\n`;\n\nconst Text = styled.div`\n  color: var(--secondary-text-color);\n  font-size: 12px;\n  font-weight: 400px;\n  padding-right: 18px;\n  line-height: 18px; /* Висота рядка */\n`;\n\nconst ReadMore = styled.div`\n  color: var(--secondary-text-color);\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  background-color: transparent;\n  padding: 0 5px;\n  font-weight: bold;\n  cursor: pointer;\n  display: ${props => (props.expanded ? 'none' : 'block')};\n  &:hover {\n    text-decoration: underline;\n  }\n`;\nconst ShowMoreButton = styled.button`\n  color: var(--primary-text-color);\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nexport const TruncatedText = ({ text }) => {\n  const [expanded, setExpanded] = useState(false);\n\n  const toggleExpanded = () => {\n    setExpanded(!expanded);\n  };\n\n  const resetText = () => {\n    setExpanded(false);\n  };\n\n  return (\n    <TextContainer expanded={expanded}>\n      <Text>{text}</Text>\n      {!expanded && (\n        <>\n          <ReadMore onClick={toggleExpanded}>...</ReadMore>\n        </>\n      )}\n      {expanded && <ShowMoreButton onClick={resetText}>Go back</ShowMoreButton>}\n    </TextContainer>\n  );\n};\n","import React from 'react';\nimport { format } from 'date-fns';\nimport { useState } from 'react';\nimport AddCard from 'components/AddCard/AddCard';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport CardActions from '@mui/material/CardActions';\n\nimport Menu from '@mui/material/Menu';\nimport Box from '@mui/material/Box';\nimport sprite from '../../assets/images/sprite.svg';\n\nimport { getPriorityText } from './TaskCard.styled';\n\nimport { deleteCard } from '../../redux/tasks/cardsAPISlice';\nimport { useDispatch } from 'react-redux';\nimport { API } from 'Services/API';\n\nimport {\n  TypographyStylesTitle,\n  TypographyStylesPriority,\n  CardContentStyles,\n  ActionsBox,\n  CardActionsStyled,\n  Circle,\n  TypographyText,\n  StyledIconButton,\n  CardStyles,\n  ListMenuStyles,\n  TruncatedText,\n} from './TaskCard.styled';\n\nfunction TaskCard({\n  title,\n  description,\n  priority,\n  deadline,\n  moveCard,\n  id,\n  columnId,\n}) {\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const [deleteCardById] = API.useDeleteCardByIdMutation();\n\n  const [isAddCardOpen, setIsAddCardOpen] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const closeAddCard = () => setIsAddCardOpen(false);\n  const handleClick = () => setIsAddCardOpen(true);\n\n  const handleOpenMenu = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleCloseMenu = () => {\n    setAnchorEl(null);\n  };\n\n  const handleMoveCard = newColumn => {\n    handleCloseMenu();\n    moveCard(newColumn);\n  };\n  const handleDeleteCard = async () => {\n    try {\n      const response = await deleteCardById(id);\n      dispatch(deleteCard(response));\n    } catch (error) {\n      console.error('Error deleting card:', error);\n    }\n  };\n\n  const date = new Date(`${deadline}`);\n  const formattedDate = format(date, 'dd/MM/yyyy');\n\n  const currentDate = new Date();\n  const formatteCurrentDate = format(currentDate, 'dd/MM/yyyy');\n  const isDeadlineToday = formattedDate === formatteCurrentDate;\n\n  return (\n    <CardStyles priority={priority}>\n      <CardContent sx={CardContentStyles}>\n        <Typography sx={TypographyStylesTitle} variant=\"h4\" component=\"div\">\n          {title}\n        </Typography>\n        <TruncatedText text={description} />\n      </CardContent>\n      <CardActions sx={CardActionsStyled}>\n        <Box sx={ActionsBox}>\n          <Box sx={TypographyStylesPriority} variant=\"body2\">\n            Priority:\n            <Box sx={{ display: 'flex', gap: '4px', alignItems: 'center' }}>\n              <Circle priority={priority} />\n              <TypographyText variant=\"subText\">\n                {getPriorityText(priority)}\n              </TypographyText>\n            </Box>\n          </Box>\n          <Box sx={TypographyStylesPriority} variant=\"body2\">\n            Deadline:\n            <Box\n              sx={{\n                width: '14px',\n                height: '14px',\n                color: 'var(--primary-text-color)',\n                fontFamily: 'Poppins',\n                fontSize: '10px',\n                fontStyle: 'normal',\n                fontWeight: 400,\n                lineHeight: 'normal',\n                letterSpacing: '-0.2px',\n              }}\n            >\n              {' '}\n              {formattedDate}\n            </Box>\n          </Box>\n        </Box>\n        <Box>\n          {isDeadlineToday && (\n            <StyledIconButton aria-label=\"deadline\">\n              <svg stroke=\"#BEDBB0\" width=\"16\" height=\"16\">\n                <use href={sprite + '#icon-bell'} />\n              </svg>\n            </StyledIconButton>\n          )}\n          <StyledIconButton onClick={handleOpenMenu} aria-label=\"next-colomn\">\n            <svg stroke=\"var(--cards-icon-color)\" width=\"16\" height=\"16\">\n              <use href={sprite + '#icon-active'} />\n            </svg>\n          </StyledIconButton>\n          <StyledIconButton\n            onClick={handleClick}\n            title={'Edit card'}\n            aria-label=\"edit\"\n          >\n            <svg stroke=\"var(--cards-icon-color)\" width=\"16\" height=\"16\">\n              <use href={sprite + '#icon-pencil'} />\n            </svg>\n          </StyledIconButton>\n          {isAddCardOpen ? (\n            <AddCard\n              columnId={columnId}\n              cardId={id}\n              modalType={'Edit card'}\n              open={isAddCardOpen}\n              handleClose={closeAddCard}\n              close={closeAddCard}\n              titleValue={title}\n              descrValue={description}\n              priorityValue={priority}\n              deadlineValue={deadline}\n            />\n          ) : (\n            <></>\n          )}\n          <StyledIconButton onClick={handleDeleteCard} aria-label=\"remove\">\n            <svg stroke=\"var(--cards-icon-color)\" width=\"16\" height=\"16\">\n              <use href={sprite + '#icon-trash'} />\n            </svg>\n          </StyledIconButton>\n        </Box>\n      </CardActions>\n      <Menu\n        anchorEl={anchorEl}\n        open={Boolean(anchorEl)}\n        onClose={handleCloseMenu}\n        PaperProps={{\n          sx: {\n            backgroundColor: '#151515',\n            width: '135px',\n          },\n        }}\n      >\n        {/* List of columns to move the card */}\n        <ListMenuStyles onClick={() => handleMoveCard('Column 1')}>\n          {' '}\n          <Box> In progress </Box>\n          <Box>\n            {' '}\n            <svg stroke=\"var(--cards-icon-color)\" width=\"16\" height=\"16\">\n              <use href={sprite + '#icon-active'} />\n            </svg>\n          </Box>\n        </ListMenuStyles>\n        <ListMenuStyles onClick={() => handleMoveCard('Column 2')}>\n          <Box> Done </Box>\n          <Box>\n            {' '}\n            <svg stroke=\"var(--cards-icon-color)\" width=\"16\" height=\"16\">\n              <use href={sprite + '#icon-active'} />\n            </svg>\n          </Box>\n        </ListMenuStyles>\n      </Menu>\n    </CardStyles>\n  );\n}\n\nexport default TaskCard;\n","import { ButtonWithIcon } from '../Buttons/Button';\nimport styled from '@emotion/styled';\nimport { IconButton } from '@mui/material';\n\nexport const ColumnWrapper = styled.li`\n  display: flex;\n  flex-direction: column;\n  /* grid-template-rows: 56px auto 56px; */\n  align-items: left;\n  /* gap: 14px; */\n  max-width: 346px;\n  max-height: 100%;\n  padding-right: 12px;\n  padding-bottom: 14px;\n  margin-right: 14px;\n  margin-bottom: auto;\n\n  @media screen and (min-width: 768px) {\n    width: 346px;\n    max-height: 80vh;\n    margin-bottom: auto;\n  }\n`;\n\nexport const ColumnHeader = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  max-width: 334px;\n  height: 56px;\n  background-color: var(--secondary-bg-color);\n  color: var(--primary-text-color);\n  padding: 20px;\n  border-radius: 8px;\n  margin-bottom: 14px;\n`;\n\nexport const ColumnTitle = styled.h2`\n  display: flex;\n  font-family: 'Poppins';\n  font-weight: 600;\n  font-size: 14px;\n  margin: 0;\n`;\n\nexport const CardsList = styled.ul`\n  display: ${props => {\n    if (props.cols.length < 4) {\n      return `flex`;\n    }\n    return `grid`;\n  }};\n  @media screen and (max-width: 0px) {\n    min-width: 280px;\n  }\n\n  flex-direction: column;\n  grid-template-rows: auto;\n  width: 100%;\n  margin-bottom: 14px;\n  max-height: 60vh;\n  gap: 8px;\n  border-radius: 8px;\n  padding-right: 8px;\n  overflow-x: hidden;\n  overflow-y: ${props => {\n    if (props.cols.length < 4) {\n      return `hidden`;\n    }\n    return `scroll`;\n  }};\n  ::-webkit-scrollbar {\n    border-radius: 5px;\n    margin-left: 4px;\n    width: 8px;\n    background-color: var(--screen-page-scrollbar-bg-color);\n  }\n  ::-webkit-scrollbar-thumb {\n    background: var(--screen-page-scrollbar-thumb-color);\n    border-radius: 5px;\n  }\n  ::-webkit-scrollbar-thumb:hover {\n    background: var(--screen-page-scrollbar-thumb-color-HOVER);\n  }\n`;\n\nexport const StyledIconButton = styled(IconButton)`\n  width: 18px;\n  height: 18px;\n  padding: 0;\n  margin: 4px;\n  &:hover svg {\n    stroke: #bedbb0;\n    stroke-opacity: 1;\n    transition: stroke 0.3s;\n  }\n`;\n\nexport const AddCardButton = styled(ButtonWithIcon)`\n  @media screen and (min-width: 0px) {\n    width: 280px;\n  }\n  width: 334px;\n`;\n","import React, { useState } from 'react';\nimport { API } from 'Services/API';\nimport sprite from '../../assets/images/sprite.svg';\nimport TaskCard from '../TaskCard/TaskCard';\nimport AddCard from '../AddCard/AddCard';\nimport {\n  AddCardButton,\n  CardsList,\n  ColumnHeader,\n  ColumnTitle,\n  ColumnWrapper,\n  StyledIconButton,\n} from './Column.styled';\nimport AddColumn from 'components/AddColumn/AddColumn';\n\nconst Column = ({ columnTitle, columnId, cards, columnData, isFetching }) => {\n  const [deleteColumn] = API.useDeleteColumnByIdMutation();\n\n  const [isAddCardOpen, setIsAddCardOpen] = useState(false);\n  const [isEditColumnOpen, setIsEditColumnOpen] = useState(false);\n\n  const closeAddCard = () => setIsAddCardOpen(false);\n  const handleClick = () => setIsAddCardOpen(true);\n\n  const openEditColumn = () => setIsEditColumnOpen(true);\n  const closeEditColumn = () => setIsEditColumnOpen(false);\n\n  const handleDeleteColumn = async () => {\n    try {\n      await deleteColumn({ columnId });\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  return (\n    <ColumnWrapper>\n      <ColumnHeader>\n        <ColumnTitle>{columnTitle}</ColumnTitle>\n        <div>\n          <StyledIconButton onClick={openEditColumn} aria-label=\"edit\">\n            <svg\n              stroke=\"var(--primary-text-color)\"\n              strokeOpacity=\"0.5\"\n              width=\"16\"\n              height=\"16\"\n            >\n              <use href={sprite + '#icon-pencil'} />\n            </svg>\n          </StyledIconButton>\n          <StyledIconButton onClick={handleDeleteColumn} aria-label=\"remove\">\n            <svg\n              stroke=\"var(--primary-text-color)\"\n              strokeOpacity=\"0.5\"\n              width=\"16\"\n              height=\"16\"\n            >\n              <use href={sprite + '#icon-trash'} />\n            </svg>\n          </StyledIconButton>\n        </div>\n      </ColumnHeader>\n      <CardsList cols={cards}>\n        {cards?.map(({ title, description, priority, deadline, _id: id }) => {\n          return (\n            <TaskCard\n              key={id}\n              title={title}\n              description={description}\n              priority={priority}\n              deadline={deadline}\n              id={id}\n            />\n          );\n        })}\n      </CardsList>\n\n      <AddCardButton onClick={handleClick} title={'Add card'} />\n\n      {isAddCardOpen ? (\n        <AddCard\n          columnId={columnId}\n          modalType={'Add card'}\n          open={isAddCardOpen}\n          handleClose={closeAddCard}\n          close={closeAddCard}\n        />\n      ) : (\n        <></>\n      )}\n      {isEditColumnOpen ? (\n        <AddColumn\n          modalType={'Edit column'}\n          open={isEditColumnOpen}\n          columnId={columnId}\n          close={closeEditColumn}\n          titleValue={columnTitle}\n          column={columnData}\n        />\n      ) : (\n        <></>\n      )}\n    </ColumnWrapper>\n  );\n};\n\nexport default Column;\n","import styled from '@emotion/styled';\nimport { Field as FormicField } from 'formik';\n\nexport const Div = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: baseline;\n  margin-bottom: 2px;\n`;\nexport const FormPopup = styled.form`\n  background-color: var(--modal-bg-color);\n  height: 275px;\n  width: 200px;\n  border-radius: 8px;\n  padding: 24px;\n`;\n\nexport const Button = styled.button`\n  color: rgba(255, 255, 255, 0.5);\n  font-size: 12px;\n  font-weight: 400;\n  letter-spacing: -0.24px;\n  text-decoration-line: underline;\n\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n`;\nexport const LabelGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  justify-content: center;\n  /* align-items: baseline; */\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: center;\n  /* justify-content: center; */\n  gap: 8px;\n  cursor: pointer;\n  color: var(--secondary-text-color);\n  font-size: 12px;\n  font-weight: 400;\n  letter-spacing: -0.24px;\n  padding-top: 1px;\n  padding-bottom: 1px;\n`;\n\nexport const Field = styled(FormicField)`\n  width: 14px;\n  height: 14px;\n  background-color: transparent;\n\n  display: grid;\n  place-content: center;\n\n  ::after {\n    content: '';\n    left: 6.4%;\n    position: absolute;\n    transform: translate(6px, 1px);\n    width: 12px;\n    height: 12px;\n    border: 2.5px solid black;\n    border-radius: 50%;\n    opacity: 0;\n  }\n  ::before {\n    content: '';\n    width: 14px;\n    height: 14px;\n    border-radius: 50%;\n    transition: 120ms transform ease-in-out;\n    background-color: ${props => props.color};\n  }\n\n  :checked::after {\n    opacity: 1;\n  }\n`;\n\n// export const Field = styled.div`\n//   width: 14px;\n//   height: 14px;\n//   border-radius: 14px;\n//   position: absolute;\n//   top: 50%;\n//   left: 50%;\n//   transform: translate(-50%, -50%);\n\n//   background-color: ${props =>\n//     props.color === 'without' && 'rgb(128, 128, 128)'};\n//   background-color: ${props =>\n//     props.color === 'low' && 'rgba(143, 161, 208, 1)'};\n//   background-color: ${props =>\n//     props.color === 'medium' && 'rgba(224, 156, 181, 1)'};\n//   background-color: ${props =>\n//     props.color === 'high' && 'rgba(190, 219, 176, 1)'};\n\n//   transition: all 250ms linear;\n\n//   &.active {\n//     width: 6px;\n//     height: 6px;\n//   }\n// `;\n\nexport const RadioWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`;\n","import { Popper, Radio, Typography } from '@mui/material';\nimport { Formik } from 'formik';\nimport { useState } from 'react';\nimport {\n  Button,\n  Div,\n  FormPopup,\n  Label,\n  LabelGroup,\n  RadioWrap,\n} from './Filter.styled';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/boards/boardsAPISlice';\n\nconst labelStyle = {\n  color: 'var(--primary-text-color)',\n  fontSize: '12px',\n  fontStyle: 'normal',\n  fontWeight: 500,\n  lineHeight: 'normal',\n  letterSpacing: -0.36,\n};\n\nconst titleStyle = {\n  color: 'var(--primary-text-color)',\n  fontSize: '14px',\n  fontFamily: 'Poppins',\n  fontWeight: '500',\n  wordWrap: 'break-word',\n  marginBottom: '14px',\n  paddingBottom: '14px',\n  borderBottom: '0.50px var(--border-filters) solid',\n};\n\nexport const Filter = ({ filter, open, onClose, anchorEl }) => {\n  const [currentPrority, setCurrentPrority] = useState('');\n  const [isShowAllActive, setIsShowAllActive] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const initialValues = {\n    currentPrority: '',\n  };\n\n  const controlProps = item => ({\n    checked: currentPrority === item,\n    onChange: handleChange,\n    value: item,\n  });\n  const handleChange = event => {\n    dispatch(setFilter(event.target.value));\n    setCurrentPrority(event.target.value);\n    setIsShowAllActive(false);\n  };\n\n  const handleShowAll = () => {\n    setCurrentPrority('');\n    dispatch(setFilter(''));\n    setIsShowAllActive(true);\n  };\n\n  const handleRadioClick = () => {\n    if (isShowAllActive) {\n      setIsShowAllActive(false);\n    }\n  };\n\n  return (\n    <Popper\n      open={open}\n      placement={'bottom-end'}\n      anchorEl={anchorEl}\n      onClose={onClose}\n    >\n      <Formik initialValues={initialValues}>\n        <FormPopup onChange={handleChange}>\n          <Typography variant=\"h3\" sx={titleStyle}>\n            Filters\n          </Typography>\n          <LabelGroup role=\"group\" aria-labelledby=\"my-radio-group\">\n            <Div>\n              <Typography variant=\"h2\" sx={labelStyle}>\n                Label Color\n              </Typography>\n              <Button\n                type=\"button\"\n                onClick={handleShowAll}\n                disabled={isShowAllActive}\n              >\n                Show all\n              </Button>\n            </Div>\n            <RadioWrap>\n              <Label>\n                <Radio\n                  onClick={handleRadioClick}\n                  checked={currentPrority === '0'}\n                  name=\"currentPrority\"\n                  {...controlProps('0')}\n                  size=\"small\"\n                  sx={{ color: 'grey', '&.Mui-checked': { color: 'grey' } }}\n                />\n                Without priority\n              </Label>\n              <Label>\n                <Radio\n                  onClick={handleRadioClick}\n                  checked={currentPrority === '1'}\n                  name=\"currentPrority\"\n                  {...controlProps('1')}\n                  size=\"small\"\n                  sx={{\n                    color: '#8FA1D0',\n                    '&.Mui-checked': { color: '#8FA1D0' },\n                  }}\n                />\n                Low\n              </Label>\n              <Label>\n                <Radio\n                  onClick={handleRadioClick}\n                  checked={currentPrority === '2'}\n                  name=\"currentPrority\"\n                  {...controlProps('2')}\n                  size=\"small\"\n                  sx={{\n                    color: '#E09CB5',\n                    '&.Mui-checked': { color: '#E09CB5' },\n                  }}\n                />\n                Medium\n              </Label>\n\n              <Label>\n                <Radio\n                  onClick={handleRadioClick}\n                  checked={currentPrority === '3'}\n                  name=\"currentPrority\"\n                  {...controlProps('3')}\n                  size=\"small\"\n                  sx={{\n                    color: '#BEDBB0',\n                    '&.Mui-checked': { color: '#BEDBB0' },\n                  }}\n                />\n                High\n              </Label>\n            </RadioWrap>\n          </LabelGroup>\n        </FormPopup>\n      </Formik>\n    </Popper>\n  );\n};\n\n// export const Filter = ({ filter, open, onClose }) => {\n//   const [currentPrority, setCurrentPrority] = useState('');\n//   const [isShowAllActive, setIsShowAllActive] = useState(false);\n\n//   const dispatch = useDispatch();\n\n//   const initialValues = {\n//     currentPrority: '',\n//   };\n\n//   const controlProps = item => ({\n//     checked: currentPrority === item,\n//     onChange: handleChange,\n//     value: item,\n//   });\n//   const handleChange = event => {\n//     // const filter = event.target.value;\n//     // filter(event.target.value);\n//     dispatch(setFilter(event.target.value));\n//     setCurrentPrority(event.target.value);\n//     // dispatch(setFilterCards(filter));\n//     setIsShowAllActive(false);\n//   };\n\n//   const handleShowAll = () => {\n//     setCurrentPrority('');\n//     // dispatch(setFilterCards(''));\n//     setIsShowAllActive(true);\n//   };\n\n//   const handleRadioClick = () => {\n//     if (isShowAllActive) {\n//       setIsShowAllActive(false);\n//     }\n//   };\n//   console.log(currentPrority);\n\n//   return (\n//     <ModalLayout open={open} handleClose={onClose}>\n//       <Typography variant=\"h2\" sx={titleStyle}>\n//         Filters\n//       </Typography>\n//       <Formik initialValues={initialValues}>\n//         <Form onChange={handleChange}>\n//           <LabelGroup role=\"group\" aria-labelledby=\"my-radio-group\">\n//             <Div>\n//               <Typography variant=\"h2\" sx={labelStyle}>\n//                 Label Color\n//               </Typography>\n//               <Button\n//                 type=\"button\"\n//                 onClick={handleShowAll}\n//                 disabled={isShowAllActive}\n//               >\n//                 Show all\n//               </Button>\n//             </Div>\n//             <RadioWrap>\n//               <Label>\n//                 <Radio\n//                   onClick={handleRadioClick}\n//                   checked={currentPrority === '0'}\n//                   name=\"currentPrority\"\n//                   {...controlProps('0')}\n//                   size=\"small\"\n//                   sx={{ color: 'grey', '&.Mui-checked': { color: 'grey' } }}\n//                 />\n//                 Without priority\n//               </Label>\n//               <Label>\n//                 <Radio\n//                   onClick={handleRadioClick}\n//                   checked={currentPrority === '1'}\n//                   name=\"currentPrority\"\n//                   {...controlProps('1')}\n//                   size=\"small\"\n//                   sx={{\n//                     color: '#8FA1D0',\n//                     '&.Mui-checked': { color: '#8FA1D0' },\n//                   }}\n//                 />\n//                 Low\n//               </Label>\n//               <Label>\n//                 <Radio\n//                   onClick={handleRadioClick}\n//                   checked={currentPrority === '2'}\n//                   name=\"currentPrority\"\n//                   {...controlProps('2')}\n//                   size=\"small\"\n//                   sx={{\n//                     color: '#E09CB5',\n//                     '&.Mui-checked': { color: '#E09CB5' },\n//                   }}\n//                 />\n//                 Medium\n//               </Label>\n\n//               <Label>\n//                 <Radio\n//                   onClick={handleRadioClick}\n//                   checked={currentPrority === '3'}\n//                   name=\"currentPrority\"\n//                   {...controlProps('3')}\n//                   size=\"small\"\n//                   sx={{\n//                     color: '#BEDBB0',\n//                     '&.Mui-checked': { color: '#BEDBB0' },\n//                   }}\n//                 />\n//                 High\n//               </Label>\n//             </RadioWrap>\n//           </LabelGroup>\n//         </Form>\n//       </Formik>\n//     </ModalLayout>\n//   );\n// };\n","import sprite from '../../assets/images/sprite.svg';\nimport { useEffect, useState } from 'react';\nimport { Filter } from './Filter';\n\nconst {\n  Container,\n  TitleDashBoard,\n  FilterButton,\n  TitleFilter,\n} = require('./HeaderDashboard.styled');\nexport const HeaderDashboard = ({ title, filter }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const toggleModal = e => {\n    setIsOpen(!isOpen);\n    setAnchorEl(e.currentTarget);\n  };\n\n  const handleKeyDown = e => {\n    if (e.key === 'Escape') {\n      setIsOpen(false);\n      window.removeEventListener('keydown', handleKeyDown);\n    }\n  };\n  const handleWindowClick = e => {\n    if (e.target.nodeName === 'DIV') {\n      setIsOpen(false);\n      window.removeEventListener('mousedown', handleWindowClick);\n    }\n  };\n  useEffect(() => {\n    if (isOpen) {\n      window.addEventListener('mousedown', handleWindowClick);\n      window.addEventListener('keydown', handleKeyDown);\n    }\n  });\n  return (\n    <Container>\n      <TitleDashBoard>{title}</TitleDashBoard>\n      <FilterButton onClick={toggleModal}>\n        <svg\n          aria-label=\"filter icon\"\n          width=\"16\"\n          height=\"16\"\n          stroke=\"var(--secondary-text-color)\"\n        >\n          <use href={sprite + '#icon-filter'}></use>\n        </svg>\n        <TitleFilter>Filters</TitleFilter>\n      </FilterButton>\n      {isOpen && (\n        <Filter\n          filter={filter}\n          open={isOpen}\n          onClose={toggleModal}\n          anchorEl={anchorEl}\n        />\n      )}\n    </Container>\n  );\n};\n","import styled from '@emotion/styled';\nimport { SIDEBARWIDTH } from 'components/Sidebar/SidebarCONSTANTS';\nimport bgData from './bg-data.json';\n\nexport const MainWrapper = styled.main`\n  min-height: 100%;\n  background-color: var(--primary-bg-color);\n  background-repeat: no-repeat;\n  background-size: cover;\n  padding-bottom: 18px;\n  overflow-y: hidden;\n  @media screen and (min-width: 0px) {\n    padding-top: 60px;\n    min-height: 100vh;\n    @media (-webkit-min-device-pixel-ratio: 1) {\n      background-image: ${props => {\n        if (props.index === undefined) {\n          return 'none';\n        }\n        return `url(${bgData[2].mobile[0][props.index]})`;\n      }};\n    }\n    @media (-webkit-min-device-pixel-ratio: 2) {\n      background-image: ${props => {\n        if (props.index === undefined) {\n          return 'none';\n        }\n        return `url(${bgData[2].mobile[1][props.index]})`;\n      }};\n    }\n    @media (-webkit-min-device-pixel-ratio: 3) {\n      background-image: ${props => {\n        if (props.index === undefined) {\n          return 'none';\n        }\n        return `url(${bgData[2].mobile[2][props.index]})`;\n      }};\n    }\n  }\n\n  @media screen and (min-width: 767px) {\n    padding-top: 68px;\n    height: 100vh;\n    @media (-webkit-min-device-pixel-ratio: 1) {\n      background-image: ${props => {\n        if (props.index === undefined) {\n          return 'none';\n        }\n        return `url(${bgData[1].laptop[0][props.index]})`;\n      }};\n    }\n    @media (-webkit-min-device-pixel-ratio: 2) {\n      background-image: ${props => {\n        if (props.index === undefined) {\n          return 'none';\n        }\n        return `url(${bgData[1].laptop[1][props.index]})`;\n      }};\n    }\n    @media (-webkit-min-device-pixel-ratio: 3) {\n      background-image: ${props => {\n        if (props.index === undefined) {\n          return 'none';\n        }\n        return `url(${bgData[1].laptop[2][props.index]})`;\n      }};\n    }\n  }\n\n  @media screen and (min-width: 1400px) {\n    height: 100vh;\n    @media (-webkit-min-device-pixel-ratio: 1) {\n      background-image: ${props => {\n        if (props.index === undefined) {\n          return 'none';\n        }\n        return `url(${bgData[0].desktop[0][props.index]})`;\n      }};\n    }\n    @media (-webkit-min-device-pixel-ratio: 2) {\n      background-image: ${props => {\n        if (props.index === undefined) {\n          return 'none';\n        }\n        return `url(${bgData[0].desktop[1][props.index]})`;\n      }};\n    }\n    @media (-webkit-min-device-pixel-ratio: 3) {\n      background-image: ${props => {\n        if (props.index === undefined) {\n          return 'none';\n        }\n        return `url(${bgData[0].desktop[2][props.index]})`;\n      }};\n    }\n\n    background-repeat: no-repeat;\n    background-size: cover;\n  }\n`;\n\nexport const MainContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n\n  height: 100vh;\n\n  padding-left: 24px;\n  padding-right: 24px;\n  padding-bottom: 28px;\n  margin-bottom: 28px;\n  @media screen and (min-width: 0px) {\n    width: 100vw;\n    height: 100%;\n  }\n  @media screen and (min-width: 767px) {\n  }\n  @media screen and (min-width: 1400px) {\n    width: calc(100vw - ${SIDEBARWIDTH}px);\n  }\n`;\n\nexport const ColumnsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 34px;\n  align-items: top;\n  overflow: hidden;\n  margin-bottom: auto;\n  ::-webkit-scrollbar {\n    border-radius: 5px;\n    margin-left: 4px;\n    height: 8px;\n    background-color: var(--screen-page-scrollbar-bg-color);\n  }\n  ::-webkit-scrollbar-thumb {\n    background-color: var(--screen-page-scrollbar-thumb-color);\n    border-radius: 5px;\n  }\n  ::-webkit-scrollbar-thumb:hover {\n    background-color: var(--screen-page-scrollbar-thumb-color-HOVER);\n  }\n\n  @media screen and (min-width: 767px) {\n    display: grid;\n    margin-bottom: auto;\n    grid-template-columns: ${props => {\n      return `repeat(${props.cols}, 334px)`;\n    }};\n    overflow-x: ${props => {\n      if (props.cols > 3) {\n        return 'scroll';\n      }\n      return 'hidden';\n    }};\n  }\n\n  @media screen and (min-width: 768px) and (max-width: 1139px) {\n    display: grid;\n    margin-bottom: auto;\n\n    overflow-x: ${props => {\n      if (props.cols > 2) {\n        return 'scroll';\n      }\n      return 'hidden';\n    }};\n  }\n\n  @media screen and (min-width: 1140px) and (max-width: 1400px) {\n    display: grid;\n    margin-bottom: auto;\n\n    overflow-x: ${props => {\n      if (props.cols > 4) {\n        return 'scroll';\n      }\n      return 'hidden';\n    }};\n  }\n`;\n\nexport const screenSyles = {\n  pt: { 0: 9.25, 768: 11, 1440: 9.75 },\n  pb: { 0: 3, 768: 4, 1440: 1 },\n  pl: { 0: 2.5, 768: 4, 1440: 3 },\n  pr: { 0: 2.5, 768: 4, 1440: 3 },\n  height: '100vh',\n  width: { 0: '100vw', 1440: `calc(100vw - ${SIDEBARWIDTH}px)` },\n  flexGrow: 1,\n\n  backgroundColor: 'var(--primary-bg-color)',\n};\n","import React, { useEffect, useState } from 'react';\nimport { ButtonAdd } from 'components/Buttons/Button';\nimport AddColumn from 'components/AddColumn/AddColumn';\nimport Column from '../../components/Column/Column';\nimport { HeaderDashboard } from 'components/HeaderDashboard/HeaderDashboard';\nimport { API } from 'Services/API';\nimport { useParams } from 'react-router-dom';\nimport {\n  MainWrapper,\n  ColumnsWrapper,\n  MainContainer,\n} from './ScreenPage.styled';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst ScreensPage = () => {\n  const { boardId } = useParams();\n  const [filterValue, setFilterValue] = useState('');\n  const stateFilter = useSelector(state => state.boards.filter);\n  const dispatch = useDispatch();\n\n  const reqData = {\n    id: boardId,\n    filter: filterValue,\n  };\n  const [isAddColumnOpen, setIsAddColumnOpen] = useState(false);\n\n  const {  data, isFetching } = API.useGetBoardContentByIdQuery(\n    reqData,\n    {\n      refetchOnMountOrArgChange: true,\n      // skip: false,\n    }\n  );\n\n\n  const openAddColumn = () => setIsAddColumnOpen(true);\n  const closeAddColumn = () => setIsAddColumnOpen(false);\n\n  useEffect(() => {\n    setFilterValue(stateFilter);\n    \n  }, [dispatch, stateFilter]);\n\n  return (\n    <MainWrapper index={data?.background}>\n        <HeaderDashboard filter={setFilterValue} title={data?.title} />\n      <MainContainer>\n\n        <ColumnsWrapper cols={!data?.content ? 1 : data?.content?.length + 1}>\n          {data?.content?.map(\n            ({ _id: columnId, title: columnTitle, cards }, index) => (\n              <Column\n                isFetching={isFetching}\n                key={columnId}\n                columnData={data.content[index]}\n                columnTitle={columnTitle}\n                columnId={columnId}\n                cards={cards}\n              />\n            )\n          )}\n\n          <ButtonAdd onClick={openAddColumn}></ButtonAdd>\n        </ColumnsWrapper>\n\n        {isAddColumnOpen ? (<AddColumn\n          modalType={'Add column'}\n          open={isAddColumnOpen}\n          boardId={boardId}\n          close={closeAddColumn}\n        />) : <></>}\n      </MainContainer>\n    </MainWrapper>\n  );\n};\n\nexport default ScreensPage;\n"],"names":["API","useRegisterMutation","useLogInMutation","useLogOutMutation","useUpdateAvatarMutation","useGetCurrentUserQuery","useHelpUserMutation","useThemeUserMutation","useUpdateUserMutation","useGetBoardsQuery","useGetBoardContentByIdQuery","useGetBoardByIdQuery","useAddBoardsMutation","useDeleteBoardByIdMutation","useUpdateBoardByIdMutation","useAddColumnMutation","useUpdateColumnByIdMutation","useDeleteColumnByIdMutation","useGetAllCardsQuery","useAddCardMutation","useUpdateCardByIdMutation","useDeleteCardByIdMutation","useUpdateCardColumnByIdMutation","useLoginGoogleUserMutation","Container","styled","_templateObject","_taggedTemplateLiteral","TitleDashBoard","_templateObject2","FilterButton","_templateObject3","TitleFilter","_templateObject4","FormStyled","MUI","display","flexDirection","gap","ButtonClose","InputStyled","TransparentSVG","UlStyled","UlBgStyled","_templateObject5","ImgStyled","_templateObject6","_templateObject7","LiIconsStyled","_templateObject8","modalStyles","position","top","left","transform","borderRadius","border","background","padding","fontFamily","titleStyles","color","fontSize","fontStyle","fontWeight","lineHeight","letterSpacing","marginBottom","_ref","title","open","handleClose","children","_jsx","_Fragment","Modal","onClose","_jsxs","Box","sx","Typography","variant","type","onClick","style","stroke","width","height","href","sprite","SIDEBARWIDTH","SIDEBARMOBILEWIDTH","TextareaStyled","SubWrapper","DateWrapper","DateText","SubTitle","_templateObject9","modalType","boardId","close","columnId","titleValue","_API$useAddColumnMuta","addColumn","_slicedToArray","_API$useUpdateColumnB","updateColumn","validationSchema","Yup","min","required","formikTitle","_useFormik","useFormik","initialValues","onSubmit","handleColumnSubmit","enableReinitialize","values","errors","touched","handleBlur","handleChange","handleReset","handleSubmit","isValid","dirty","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","t0","console","log","message","abrupt","Notiflix","t1","stop","_x","apply","arguments","ModalLayout","id","name","placeholder","onChange","onBlur","value","ErrorMessage","render","msg","concat","ButtonWithIcon","disabled","ColorRadioButtons","onColorChange","_ref$value","_React$useState","React","_React$useState2","selectedValue","setSelectedValue","event","target","controlProps","item","checked","Radio","_objectSpread","DropDawnBtn","DropDownSVG","PopupStyles","backgroundColor","anchorEl","Popover","anchorOrigin","vertical","horizontal","transformOrigin","DateCalendarStyled","DateCalendar","DatePickerStyles","m","overflow","format","disablePast","showDaysOutsideCurrentMonth","success","_ref$cardId","cardId","_ref$titleValue","_ref$descrValue","descrValue","_ref$priorityValue","priorityValue","deadlineValue","_useState","useState","_useState2","date","setDate","_useState3","_useState4","dateValue","setDateValue","_useState5","toString","_useState6","setColor","_useState7","_useState8","setAnchorEl","_useState9","_useState10","isPopupOpen","setIsPopupOpen","_API$useAddCardMutati","addCards","_API$useUpdateCardByI","updateCard","handleSubmitForm","description","ISODate","cardData","_ISODate","_cardData","formatISO","representation","priority","deadline","status","data","_x2","trim","strict","cardInitialValues","_ref3","useEffect","currentDate","Date","dateISO","parseISO","DropDownIcon","e","currentTarget","Popup","DatePickerCmponent","dateFns","getPriorityColor","getPriorityText","TypographyStylesTitle","TypographyStylesPriority","justifyContent","lineHeigt","CardContentStyles","borderBottom","paddingBottom","ActionsBox","alignItems","CardActionsStyled","Circle","props","TypographyText","CardStyles","StyledIconButton","IconButton","ListMenuStyles","MenuItem","TextContainer","expanded","Text","ReadMore","ShowMoreButton","TruncatedText","text","setExpanded","moveCard","_API$useDeleteCardByI","deleteCardById","isAddCardOpen","setIsAddCardOpen","dispatch","useDispatch","closeAddCard","handleCloseMenu","handleMoveCard","newColumn","handleDeleteCard","response","sent","deleteCard","error","formattedDate","isDeadlineToday","CardContent","component","CardActions","AddCard","Menu","Boolean","PaperProps","ColumnWrapper","ColumnHeader","ColumnTitle","CardsList","cols","length","AddCardButton","columnTitle","cards","columnData","_API$useDeleteColumnB","isFetching","deleteColumn","isEditColumnOpen","setIsEditColumnOpen","handleDeleteColumn","strokeOpacity","map","_id","TaskCard","AddColumn","column","Div","FormPopup","Button","LabelGroup","Label","RadioWrap","FormicField","labelStyle","titleStyle","wordWrap","Filter","filter","currentPrority","setCurrentPrority","isShowAllActive","setIsShowAllActive","setFilter","handleRadioClick","Popper","placement","Formik","role","size","_require","require","HeaderDashboard","isOpen","setIsOpen","toggleModal","handleKeyDown","key","window","removeEventListener","handleWindowClick","nodeName","addEventListener","MainWrapper","undefined","index","bgData","MainContainer","ColumnsWrapper","_data$content","_data$content2","useParams","filterValue","setFilterValue","stateFilter","useSelector","state","boards","reqData","isAddColumnOpen","setIsAddColumnOpen","_API$useGetBoardConte","refetchOnMountOrArgChange","content","Column","ButtonAdd"],"sourceRoot":""}