{"version":3,"file":"static/js/544.8de791dd.chunk.js","mappings":"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","sources":["Services/API.js","components/Buttons/Button.jsx","components/HeaderDashboard/HeaderDashboard.styled.jsx","components/ModalBoard/ModalBoard.styled.jsx","components/ModalLayout/ModalLayout.jsx","components/Sidebar/SidebarCONSTANTS.js","components/AddCard/AddCard.styled.jsx","components/AddColumn/AddColumn.jsx","components/ColorRadioButtons/ColorRadioButtons.jsx","components/Icons/DropDownIcon/DropDownIcon.styled.jsx","components/Icons/DropDownIcon/DropDownIcon.jsx","components/Popup/Popup.jsx","components/DatePicker/DatePicker.styled.jsx","components/DatePicker/DatePicker.jsx","components/AddCard/AddCard.jsx","components/TaskCard/TaskCard.styled.jsx","components/TaskCard/TaskCard.jsx","components/Column/Column.styled.jsx","components/Column/Column.jsx","components/HeaderDashboard/Filter.styled.jsx","components/HeaderDashboard/Filter.jsx","components/HeaderDashboard/HeaderDashboard.jsx","pages/ScreensPage/ScreenPage.styled.jsx","pages/ScreensPage/ScreensPage.jsx"],"sourcesContent":["import {\n  useRegisterMutation,\n  useLogInMutation,\n  useLogOutMutation,\n  useGetCurrentUserQuery,\n  useUpdateUserMutation,\n  useThemeUserMutation,\n  useUpdateAvatarMutation,\n  useHelpUserMutation,\n  useGetBoardsQuery,\n  useGetBoardContentByIdQuery,\n  useGetBoardByIdQuery,\n  useAddBoardsMutation,\n  useDeleteBoardByIdMutation,\n  useUpdateBoardByIdMutation,\n  useAddColumnMutation,\n  useUpdateColumnByIdMutation,\n  useDeleteColumnByIdMutation,\n  useGetAllCardsQuery,\n  useAddCardMutation,\n  useUpdateCardByIdMutation,\n  useDeleteCardByIdMutation,\n  useUpdateCardColumnByIdMutation,\n  useLoginGoogleUserMutation\n} from './API_Component';\n\nexport const API = {\n  useRegisterMutation,\n  useLogInMutation,\n  useLogOutMutation,\n  useUpdateAvatarMutation,\n  useGetCurrentUserQuery,\n  useHelpUserMutation,\n  useThemeUserMutation,\n  useUpdateUserMutation,\n  useGetBoardsQuery,\n  useGetBoardContentByIdQuery,\n  useGetBoardByIdQuery,\n  useAddBoardsMutation,\n  useDeleteBoardByIdMutation,\n  useUpdateBoardByIdMutation,\n  useAddColumnMutation,\n  useUpdateColumnByIdMutation,\n  useDeleteColumnByIdMutation,\n  useGetAllCardsQuery,\n  useAddCardMutation,\n  useUpdateCardByIdMutation,\n  useDeleteCardByIdMutation,\n  useUpdateCardColumnByIdMutation,\n  useLoginGoogleUserMutation\n};\n","import * as React from 'react';\nimport Button from '@mui/material/Button';\n\nimport { Box, IconButton } from '@mui/material';\n\nimport sprite from '../../assets/images/sprite.svg';\n\n// Кнопка для модалок с иконкой\nexport const ButtonWithIcon = ({ title, onClick, type, disabled }) => {\n  return (\n    <Button\n      disabled={disabled}\n      onClick={onClick}\n      type={type}\n      variant=\"contained\"\n      disableElevation\n      sx={{\n        display: 'flex',\n        gap: '8px',\n        color: 'var(--button-text-color)',\n        fontFamily: 'Poppins, sans-serif',\n        alignItems: 'center',\n        textTransform: 'none',\n        borderRadius: '8px',\n        letterSpacing: '-0.02em',\n        fontSize: '14px',\n        // background: '#BEDBB0',\n        background: ' var(--button-bg-color)',\n        lineHeight: '21px',\n        fontWeight: '500',\n        fontStyle: 'normal',\n        width: '100%',\n        height: '56px',\n        '&:hover': {\n          // background: '#9DC888',\n          background: 'var( --button-bg-color-hover)',\n        },\n      }}\n    >\n      <Box\n        sx={{\n          width: '28px',\n          height: '28px',\n          background: 'var(--icon-plus-bg-color)',\n          borderRadius: '6px',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <svg width=\"14\" height=\"14\" stroke=\"var(--icon-plus-color)\">\n          <use href={sprite + '#icon-add'}></use>\n        </svg>\n      </Box>\n      {title}\n    </Button>\n  );\n};\n\n// Кнопка для модалок без иконки\nexport const ButtonWithoutIcon = ({ title, onClick, type }) => {\n  return (\n    <Button\n      type={type}\n      onClick={onClick}\n      disableElevation\n      sx={{\n        display: 'flex',\n        color: ' var(--btn-text-color)',\n        fontFamily: 'Poppins, sans-serif',\n        alignItems: 'center',\n        textTransform: 'none',\n        borderRadius: '8px',\n        marginTop: '10px',\n        letterSpacing: '-0.02em',\n        fontSize: '14px',\n        // background: '#BEDBB0',\n        background: 'var(--button-bg-color)',\n        lineHeight: '21px',\n        fontWeight: '500',\n        fontStyle: 'normal',\n        width: '100%',\n        height: '49px',\n        '&:hover': {\n          background: 'var( --button-bg-color-hover)',\n        },\n      }}\n    >\n      {title}\n    </Button>\n  );\n};\n\n// Кнопка для добавления колонки\nexport const ButtonAdd = ({ onClick }) => {\n  return (\n    <Button\n      onClick={onClick}\n      variant=\"contained\"\n      disableElevation\n      sx={{\n        display: 'flex',\n        gap: '8px',\n        color: 'var(--primary-text-color)',\n        fontFamily: 'Poppins, sans-serif',\n        alignItems: 'center',\n        textTransform: 'none',\n        borderRadius: '8px',\n        letterSpacing: '-0.02em',\n        fontSize: '14px',\n        background: 'var(--button-add-bg-color)',\n        lineHeight: '21px',\n        fontWeight: '500',\n        fontStyle: 'normal',\n        width: '334px',\n        height: '56px',\n        '&:hover': {\n          background: 'var(--button-add-bg-color)',\n        },\n      }}\n    >\n      <Box\n        sx={{\n          width: '28px',\n          height: '28px',\n          background: 'var(--button-add-box-color)',\n          borderRadius: '6px',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <svg width=\"14\" height=\"14\" stroke=\"var(--icon-add-colors)\">\n          <use href={sprite + '#icon-add'}></use>\n        </svg>\n      </Box>\n      Add another column\n    </Button>\n  );\n};\n\n//Кнопка для Sidebar\nexport const ButtonSidebar = ({ onClick }) => {\n  return (\n    <IconButton\n      type=\"button\"\n      onClick={onClick}\n      sx={{\n        width: '40px',\n        height: '36px',\n        borderRadius: '6px',\n        background: 'var(--sidebar-icon-plus-bg-color)',\n\n        '&:hover, &:focus': {\n          background: 'var(--sidebar-icon-plus-bg-color-HOVER-FOCUS)',\n        },\n      }}\n    >\n      <svg width=\"20\" height=\"20\" stroke=\"var(--sidebar-icon-plus-color)\">\n        <use href={sprite + '#icon-add'}></use>\n      </svg>\n    </IconButton>\n  );\n};\n","import styled from '@emotion/styled';\nexport const Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  padding-bottom: 15px;\n  // padding: 14px 24px;\n  // background: #1f1f1f;\n  font-family: Poppins;\n\n  //   @media (min-width: 1280px) {\n  //       height: 48px;\n  //   };\n  //   @media (min-width: 768px) {\n  //       height: 80px;\n  //   };\n  //   @media (min-width: 375px) {\n  //       height: 134px;\n  //   };\n  //   @media (max-width: 374px) {\n  //       max-height: 134px;\n  //   };\n`;\n\nexport const TitleDashBoard = styled.p`\n  font-size: 18px;\n  font-weight: 500;\n  letter-spacing: -0.36px;\n  margin: 0;\n  color: var(--primary-text-color);\n`;\n\nexport const FilterButton = styled.button`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 2px;\n  background-color: transparent;\n  border: none;\n  outline: none;\n  opacity: 0.8;\n  cursor: pointer;\n`;\nexport const TitleFilter = styled.p`\n  font-size: 14px;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n  color: var(--secondary-text-color);\n  margin-left: 8px;\n  font-family: Poppins;\n`;\n","import styled from '@emotion/styled';\nimport { styled as MUI } from '@mui/material/styles';\n\nexport const FormStyled = MUI('form')({\n  display: 'flex',\n  flexDirection: 'column',\n  gap: '14px',\n});\n\nexport const ButtonClose = styled.button`\n  font-family: Poppins;\n  margin: 0;\n  padding: 0;\n  position: absolute;\n  right: 10px;\n  top: 10px;\n  width: 24px;\n  height: 24px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  background-color: transparent;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    transform: scale(1.2);\n    /* border: 1px solid #ffffff;\n    color: rgba(255, 255, 255, 1); */\n  }\n`;\n\nexport const InputStyled = styled.input`\n  font-family: Poppins;\n  resize: none;\n  color: var(--primary-text-color);\n  padding: 14px 14px;\n  background-color: transparent;\n  border: 1px solid rgba(190, 219, 176, 0.4);\n  border-radius: 8px;\n  margin-bottom: 10px;\n  :focus {\n    border: 1px solid #bedbb0;\n    outline: none;\n  }\n  ::placeholder {\n    color: var(--primary-text-color);\n    opacity: 30%;\n  }\n`;\n\nexport const TransparentSVG = styled.svg`\n  width: 18px;\n  height: 18px;\n  // stroke: rgba(255, 255, 255, 0.5);\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    stroke: #bedbb0;\n  }\n`;\n\nexport const UlStyled = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 6px;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  margin-bottom: 14px;\n`;\n\nexport const UlBgStyled = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 4px;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  margin-bottom: 14px;\n  max-width: 260px;\n`;\n\nexport const LiStyled = styled.li`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 28px;\n  height: 28px;\n  border-radius: 5px;\n\n  &:hover,\n  &:focus {\n    border: 1px solid #bedbb0;\n  }\n`;\n\nexport const ImgStyled = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  object-position: center;\n  cursor: pointer;\n`;\n\nexport const LiIconsStyled = styled.li`\n  display: flex;\n  width: 20px;\n  height: 20px;\n  align-items: center;\n  justify-content: center;\n\n  &:hover,\n  &:focus {\n    border-radius: 5px;\n    background-color: rgba(190, 219, 176, 0.2);\n  }\n`;\n","import { Modal, Box, Typography } from '@mui/material';\nimport sprite from '../../assets/images/sprite.svg';\nimport { ButtonClose } from 'components/ModalBoard/ModalBoard.styled';\n\n// import { useState } from 'react';\n\nconst modalStyles = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  borderRadius: 2,\n  border: '1px solid rgba(190, 219, 176, 0.50)',\n  background: 'var(--modal-bg-color)',\n  padding: 3,\n  fontFamily: 'Poppins',\n};\n\nconst titleStyles = {\n  color: 'var(--primary-text-color)',\n  fontSize: '18px',\n  fontStyle: 'normal',\n  fontWeight: 500,\n  fontFamily: 'Poppins',\n  lineHeight: 'normal',\n  letterSpacing: -0.36,\n  marginBottom: 3,\n};\n\nconst ModalLayout = ({ title, open, handleClose, children }) => {\n  return (\n    <>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-title\"\n        aria-describedby=\"modal-description\"\n      >\n        <Box sx={modalStyles}>\n          <Typography variant=\"h2\" sx={titleStyles}>\n            {title}\n          </Typography>\n          <ButtonClose type=\"button\" onClick={handleClose}>\n            <svg\n              style={{ stroke: 'var(--primary-text-color)' }}\n              width=\"18\"\n              height=\"18\"\n            >\n              <use href={sprite + '#icon-x-close'} />\n            </svg>\n          </ButtonClose>\n          {children}\n        </Box>\n      </Modal>\n    </>\n  );\n};\n\nexport default ModalLayout;\n","export const SIDEBARWIDTH = 260;\nexport const SIDEBARMOBILEWIDTH = 225;\n  \n\n\n\n","import styled from '@emotion/styled';\n\nexport const ComponentWrapper = styled.div`\n  padding: 0px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const FormStyled = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 350px;\n  gap: 14px;\n  margin-bottom: 0px;\n`;\n\nexport const InputStyled = styled.input`\n  resize: none;\n  color: var(--primary-text-color);\n  padding: 14px 14px;\n  background-color: transparent;\n  border: 1px solid #bedbb0;\n  border-radius: 8px;\n  :focus {\n    border: 2px solid #bedbb0;\n    outline: none;\n  }\n  ::placeholder {\n    color: var(--primary-text-color);\n    opacity: 30%;\n  }\n`;\n\nexport const TextareaStyled = styled.textarea`\n  display: flex;\n  min-height: 155px;\n  color: var(--primary-text-color);\n  resize: none;\n  padding: 14px 14px;\n  background-color: transparent;\n  border: 1px solid #bedbb0;\n  border-radius: 8px;\n  text-align: top;\n  :focus {\n    border: 2px solid #bedbb0;\n    outline: none;\n  }\n  ::placeholder {\n    color: var(--primary-text-color);\n    opacity: 30%;\n  }\n`;\n\nexport const LabelColorBox = styled.div`\n  display: flex;\n  gap: 4px;\n`;\n\nexport const SubWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: left;\n  gap: 4px;\n`;\n\nexport const DateWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 4px;\n`;\n\nexport const DateText = styled.p`\n  color: var(--default-screen-page-link-color);\n  font-size: 14px;\n  margin: 0;\n`;\n\nexport const SubTitle = styled.p`\n  color: var(--primary-text-color);\n  font-size: 12px;\n  opacity: 50%;\n  margin: 0;\n`;\n","import React, { useState } from 'react';\nimport { API } from 'Services/API';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { FormStyled, InputStyled } from '../AddCard/AddCard.styled';\nimport { ButtonWithIcon } from 'components/Buttons/Button';\nimport ModalLayout from '../ModalLayout/ModalLayout';\nimport Notiflix from 'notiflix';\n\nconst AddColumn = ({\n  open,\n  modalType,\n  boardId,\n  close,\n  columnId,\n  titleValue,\n}) => {\n  const [columnTitle, setColumnTitle] = useState(titleValue);\n  const [addColumn] = API.useAddColumnMutation();\n  const [updateColumn] = API.useUpdateColumnByIdMutation();\n\n  const validationSchema = Yup.object({\n    title: Yup.string()\n      .min(2, 'Must be more then 2 symbols')\n      .required('Title is required'),\n  });\n\n  const formikTitle =\n    modalType === 'Add column' ? { title: '' } : { title: columnTitle };\n\n  const formik = useFormik({\n    initialValues: formikTitle,\n    onSubmit: title => handleSubmit(title),\n    validationSchema,\n  });\n\n  const handleSubmit = async title => {\n    if (modalType === 'Add column') {\n      try {\n        await addColumn({ boardId, title });\n      } catch (error) {\n        console.log(error.message);\n      }\n    }\n\n    if (modalType === 'Edit column') {\n      if (title.title === titleValue) {\n        return Notiflix.Notify.failure('Nothing changed');\n      }\n      setColumnTitle('');\n      try {\n        await updateColumn({ columnId, title });\n        Notiflix.Notify.success('Your column successfully updated');\n        \n      } catch (error) {\n        console.log(error.message);\n      }\n    }\n    formik.handleReset();\n    close();\n  };\n\n  return (\n    <ModalLayout title={modalType} open={open} handleClose={close}>\n      <FormStyled onSubmit={formik.handleSubmit}>\n        <InputStyled\n          id=\"title\"\n          name=\"title\"\n          placeholder=\"Title\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.title}\n        />\n        <ButtonWithIcon\n          title={modalType === 'Add column' ? 'Add' : 'Edit'}\n          type={'submit'}\n        />\n      </FormStyled>\n    </ModalLayout>\n  );\n};\n\nexport default AddColumn;\n","import * as React from 'react';\nimport Radio from '@mui/material/Radio';\n\nexport default function ColorRadioButtons({ onColorChange, value = '0' }) {\n  const [selectedValue, setSelectedValue] = React.useState(value);\n\n  const handleChange = event => {\n    setSelectedValue(event.target.value);\n    onColorChange(event.target.value);\n  };\n\n  const controlProps = item => ({\n    checked: selectedValue === item,\n    onChange: handleChange,\n    value: item,\n  });\n\n  return (\n    <div>\n      <Radio\n        {...controlProps('1')}\n        sx={{ color: '#8FA1D0', '&.Mui-checked': { color: '#8FA1D0' } }}\n      />\n      <Radio\n        {...controlProps('2')}\n        sx={{ color: '#E09CB5', '&.Mui-checked': { color: '#E09CB5' } }}\n      />\n      <Radio\n        {...controlProps('3')}\n        sx={{ color: '#BEDBB0', '&.Mui-checked': { color: '#BEDBB0' } }}\n      />\n      <Radio\n        {...controlProps('0')}\n        sx={{ color: 'grey', '&.Mui-checked': { color: 'grey' } }}\n      />\n    </div>\n  );\n}\n","import styled from \"@emotion/styled\";\n\nexport const DropDawnBtn = styled.div`\n  outline: none;\n  background-color: transparent;\n  border: none;\n  transition: all 0.3s ease-in-out;\n  :hover,\n  :focus {\n    transform: translateY(5px);\n  }\n`;\nexport const DropDownSVG = styled.svg`\n  stroke: var(--default-screen-page-link-color);\n`;\n","import React from 'react'\nimport sprite from '../../../assets/images/sprite.svg';\nimport { DropDawnBtn, DropDownSVG } from './DropDownIcon.styled';\n\nconst DropDownIcon = ({onClick}) => {\n  return (\n    <div>\n      <DropDawnBtn id={'date-picker'} onClick={onClick}>\n        <DropDownSVG width=\"18\" height=\"18\">\n          <use href={sprite + '#icon-drop-down'} />\n        </DropDownSVG>\n      </DropDawnBtn>\n    </div>\n  );\n}\n\nexport default DropDownIcon\n","import { Popover } from '@mui/material';\nimport React from 'react';\n\nconst PopupStyles = {\n  '.MuiPaper-root': {\n    backgroundColor: '#1F1F1F',\n    borderRadius: '8px',\n  },\n};\n\nconst Popup = ({ anchorEl, open, onClose, children }) => {\n  return (\n    <Popover\n      sx={PopupStyles}\n      anchorEl={anchorEl}\n      open={open}\n      onClose={onClose}\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'left',\n      }}\n      transformOrigin={{\n        vertical: 'top',\n        horizontal: 'left',\n      }}\n    >\n      {children}\n    </Popover>\n  );\n};\n\nexport default Popup;\n","import { DateCalendar } from '@mui/x-date-pickers/DateCalendar';\nimport styled from '@emotion/styled';\n\nexport const DateCalendarStyled = styled(DateCalendar)`\n  .MuiDateCalendar-root {\n    font-family: 'Poppins';\n    background: 'var(--primary-bg-color)';\n    color: 'var(--primary-text-color)';\n  }\n`;\n\nexport const DatePickerStyles = {\n  '.MuiTypography-root': {\n    width: '24px',\n    m: '5px',\n    fontSize: '14px',\n    fontWeight: 500,\n    fontFamily: 'Poppins',\n    color: 'var(--secondary-text-color)',\n  },\n  '.MuiPickersCalendarHeader-label': {\n    fontSize: '14px',\n    fontWeight: 600,\n    fontFamily: 'Poppins',\n    color: 'var(--primary-text-color)',\n  },\n  '.MuiDateCalendar-root': {\n    width: '235px',\n  },\n  '.MuiPaper-root': {\n    backgroundColor: 'var(--primary-bg-color)',\n  },\n  '.MuiYearCalendar-root': {\n    width: '265px',\n  },\n  '.MuiPickersDay-root': {\n    color: 'var(--primary-text-color)',\n  },\n  '.MuiButtonBase-root': {\n    width: '24px',\n    height: '24px',\n    m: '5px',\n    color: 'var(--primary-text-color)',\n  },\n\n  '.MuiPickersArrowSwitcher-spacer': {\n    width: '0px',\n  },\n  '.MuiPickersFadeTransitionGroup-root': {\n    overflow: 'hidden',\n  },\n  '.MuiButtonBase-root:hover': {\n    backgroundColor: 'var(--default-screen-page-link-color)',\n    color: 'var(--primary-bg-color)',\n  },\n  '.MuiPickersYear-yearButton.Mui-selected': {\n    backgroundColor: 'var(--button-bg-color)',\n    color: 'var(--primary-bg-color)',\n  },\n  '.MuiPickersYear-yearButton:hover': {\n    backgroundColor: 'var(--button-bg-color)',\n    color: 'var(--primary-bg-color)',\n  },\n  '.MuiPickersDay-today': {\n    backgroundColor: 'var(--button-bg-color)',\n    color: 'var(--primary-bg-color)',\n    border: '1px solid var(--button-bg-color)',\n  },\n  '.MuiPickersDay-dayOutsideMonth': {\n    fontWeight: 400,\n    color: 'rgba(255, 255, 255, 0.18)',\n  },\n  '.MuiButtonBase-root.Mui-disabled': {\n    fontWeight: 400,\n    color: 'rgba(255, 255, 255, 0.18)',\n  },\n  '.css-qa7bje-MuiButtonBase-root-MuiPickersDay-root.Mui-disabled:not(.Mui-selected)':\n    {\n      fontWeight: 400,\n      color: 'rgba(255, 255, 255, 0.38)',\n    },\n  'MuiPickersYear-yearButton.Mui-selected': {\n    backgroundColor: 'var(--button-bg-color) !important',\n  },\n  'MuiPickersYear-yearButton.Mui-selected:hover': {\n    backgroundColor: 'var(--button-bg-color) !important',\n  },\n  width: '265px',\n  height: '295px',\n  backgroundColor: 'var(--primary-bg-color)',\n  border: '1px solid var(--default-screen-page-link-color)',\n  color: 'var(--primary-text-color)',\n  borderRadius: '8px',\n  fontStyle: 'normal',\n  fontWeight: 500,\n  lineHeight: 'normal',\n  letterSpacing: -0.36,\n  marginBottom: 0,\n};\n","import { DateCalendarStyled, DatePickerStyles } from \"./DatePicker.styled\";\n\n\nconst DatePickerCmponent = ({ onChange }) => {\n  return (\n    <div>\n      <DateCalendarStyled\n        sx={DatePickerStyles}\n        onChange={onChange}\n        format=\"LL\"\n        disablePast\n        showDaysOutsideCurrentMonth\n      />\n    </div>\n  );\n};\n\nexport default DatePickerCmponent;\n","import React, { useEffect, useState } from 'react';\nimport { useFormik } from 'formik';\nimport { format, parseISO } from 'date-fns';\nimport * as Yup from 'yup';\nimport { API } from 'Services/API';\nimport formatISO from 'date-fns/formatISO';\nimport Notiflix from 'notiflix';\n\nimport {\n  FormStyled,\n  TextareaStyled,\n  SubWrapper,\n  DateText,\n  DateWrapper,\n  SubTitle,\n  InputStyled,\n} from './AddCard.styled';\nimport ColorRadioButtons from 'components/ColorRadioButtons/ColorRadioButtons';\nimport { ButtonWithIcon } from 'components/Buttons/Button';\nimport DropDownIcon from 'components/Icons/DropDownIcon/DropDownIcon';\nimport Popup from 'components/Popup/Popup';\nimport DatePickerCmponent from 'components/DatePicker/DatePicker';\nimport ModalLayout from '../ModalLayout/ModalLayout';\n\nNotiflix.Notify.init({\n  success: {\n    background: 'var(--button-bg-color)',\n  },\n});\n\nconst AddCard = ({\n  modalType,\n  close,\n  open,\n  handleClose,\n  columnId,\n  cardId = '',\n  titleValue = '',\n  descrValue = '',\n  priorityValue = '0',\n  deadlineValue,\n}) => {\n  const [date, setDate] = useState('');\n  const [dateValue, setDateValue] = useState('');\n  const [color, setColor] = useState(priorityValue.toString());\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  const [addCards] = API.useAddCardMutation();\n  const [updateCard] = API.useUpdateCardByIdMutation();\n\n  const handleDateClick = e => {\n    setAnchorEl(e.currentTarget);\n    setIsPopupOpen(true);\n  };\n\n  const onDateChange = e => {\n    const dateFns = format(e, 'LLLL d');\n    setDateValue(dateFns);\n    setDate(e);\n    setAnchorEl(null);\n    setIsPopupOpen(false);\n  };\n\n  const onColorChange = value => {\n    console.log('value :>> ', value);\n    setColor(value);\n  };\n\n  const handleSubmitForm = async (title, description) => {\n    if (modalType === 'Add card') {\n      if (!date) {\n        Notiflix.Notify.failure('Please select the date');\n      }\n\n      const ISODate = formatISO(date, { representation: 'date' });\n      console.log('ISODate :>> ', ISODate);\n\n      const cardData = {\n        title,\n        description,\n        priority: color,\n        deadline: ISODate,\n      };\n\n      try {\n        await addCards({ columnId, cardData });\n\n        Notiflix.Notify.success('Your card successfully added');\n      } catch (error) {\n        if (error.status === 400) {\n          return Notiflix.Notify.failure('All field must be filled in');\n        } else {\n          console.log('An error occurred:', error.data.message);\n        }\n      }\n    } else {\n      const ISODate = formatISO(date, { representation: 'date' });\n      const cardData = {\n        title,\n        description,\n        priority: color,\n        deadline: ISODate,\n      };\n\n      try {\n        await updateCard({ cardId, cardData });\n        Notiflix.Notify.success('Your card successfully updated');\n      } catch (error) {\n        if (error.status === 400) {\n          return Notiflix.Notify.failure('All field must be filled in');\n        } else {\n          console.log('An error occurred:', error.data.message);\n        }\n      }\n    }\n\n    setDateValue('');\n    setDate('');\n    handleReset();\n    close();\n  };\n\n  const validationSchema = Yup.object({\n    title: Yup.string()\n      .trim('The title cannot include leading and trailing spaces')\n      .strict(true)\n      .min(2, 'Must be more then 2 symbols')\n      .required('Title is required'),\n    description: Yup.string().min(5, 'Must be more then 2 symbols'),\n    color: Yup.string(),\n  });\n\n  const cardInitialValues =\n    modalType === 'Add card'\n      ? { title: '', description: '' }\n      : { title: titleValue, description: descrValue };\n\n  const { values, handleBlur, handleChange, handleReset, handleSubmit } =\n    useFormik({\n      initialValues: cardInitialValues,\n      onSubmit: ({ title, description }) =>\n        handleSubmitForm(title, description),\n      validationSchema,\n    });\n\n  useEffect(() => {\n    if (modalType === 'Add card') {\n      const currentDate = format(new Date(), \"'Today,' LLLL d\");\n      setDateValue(currentDate);\n    }\n    if (modalType === 'Edit card') {\n      console.log('deadlineValue :>> ', deadlineValue);\n      const dateISO = parseISO(deadlineValue, \"'Today,' LLLL d\");\n      setDate(dateISO);\n      const currentDate = format(dateISO, \"'Today,' LLLL d\");\n      setDateValue(currentDate);\n    }\n  }, [modalType, deadlineValue]);\n\n  return (\n    <ModalLayout title={modalType} open={open} handleClose={handleClose}>\n      <FormStyled onSubmit={handleSubmit}>\n        <InputStyled\n          id=\"title\"\n          name=\"title\"\n          placeholder=\"Title\"\n          onChange={handleChange}\n          onBlur={handleBlur}\n          value={values.title}\n        />\n\n        <TextareaStyled\n          id=\"description\"\n          name=\"description\"\n          placeholder=\"Description\"\n          onChange={handleChange}\n          onBlur={handleBlur}\n          value={values.description}\n        />\n\n        <SubWrapper>\n          <SubTitle>Label color</SubTitle>\n          <ColorRadioButtons value={color} onColorChange={onColorChange} />\n        </SubWrapper>\n\n        <SubWrapper>\n          <SubTitle>Deadline</SubTitle>\n          <DateWrapper>\n            <DateText>{dateValue}</DateText>\n            <DropDownIcon onClick={handleDateClick} />\n          </DateWrapper>\n        </SubWrapper>\n\n        <ButtonWithIcon\n          title={modalType === 'Add card' ? 'Add' : 'Edit'}\n          type={'submit'}\n          disabled={!values.title ? true : false}\n        />\n      </FormStyled>\n\n      <Popup\n        anchorEl={anchorEl}\n        open={isPopupOpen}\n        onClose={() => setIsPopupOpen(false)}\n      >\n        <DatePickerCmponent onChange={onDateChange} />\n      </Popup>\n    </ModalLayout>\n  );\n};\n\nexport default AddCard;\n","import styled from '@emotion/styled';\nimport { IconButton } from '@mui/material';\nimport { useState } from 'react';\n\nimport MenuItem from '@mui/material/MenuItem';\nexport function getPriorityColor(priority) {\n  switch (priority) {\n    case 3:\n      return '#BEDBB0';\n    case 1:\n      return '#8FA1D0';\n    case 2:\n      return '#E09CB5';\n    default:\n      return '#bababa';\n  }\n}\nexport function getPriorityText(priority) {\n  switch (priority) {\n    case 1:\n      return 'High';\n    case 2:\n      return 'Low';\n    case 3:\n      return 'Medium';\n    default:\n      return 'Without';\n  }\n}\nexport const TypographyStylesTitle = {\n  color: 'var(--primary-text-color)',\n  fontSize: '14px',\n  fontWeight: '600',\n  letterSpacing: '-0.28px',\n  marginBottom: '8px',\n};\n\nexport const TypographyStylesPriority = {\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'start',\n  gap: '4px',\n  color: 'var( --secondary-text-color)',\n  fontFamily: 'Poppins',\n  fontSize: '8px',\n\n  fontWeight: '400',\n  lineHeigt: 'normal',\n  letterSpacing: '-0.16px',\n};\nexport const CardContentStyles = {\n  borderBottom: '1px solid var(--cards-underline)',\n  padding: '0px',\n  paddingBottom: '14px',\n  marginBottom: '14px',\n};\nexport const ActionsBox = {\n  display: 'flex',\n  alignItems: 'base-line',\n  justifyContent: 'center',\n  gap: '14px',\n};\nexport const CardActionsStyled = {\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n};\nexport const Circle = styled.div`\n  width: 12px;\n  height: 12px;\n  border-radius: 50%;\n  background-color: ${props => getPriorityColor(props.priority)};\n`;\nexport const TypographyText = styled.div`\n  color: var(--primary-text-color);\n\n  font-size: 10px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  letter-spacing: -0.2px;\n`;\nexport const CardStyles = styled.div`\n  width: 334px;\n  height: 154px;\n  padding-top: 14px;\n  padding-bottom: 14px;\n  padding-left: 24px;\n  padding-right: 20px;\n  background-color: var(--cards-bg-color);\n  border-radius: 8px;\n  border-left: 4px solid ${props => getPriorityColor(props.priority)};\n`;\nexport const StyledIconButton = styled(IconButton)`\n  &:hover svg {\n    stroke: var(--default-screen-page-link-color);\n    stroke-opacity: 1;\n    transition: stroke 0.3s;\n  }\n`;\nexport const ListMenuStyles = styled(MenuItem)`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  color: var(--secondary-text-color);\n  font-family: 'Poppins';\n  font-size: 14px;\n\n  font-weight: 400px;\n\n  &:hover {\n    color: var(--default-screen-page-link-color);\n  }\n  &:hover svg {\n    stroke: var(--default-screen-page-link-color);\n    stroke-opacity: 1;\n    transition: stroke 0.3s;\n  }\n`;\n\nconst TextContainer = styled.div`\n  max-height: ${props =>\n    props.expanded\n      ? 'none'\n      : '36px'}; /* Максимальна висота для двох рядків тексту */\n  overflow: hidden;\n  position: relative;\n`;\n\nconst Text = styled.div`\n  color: var(--secondary-text-color);\n  font-size: 12px;\n  font-weight: 400px;\n  padding-right: 2px;\n  line-height: 18px; /* Висота рядка */\n`;\n\nconst ReadMore = styled.div`\n  color: var(--secondary-text-color);\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  background-color: transparent;\n  padding: 0 5px;\n  font-weight: bold;\n  cursor: pointer;\n  display: ${props => (props.expanded ? 'none' : 'block')};\n  &:hover {\n    text-decoration: underline;\n  }\n`;\nconst ShowMoreButton = styled.button`\n  color: var(--primary-text-color);\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nexport const TruncatedText = ({ text }) => {\n  const [expanded, setExpanded] = useState(false);\n\n  const toggleExpanded = () => {\n    setExpanded(!expanded);\n  };\n\n  const resetText = () => {\n    setExpanded(false);\n  };\n\n  return (\n    <TextContainer expanded={expanded}>\n      <Text>{text}</Text>\n      {!expanded && (\n        <>\n          <ReadMore onClick={toggleExpanded}>...</ReadMore>\n        </>\n      )}\n      {expanded && <ShowMoreButton onClick={resetText}>Go back</ShowMoreButton>}\n    </TextContainer>\n  );\n};\n","import React from 'react';\nimport { format } from 'date-fns';\nimport { useState } from 'react';\nimport AddCard from 'components/AddCard/AddCard';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport CardActions from '@mui/material/CardActions';\n\nimport Menu from '@mui/material/Menu';\nimport Box from '@mui/material/Box';\nimport sprite from '../../assets/images/sprite.svg';\n\nimport { getPriorityText } from './TaskCard.styled';\n\nimport { deleteCard } from '../../redux/tasks/cardsAPISlice';\nimport { useDispatch } from 'react-redux';\nimport { API } from 'Services/API';\n\nimport {\n  TypographyStylesTitle,\n  TypographyStylesPriority,\n  CardContentStyles,\n  ActionsBox,\n  CardActionsStyled,\n  Circle,\n  TypographyText,\n  StyledIconButton,\n  CardStyles,\n  ListMenuStyles,\n  TruncatedText,\n} from './TaskCard.styled';\n\nfunction TaskCard({\n  title,\n  description,\n  priority,\n  deadline,\n  moveCard,\n  id,\n  columnId,\n}) {\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  // const [updateCardById] = API.useUpdateCardByIdMutation();\n  const [deleteCardById] = API.useDeleteCardByIdMutation();\n\n  const [isAddCardOpen, setIsAddCardOpen] = useState(false);\n  // const [updatedData, setUpdatedData] = useState({\n  //   title,\n  //   description,\n  //   priority,\n  //   deadline,\n  // });\n  const dispatch = useDispatch();\n\n  const closeAddCard = () => setIsAddCardOpen(false);\n  const handleClick = () => setIsAddCardOpen(true);\n\n  const handleOpenMenu = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleCloseMenu = () => {\n    setAnchorEl(null);\n  };\n\n  const handleMoveCard = newColumn => {\n    handleCloseMenu();\n    moveCard(newColumn);\n  };\n  const handleDeleteCard = async () => {\n    try {\n      const response = await deleteCardById(id);\n      dispatch(deleteCard(response));\n    } catch (error) {\n      console.error('Error deleting card:', error);\n    }\n  };\n\n  // const handleUpdateCard = async () => {\n  //   try {\n  //     const updatedData = {\n  //       title,\n  //       description,\n  //       priority,\n  //       deadline,\n\n  //       /* об'єкт з оновленими даними картки */\n  //     };\n  //     const response = await updateCardById({ id, updatedData });\n  //     dispatch(setCardData(response));\n  //     handleClick();\n  //   } catch (error) {\n  //     console.error('Error updating card:', error);\n  //   }\n  // };\n\n  const date = new Date(`${deadline}`);\n  const formattedDate = format(date, 'dd/MM/yyyy');\n\n  const currentDate = new Date();\n  const formatteCurrentDate = format(currentDate, 'dd/MM/yyyy');\n  const isDeadlineToday = formattedDate === formatteCurrentDate;\n\n  return (\n    <CardStyles priority={priority}>\n      <CardContent sx={CardContentStyles}>\n        <Typography sx={TypographyStylesTitle} variant=\"h4\" component=\"div\">\n          {title}\n        </Typography>\n        <TruncatedText text={description} />\n      </CardContent>\n      <CardActions sx={CardActionsStyled}>\n        <Box sx={ActionsBox}>\n          <Typography sx={TypographyStylesPriority} variant=\"body2\">\n            Priority:\n            <Box sx={{ display: 'flex', gap: '4px', alignItems: 'center' }}>\n              <Circle priority={priority} />\n              <TypographyText variant=\"subText\">\n                {getPriorityText(priority)}\n              </TypographyText>\n            </Box>\n          </Typography>\n          <Typography sx={TypographyStylesPriority} variant=\"body2\">\n            Deadline:\n            <Box\n              sx={{\n                width: '14px',\n                height: '14px',\n                color: 'var(--primary-text-color)',\n                fontFamily: 'Poppins',\n                fontSize: '10px',\n                fontStyle: 'normal',\n                fontWeight: 400,\n                lineHeight: 'normal',\n                letterSpacing: '-0.2px',\n              }}\n            >\n              {' '}\n              {formattedDate}\n            </Box>\n          </Typography>\n        </Box>\n        <Box>\n          {isDeadlineToday && (\n            <StyledIconButton aria-label=\"deadline\">\n              <svg stroke=\"#BEDBB0\" width=\"16\" height=\"16\">\n                <use href={sprite + '#icon-bell'} />\n              </svg>\n            </StyledIconButton>\n          )}\n          <StyledIconButton onClick={handleOpenMenu} aria-label=\"next-colomn\">\n            <svg stroke=\"var(--cards-icon-color)\" width=\"16\" height=\"16\">\n              <use href={sprite + '#icon-active'} />\n            </svg>\n          </StyledIconButton>\n          <StyledIconButton\n            onClick={handleClick}\n            title={'Edit card'}\n            aria-label=\"edit\"\n          >\n            <svg stroke=\"var(--cards-icon-color)\" width=\"16\" height=\"16\">\n              <use href={sprite + '#icon-pencil'} />\n            </svg>\n          </StyledIconButton>\n          <AddCard\n            columnId={columnId}\n            cardId={id}\n            modalType={'Edit card'}\n            open={isAddCardOpen}\n            handleClose={closeAddCard}\n            close={closeAddCard}\n            titleValue={title}\n            descrValue={description}\n            priorityValue={priority}\n            deadlineValue={deadline}\n          />\n          <StyledIconButton onClick={handleDeleteCard} aria-label=\"remove\">\n            <svg stroke=\"var(--cards-icon-color)\" width=\"16\" height=\"16\">\n              <use href={sprite + '#icon-trash'} />\n            </svg>\n          </StyledIconButton>\n        </Box>\n      </CardActions>\n      <Menu\n        anchorEl={anchorEl}\n        open={Boolean(anchorEl)}\n        onClose={handleCloseMenu}\n        PaperProps={{\n          sx: {\n            backgroundColor: '#151515',\n            width: '135px',\n          },\n        }}\n      >\n        {/* List of columns to move the card */}\n        <ListMenuStyles onClick={() => handleMoveCard('Column 1')}>\n          {' '}\n          <Box> In progress </Box>\n          <Box>\n            {' '}\n            <svg stroke=\"var(--cards-icon-color)\" width=\"16\" height=\"16\">\n              <use href={sprite + '#icon-active'} />\n            </svg>\n          </Box>\n        </ListMenuStyles>\n        <ListMenuStyles onClick={() => handleMoveCard('Column 2')}>\n          <Box> Done </Box>\n          <Box>\n            {' '}\n            <svg stroke=\"var(--cards-icon-color)\" width=\"16\" height=\"16\">\n              <use href={sprite + '#icon-active'} />\n            </svg>\n          </Box>\n        </ListMenuStyles>\n      </Menu>\n    </CardStyles>\n  );\n}\n\nexport default TaskCard;\n","import { ButtonWithIcon } from '../Buttons/Button';\nimport styled from '@emotion/styled';\nimport { IconButton } from '@mui/material';\n\nexport const ColumnWrapper = styled.li`\n  display: flex;\n  flex-direction: column;\n  /* grid-template-rows: 56px auto 56px; */\n  align-items: left;\n  /* gap: 14px; */\n  width: 346px;\n  height: 100vh;\n  max-height: 100%;\n  padding-right: 12px;\n  padding-bottom: 14px;\n  margin-right: 14px;\n  margin-bottom: auto;\n\n  @media screen and (min-width: 1400px) {\n    max-height: 80vh;\n    margin-bottom: auto;\n  }\n`;\n\nexport const ColumnHeader = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  max-width: 334px;\n  height: 56px;\n  background-color: var(--secondary-bg-color);\n  color: var(--primary-text-color);\n  padding: 20px;\n  border-radius: 8px;\n  margin-bottom: 14px;\n`;\n\nexport const ColumnTitle = styled.h2`\n  display: flex;\n  font-family: 'Poppins';\n  font-weight: 600;\n  font-size: 14px;\n  margin: 0;\n`;\n\nexport const CardsList = styled.ul`\n  display: ${props => {\n    if (props.cols.length < 4) {\n      return `flex`;\n    }\n    return `grid`;\n  }};\n  flex-direction: column;\n  grid-template-rows: 155px;\n  width: 346px;\n  margin-bottom: 14px;\n  max-height: 60vh;\n  gap: 8px;\n  border-radius: 8px;\n  padding-right: 8px;\n  overflow-x: hidden;\n  overflow-y: ${props => {\n    if (props.cols.length < 4) {\n      return `hidden`;\n    }\n    return `scroll`;\n  }};\n  ::-webkit-scrollbar {\n    border-radius: 5px;\n    margin-left: 4px;\n    width: 8px;\n    background-color: rgba(255, 255, 255, 0.2);\n  }\n  ::-webkit-scrollbar-thumb {\n    background: #121212;\n    border-radius: 5px;\n  }\n  ::-webkit-scrollbar-thumb:hover {\n    background: #9dc888;\n  }\n`;\n\nexport const StyledIconButton = styled(IconButton)`\n  width: 18px;\n  height: 18px;\n  padding: 0;\n  margin: 4px;\n  &:hover svg {\n    stroke: #bedbb0;\n    stroke-opacity: 1;\n    transition: stroke 0.3s;\n  }\n`;\n\nexport const AddCardButton = styled(ButtonWithIcon)`\n  width: 334px;\n`;\n","import React, { useState } from 'react';\nimport { API } from 'Services/API';\nimport sprite from '../../assets/images/sprite.svg';\nimport TaskCard from '../TaskCard/TaskCard';\nimport AddCard from '../AddCard/AddCard';\nimport {\n  AddCardButton,\n  CardsList,\n  ColumnHeader,\n  ColumnTitle,\n  ColumnWrapper,\n  StyledIconButton,\n} from './Column.styled';\nimport AddColumn from 'components/AddColumn/AddColumn';\nimport Loader from 'components/Loader';\n\nconst Column = ({ columnTitle, columnId, cards, columnData, isFetching }) => {\n  const [deleteColumn] = API.useDeleteColumnByIdMutation();\n\n  const [isAddCardOpen, setIsAddCardOpen] = useState(false);\n  const [isEditColumnOpen, setIsEditColumnOpen] = useState(false);\n\n  const closeAddCard = () => setIsAddCardOpen(false);\n  const handleClick = () => setIsAddCardOpen(true);\n\n  const openEditColumn = () => setIsEditColumnOpen(true);\n  const closeEditColumn = () => setIsEditColumnOpen(false);\n\n  const handleDeleteColumn = async () => {\n    try {\n      await deleteColumn({ columnId });\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  return (\n    <ColumnWrapper>\n      <ColumnHeader>\n        <ColumnTitle>{!isFetching ? columnTitle : (<Loader/>)}</ColumnTitle>\n        <div>\n          <StyledIconButton onClick={openEditColumn} aria-label=\"edit\">\n            <svg\n              stroke=\"var(--primary-text-color)\"\n              strokeOpacity=\"0.5\"\n              width=\"16\"\n              height=\"16\"\n            >\n              <use href={sprite + '#icon-pencil'} />\n            </svg>\n          </StyledIconButton>\n          <StyledIconButton onClick={handleDeleteColumn} aria-label=\"remove\">\n            <svg\n              stroke=\"var(--primary-text-color)\"\n              strokeOpacity=\"0.5\"\n              width=\"16\"\n              height=\"16\"\n            >\n              <use href={sprite + '#icon-trash'} />\n            </svg>\n          </StyledIconButton>\n        </div>\n      </ColumnHeader>\n      <CardsList cols={cards}>\n        {cards?.map(({ title, description, priority, deadline, _id: id }) => {\n          return (\n            <TaskCard\n              key={id}\n              title={title}\n              description={description}\n              priority={priority}\n              deadline={deadline}\n              id={id}\n            />\n          );\n        })}\n      </CardsList>\n\n      <AddCardButton onClick={handleClick} title={'Add card'} />\n\n      <AddCard\n        columnId={columnId}\n        modalType={'Add card'}\n        open={isAddCardOpen}\n        handleClose={closeAddCard}\n        close={closeAddCard}\n      />\n      <AddColumn\n        modalType={'Edit column'}\n        open={isEditColumnOpen}\n        columnId={columnId}\n        close={closeEditColumn}\n        titleValue={columnTitle}\n        column={columnData}\n      />\n    </ColumnWrapper>\n  );\n};\n\nexport default Column;\n","import styled from '@emotion/styled';\nimport { Field as FormicField } from 'formik';\n\nexport const Div = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: baseline;\n  margin-bottom: 2px;\n`;\nexport const FormPopup = styled.form`\n  background-color: var(--modal-bg-color);\n  height: 275px;\n  width: 200px;\n  border-radius: 8px;\n  padding: 24px;\n`;\n\nexport const Button = styled.button`\n  color: rgba(255, 255, 255, 0.5);\n  font-size: 12px;\n  font-weight: 400;\n  letter-spacing: -0.24px;\n  text-decoration-line: underline;\n\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n`;\nexport const LabelGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  justify-content: center;\n  /* align-items: baseline; */\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: center;\n  /* justify-content: center; */\n  gap: 8px;\n  cursor: pointer;\n  color: var(--secondary-text-color);\n  font-size: 12px;\n  font-weight: 400;\n  letter-spacing: -0.24px;\n  padding-top: 1px;\n  padding-bottom: 1px;\n`;\n\nexport const Field = styled(FormicField)`\n  width: 14px;\n  height: 14px;\n  background-color: transparent;\n\n  display: grid;\n  place-content: center;\n\n  ::after {\n    content: '';\n    left: 6.4%;\n    position: absolute;\n    transform: translate(6px, 1px);\n    width: 12px;\n    height: 12px;\n    border: 2.5px solid black;\n    border-radius: 50%;\n    opacity: 0;\n  }\n  ::before {\n    content: '';\n    width: 14px;\n    height: 14px;\n    border-radius: 50%;\n    transition: 120ms transform ease-in-out;\n    background-color: ${props => props.color};\n  }\n\n  :checked::after {\n    opacity: 1;\n  }\n`;\n\n// export const Field = styled.div`\n//   width: 14px;\n//   height: 14px;\n//   border-radius: 14px;\n//   position: absolute;\n//   top: 50%;\n//   left: 50%;\n//   transform: translate(-50%, -50%);\n\n//   background-color: ${props =>\n//     props.color === 'without' && 'rgb(128, 128, 128)'};\n//   background-color: ${props =>\n//     props.color === 'low' && 'rgba(143, 161, 208, 1)'};\n//   background-color: ${props =>\n//     props.color === 'medium' && 'rgba(224, 156, 181, 1)'};\n//   background-color: ${props =>\n//     props.color === 'high' && 'rgba(190, 219, 176, 1)'};\n\n//   transition: all 250ms linear;\n\n//   &.active {\n//     width: 6px;\n//     height: 6px;\n//   }\n// `;\n\nexport const RadioWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`;\n","import { Popper, Radio, Typography } from '@mui/material';\n// import ModalLayout from 'components/ModalLayout/ModalLayout';\nimport { Formik } from 'formik';\nimport { useState } from 'react';\nimport {\n  Button,\n  Div,\n  FormPopup,\n  Label,\n  LabelGroup,\n  RadioWrap,\n} from './Filter.styled';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/boards/boardsAPISlice';\n\nconst labelStyle = {\n  color: 'var(--primary-text-color)',\n  fontSize: '12px',\n  fontStyle: 'normal',\n  fontWeight: 500,\n  lineHeight: 'normal',\n  letterSpacing: -0.36,\n};\n\nconst titleStyle = {\n  color: 'var(--primary-text-color)',\n  fontSize: '14px',\n  fontFamily: 'Poppins',\n  fontWeight: '500',\n  wordWrap: 'break-word',\n  marginBottom: '14px',\n  paddingBottom: '14px',\n  borderBottom: '0.50px var(--border-filters) solid',\n};\n\nexport const Filter = ({ filter, open, onClose, anchorEl }) => {\n  const [currentPrority, setCurrentPrority] = useState('');\n  const [isShowAllActive, setIsShowAllActive] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const initialValues = {\n    currentPrority: '',\n  };\n\n  const controlProps = item => ({\n    checked: currentPrority === item,\n    onChange: handleChange,\n    value: item,\n  });\n  const handleChange = event => {\n    // const filter = event.target.value;\n    // filter(event.target.value);\n    dispatch(setFilter(event.target.value));\n    setCurrentPrority(event.target.value);\n    setIsShowAllActive(false);\n  };\n\n  const handleShowAll = () => {\n    setCurrentPrority('');\n    // dispatch(setFilterCards(''));\n    setIsShowAllActive(true);\n  };\n\n  const handleRadioClick = () => {\n    if (isShowAllActive) {\n      setIsShowAllActive(false);\n    }\n  };\n\n  return (\n    <Popper open={open} placement={'bottom-end'} anchorEl={anchorEl}>\n      <Formik initialValues={initialValues}>\n        <FormPopup onChange={handleChange}>\n          <Typography variant=\"h3\" sx={titleStyle}>\n            Filters\n          </Typography>\n          <LabelGroup role=\"group\" aria-labelledby=\"my-radio-group\">\n            <Div>\n              <Typography variant=\"h2\" sx={labelStyle}>\n                Label Color\n              </Typography>\n              <Button\n                type=\"button\"\n                onClick={handleShowAll}\n                disabled={isShowAllActive}\n              >\n                Show all\n              </Button>\n            </Div>\n            <RadioWrap>\n              <Label>\n                <Radio\n                  onClick={handleRadioClick}\n                  checked={currentPrority === '0'}\n                  name=\"currentPrority\"\n                  {...controlProps('0')}\n                  size=\"small\"\n                  sx={{ color: 'grey', '&.Mui-checked': { color: 'grey' } }}\n                />\n                Without priority\n              </Label>\n              <Label>\n                <Radio\n                  onClick={handleRadioClick}\n                  checked={currentPrority === '1'}\n                  name=\"currentPrority\"\n                  {...controlProps('1')}\n                  size=\"small\"\n                  sx={{\n                    color: '#8FA1D0',\n                    '&.Mui-checked': { color: '#8FA1D0' },\n                  }}\n                />\n                Low\n              </Label>\n              <Label>\n                <Radio\n                  onClick={handleRadioClick}\n                  checked={currentPrority === '2'}\n                  name=\"currentPrority\"\n                  {...controlProps('2')}\n                  size=\"small\"\n                  sx={{\n                    color: '#E09CB5',\n                    '&.Mui-checked': { color: '#E09CB5' },\n                  }}\n                />\n                Medium\n              </Label>\n\n              <Label>\n                <Radio\n                  onClick={handleRadioClick}\n                  checked={currentPrority === '3'}\n                  name=\"currentPrority\"\n                  {...controlProps('3')}\n                  size=\"small\"\n                  sx={{\n                    color: '#BEDBB0',\n                    '&.Mui-checked': { color: '#BEDBB0' },\n                  }}\n                />\n                High\n              </Label>\n            </RadioWrap>\n          </LabelGroup>\n        </FormPopup>\n      </Formik>\n    </Popper>\n  );\n};\n\n// export const Filter = ({ filter, open, onClose }) => {\n//   const [currentPrority, setCurrentPrority] = useState('');\n//   const [isShowAllActive, setIsShowAllActive] = useState(false);\n\n//   const dispatch = useDispatch();\n\n//   const initialValues = {\n//     currentPrority: '',\n//   };\n\n//   const controlProps = item => ({\n//     checked: currentPrority === item,\n//     onChange: handleChange,\n//     value: item,\n//   });\n//   const handleChange = event => {\n//     // const filter = event.target.value;\n//     // filter(event.target.value);\n//     dispatch(setFilter(event.target.value));\n//     setCurrentPrority(event.target.value);\n//     // dispatch(setFilterCards(filter));\n//     setIsShowAllActive(false);\n//   };\n\n//   const handleShowAll = () => {\n//     setCurrentPrority('');\n//     // dispatch(setFilterCards(''));\n//     setIsShowAllActive(true);\n//   };\n\n//   const handleRadioClick = () => {\n//     if (isShowAllActive) {\n//       setIsShowAllActive(false);\n//     }\n//   };\n//   console.log(currentPrority);\n\n//   return (\n//     <ModalLayout open={open} handleClose={onClose}>\n//       <Typography variant=\"h2\" sx={titleStyle}>\n//         Filters\n//       </Typography>\n//       <Formik initialValues={initialValues}>\n//         <Form onChange={handleChange}>\n//           <LabelGroup role=\"group\" aria-labelledby=\"my-radio-group\">\n//             <Div>\n//               <Typography variant=\"h2\" sx={labelStyle}>\n//                 Label Color\n//               </Typography>\n//               <Button\n//                 type=\"button\"\n//                 onClick={handleShowAll}\n//                 disabled={isShowAllActive}\n//               >\n//                 Show all\n//               </Button>\n//             </Div>\n//             <RadioWrap>\n//               <Label>\n//                 <Radio\n//                   onClick={handleRadioClick}\n//                   checked={currentPrority === '0'}\n//                   name=\"currentPrority\"\n//                   {...controlProps('0')}\n//                   size=\"small\"\n//                   sx={{ color: 'grey', '&.Mui-checked': { color: 'grey' } }}\n//                 />\n//                 Without priority\n//               </Label>\n//               <Label>\n//                 <Radio\n//                   onClick={handleRadioClick}\n//                   checked={currentPrority === '1'}\n//                   name=\"currentPrority\"\n//                   {...controlProps('1')}\n//                   size=\"small\"\n//                   sx={{\n//                     color: '#8FA1D0',\n//                     '&.Mui-checked': { color: '#8FA1D0' },\n//                   }}\n//                 />\n//                 Low\n//               </Label>\n//               <Label>\n//                 <Radio\n//                   onClick={handleRadioClick}\n//                   checked={currentPrority === '2'}\n//                   name=\"currentPrority\"\n//                   {...controlProps('2')}\n//                   size=\"small\"\n//                   sx={{\n//                     color: '#E09CB5',\n//                     '&.Mui-checked': { color: '#E09CB5' },\n//                   }}\n//                 />\n//                 Medium\n//               </Label>\n\n//               <Label>\n//                 <Radio\n//                   onClick={handleRadioClick}\n//                   checked={currentPrority === '3'}\n//                   name=\"currentPrority\"\n//                   {...controlProps('3')}\n//                   size=\"small\"\n//                   sx={{\n//                     color: '#BEDBB0',\n//                     '&.Mui-checked': { color: '#BEDBB0' },\n//                   }}\n//                 />\n//                 High\n//               </Label>\n//             </RadioWrap>\n//           </LabelGroup>\n//         </Form>\n//       </Formik>\n//     </ModalLayout>\n//   );\n// };\n","// import ModalLayout from 'components/ModalLayout/ModalLayout';\nimport sprite from '../../assets/images/sprite.svg';\nimport { useState } from 'react';\nimport { Filter } from './Filter';\n\nconst {\n  Container,\n  TitleDashBoard,\n  FilterButton,\n  TitleFilter,\n} = require('./HeaderDashboard.styled');\nexport const HeaderDashboard = ({ title, filter }) => {\n  const [isOpen, setIsOpen] = useState();\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const toggleModal = e => {\n    setIsOpen(!isOpen);\n    setAnchorEl(e.currentTarget);\n  };\n\n  return (\n    <Container>\n      <TitleDashBoard>{title}</TitleDashBoard>\n      <FilterButton onClick={toggleModal}>\n        <svg\n          aria-label=\"filter icon\"\n          width=\"16\"\n          height=\"16\"\n          stroke=\"var(--secondary-text-color)\"\n        >\n          <use href={sprite + '#icon-filter'}></use>\n        </svg>\n        <TitleFilter>Filters</TitleFilter>\n      </FilterButton>\n      {isOpen && (\n        <Filter\n          filter={filter}\n          open={isOpen}\n          onClose={toggleModal}\n          anchorEl={anchorEl}\n        />\n      )}\n    </Container>\n  );\n};\n","import styled from '@emotion/styled';\nimport { SIDEBARWIDTH } from 'components/Sidebar/SidebarCONSTANTS';\nimport bgData from './bg-data.json';\n\nexport const MainWrapper = styled.main`\n  min-height: 100%;\n  background-color: var(--primary-bg-color);\n  background-repeat: no-repeat;\n  background-size: cover;\n  padding-bottom: 18px;\n  @media screen and (min-width: 0px) {\n    min-height: 100vh;\n    @media (-webkit-min-device-pixel-ratio: 1) {\n      background-image: ${props => {\n        if (props.index === undefined) {\n          return 'none';\n        }\n        return `url(${bgData[2].mobile[0][props.index]})`;\n      }};\n    }\n    @media (-webkit-min-device-pixel-ratio: 2) {\n      background-image: ${props => {\n        if (props.index === undefined) {\n          return 'none';\n        }\n        return `url(${bgData[2].mobile[1][props.index]})`;\n      }};\n    }\n    @media (-webkit-min-device-pixel-ratio: 3) {\n      background-image: ${props => {\n        if (props.index === undefined) {\n          return 'none';\n        }\n        return `url(${bgData[2].mobile[2][props.index]})`;\n      }};\n    }\n  }\n\n  @media screen and (min-width: 1400px) {\n    height: 100vh;\n    @media (-webkit-min-device-pixel-ratio: 1) {\n      background-image: ${props => {\n        if (props.index === undefined) {\n          return 'none';\n        }\n        return `url(${bgData[0].desktop[0][props.index]})`;\n      }};\n    }\n    @media (-webkit-min-device-pixel-ratio: 2) {\n      background-image: ${props => {\n        if (props.index === undefined) {\n          return 'none';\n        }\n        return `url(${bgData[0].desktop[1][props.index]})`;\n      }};\n    }\n    @media (-webkit-min-device-pixel-ratio: 3) {\n      background-image: ${props => {\n        if (props.index === undefined) {\n          return 'none';\n        }\n        return `url(${bgData[0].desktop[2][props.index]})`;\n      }};\n    }\n  }\n\n  @media screen and (min-width: 767px) {\n    height: 100vh;\n    @media (-webkit-min-device-pixel-ratio: 1) {\n      background-image: ${props => {\n        if (props.index === undefined) {\n          return 'none';\n        }\n        return `url(${bgData[1].laptop[0][props.index]})`;\n      }};\n    }\n    @media (-webkit-min-device-pixel-ratio: 2) {\n      background-image: ${props => {\n        if (props.index === undefined) {\n          return 'none';\n        }\n        return `url(${bgData[1].laptop[1][props.index]})`;\n      }};\n    }\n    @media (-webkit-min-device-pixel-ratio: 3) {\n      background-image: ${props => {\n        if (props.index === undefined) {\n          return 'none';\n        }\n        return `url(${bgData[1].laptop[2][props.index]})`;\n      }};\n    }\n  }\n\n  @media screen and (min-width: 1400px) {\n    height: 100vh;\n    @media (-webkit-min-device-pixel-ratio: 1) {\n      background-image: ${props => {\n        if (props.index === undefined) {\n          return 'none';\n        }\n        return `url(${bgData[0].desktop[0][props.index]})`;\n      }};\n    }\n    @media (-webkit-min-device-pixel-ratio: 2) {\n      background-image: ${props => {\n        if (props.index === undefined) {\n          return 'none';\n        }\n        return `url(${bgData[0].desktop[1][props.index]})`;\n      }};\n    }\n    @media (-webkit-min-device-pixel-ratio: 3) {\n      background-image: ${props => {\n        if (props.index === undefined) {\n          return 'none';\n        }\n        return `url(${bgData[0].desktop[2][props.index]})`;\n      }};\n    }\n\n    background-repeat: no-repeat;\n    background-size: cover;\n  }\n`;\n\nexport const MainContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n\n  height: 100vh;\n  padding-top: 78px;\n  padding-left: 24px;\n  padding-right: 24px;\n  padding-bottom: 28px;\n  margin-bottom: 28px;\n  @media screen and (min-width: 0px) {\n    width: 100vw;\n    height: 100%;\n  }\n  @media screen and (min-width: 767px) {\n  }\n  @media screen and (min-width: 1400px) {\n    width: calc(100vw - ${SIDEBARWIDTH}px);\n  }\n`;\n\nexport const ColumnsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 34px;\n  align-items: top;\n  overflow: hidden;\n  margin-bottom: auto;\n  ::-webkit-scrollbar {\n    border-radius: 5px;\n    margin-left: 4px;\n    height: 8px;\n    background-color: var(--screen-page-scrollbar-bg-color);\n  }\n  ::-webkit-scrollbar-thumb {\n    background-color: var(--screen-page-scrollbar-thumb-color);\n    border-radius: 5px;\n  }\n  ::-webkit-scrollbar-thumb:hover {\n    background-color: var(--screen-page-scrollbar-thumb-color-HOVER);\n  }\n\n  @media screen and (min-width: 767px) {\n    display: grid;\n    margin-bottom: auto;\n    grid-template-columns: ${props => {\n      return `repeat(${props.cols}, 334px)`;\n    }};\n    overflow-x: ${props => {\n      if (props.cols > 3) {\n        return 'scroll';\n      }\n      return 'hidden';\n    }};\n  }\n\n  @media screen and (min-width: 1400px) {\n    display: grid;\n    margin-bottom: auto;\n\n    overflow-x: ${props => {\n      if (props.cols > 4) {\n        return 'scroll';\n      }\n      return 'hidden';\n    }};\n  }\n`;\n\nexport const screenSyles = {\n  pt: { 0: 9.25, 768: 11, 1440: 9.75 },\n  pb: { 0: 3, 768: 4, 1440: 1 },\n  pl: { 0: 2.5, 768: 4, 1440: 3 },\n  pr: { 0: 2.5, 768: 4, 1440: 3 },\n  height: '100vh',\n  width: { 0: '100vw', 1440: `calc(100vw - ${SIDEBARWIDTH}px)` },\n  flexGrow: 1,\n\n  backgroundColor: 'var(--primary-bg-color)',\n};\n","import React, { useEffect, useState } from 'react';\nimport { ButtonAdd } from 'components/Buttons/Button';\nimport AddColumn from 'components/AddColumn/AddColumn';\nimport Column from '../../components/Column/Column';\nimport { HeaderDashboard } from 'components/HeaderDashboard/HeaderDashboard';\nimport { API } from 'Services/API';\nimport { useParams } from 'react-router-dom';\nimport {\n  MainWrapper,\n  ColumnsWrapper,\n  MainContainer,\n} from './ScreenPage.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Loader from 'components/Loader';\n\nconst ScreensPage = () => {\n  const { boardId } = useParams();\n  const [filterValue, setFilterValue] = useState('');\n  const stateFilter = useSelector(state => state.boards.filter);\n  const dispatch = useDispatch();\n\n  const reqData = {\n    id: boardId,\n    filter: filterValue,\n  };\n  const [isAddColumnOpen, setIsAddColumnOpen] = useState(false);\n\n  const { currentData, data, isFetching } = API.useGetBoardContentByIdQuery(\n    reqData,\n    {\n      refetchOnMountOrArgChange: true,\n      // skip: false,\n    }\n  );\n\n  console.log('currentData :>> ', currentData);\n  console.log('data :>> ', data);\n\n\n  const openAddColumn = () => setIsAddColumnOpen(true);\n  const closeAddColumn = () => setIsAddColumnOpen(false);\n\n  useEffect(() => {\n    if (stateFilter === '0') {\n      setFilterValue('');\n    } else {\n      setFilterValue(stateFilter);\n    }\n  }, [dispatch, stateFilter]);\n\n  return (\n    <MainWrapper index={data?.background}>\n      <MainContainer>\n        <HeaderDashboard filter={setFilterValue} title={data?.title} />\n\n        <ColumnsWrapper cols={!data?.content ? 1 : data?.content?.length + 1}>\n          {!isFetching ? (\n            data?.content?.map(\n              ({ _id: columnId, title: columnTitle, cards }, index) => (\n                <Column\n                  isFetching={isFetching}\n                  key={columnId}\n                  columnData={data.content[index]}\n                  columnTitle={columnTitle}\n                  columnId={columnId}\n                  cards={cards}\n                />\n              )\n            )\n          ) : (\n            <Loader />\n          )}\n\n          <ButtonAdd onClick={openAddColumn}></ButtonAdd>\n        </ColumnsWrapper>\n        {isAddColumnOpen ? (\n          <AddColumn\n            modalType={'Add column'}\n            open={isAddColumnOpen}\n            boardId={boardId}\n            close={closeAddColumn}\n          />\n        ) : (\n          <></>\n        )}\n      </MainContainer>\n    </MainWrapper>\n  );\n};\n\nexport default ScreensPage;\n"],"names":["API","useRegisterMutation","useLogInMutation","useLogOutMutation","useUpdateAvatarMutation","useGetCurrentUserQuery","useHelpUserMutation","useThemeUserMutation","useUpdateUserMutation","useGetBoardsQuery","useGetBoardContentByIdQuery","useGetBoardByIdQuery","useAddBoardsMutation","useDeleteBoardByIdMutation","useUpdateBoardByIdMutation","useAddColumnMutation","useUpdateColumnByIdMutation","useDeleteColumnByIdMutation","useGetAllCardsQuery","useAddCardMutation","useUpdateCardByIdMutation","useDeleteCardByIdMutation","useUpdateCardColumnByIdMutation","useLoginGoogleUserMutation","ButtonWithIcon","_ref","title","onClick","type","disabled","_jsxs","Button","variant","disableElevation","sx","display","gap","color","fontFamily","alignItems","textTransform","borderRadius","letterSpacing","fontSize","background","lineHeight","fontWeight","fontStyle","width","height","children","_jsx","Box","justifyContent","stroke","href","sprite","ButtonWithoutIcon","_ref2","marginTop","ButtonAdd","_ref3","ButtonSidebar","_ref4","IconButton","Container","styled","_templateObject","_taggedTemplateLiteral","TitleDashBoard","_templateObject2","FilterButton","_templateObject3","TitleFilter","_templateObject4","FormStyled","MUI","flexDirection","ButtonClose","InputStyled","TransparentSVG","UlStyled","UlBgStyled","_templateObject5","ImgStyled","_templateObject6","_templateObject7","LiIconsStyled","_templateObject8","modalStyles","position","top","left","transform","border","padding","titleStyles","marginBottom","open","handleClose","_Fragment","Modal","onClose","Typography","style","SIDEBARWIDTH","SIDEBARMOBILEWIDTH","TextareaStyled","SubWrapper","DateWrapper","DateText","SubTitle","_templateObject9","modalType","boardId","close","columnId","titleValue","_useState","useState","_useState2","_slicedToArray","columnTitle","setColumnTitle","_API$useAddColumnMuta","addColumn","_API$useUpdateColumnB","updateColumn","validationSchema","Yup","min","required","formikTitle","formik","useFormik","initialValues","onSubmit","handleSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","t0","console","log","message","abrupt","Notiflix","t1","handleReset","stop","_x","apply","arguments","ModalLayout","id","name","placeholder","onChange","handleChange","onBlur","handleBlur","value","values","ColorRadioButtons","onColorChange","_ref$value","_React$useState","React","_React$useState2","selectedValue","setSelectedValue","event","target","controlProps","item","checked","Radio","_objectSpread","DropDawnBtn","DropDownSVG","PopupStyles","backgroundColor","anchorEl","Popover","anchorOrigin","vertical","horizontal","transformOrigin","DateCalendarStyled","DateCalendar","DatePickerStyles","m","overflow","format","disablePast","showDaysOutsideCurrentMonth","success","_ref$cardId","cardId","_ref$titleValue","_ref$descrValue","descrValue","_ref$priorityValue","priorityValue","deadlineValue","date","setDate","_useState3","_useState4","dateValue","setDateValue","_useState5","toString","_useState6","setColor","_useState7","_useState8","setAnchorEl","_useState9","_useState10","isPopupOpen","setIsPopupOpen","_API$useAddCardMutati","addCards","_API$useUpdateCardByI","updateCard","handleSubmitForm","description","ISODate","cardData","_ISODate","_cardData","formatISO","representation","priority","deadline","status","data","_x2","trim","strict","cardInitialValues","_useFormik","useEffect","currentDate","Date","dateISO","parseISO","DropDownIcon","e","currentTarget","Popup","DatePickerCmponent","dateFns","getPriorityColor","getPriorityText","TypographyStylesTitle","TypographyStylesPriority","lineHeigt","CardContentStyles","borderBottom","paddingBottom","ActionsBox","CardActionsStyled","Circle","props","TypographyText","CardStyles","StyledIconButton","ListMenuStyles","MenuItem","TextContainer","expanded","Text","ReadMore","ShowMoreButton","TruncatedText","text","setExpanded","moveCard","_API$useDeleteCardByI","deleteCardById","isAddCardOpen","setIsAddCardOpen","dispatch","useDispatch","closeAddCard","handleCloseMenu","handleMoveCard","newColumn","handleDeleteCard","response","sent","deleteCard","error","concat","formattedDate","isDeadlineToday","CardContent","component","CardActions","AddCard","Menu","Boolean","PaperProps","ColumnWrapper","ColumnHeader","ColumnTitle","CardsList","cols","length","AddCardButton","cards","columnData","isFetching","_API$useDeleteColumnB","deleteColumn","isEditColumnOpen","setIsEditColumnOpen","handleDeleteColumn","Loader","strokeOpacity","map","_id","TaskCard","AddColumn","column","Div","FormPopup","LabelGroup","Label","RadioWrap","FormicField","labelStyle","titleStyle","wordWrap","Filter","filter","currentPrority","setCurrentPrority","isShowAllActive","setIsShowAllActive","setFilter","handleRadioClick","Popper","placement","Formik","role","size","_require","require","HeaderDashboard","isOpen","setIsOpen","toggleModal","MainWrapper","undefined","index","bgData","MainContainer","ColumnsWrapper","_data$content","_data$content2","useParams","filterValue","setFilterValue","stateFilter","useSelector","state","boards","reqData","isAddColumnOpen","setIsAddColumnOpen","_API$useGetBoardConte","refetchOnMountOrArgChange","currentData","content","Column"],"sourceRoot":""}