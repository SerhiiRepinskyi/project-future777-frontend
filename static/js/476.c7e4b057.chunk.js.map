{"version":3,"file":"static/js/476.c7e4b057.chunk.js","mappings":"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","sources":["Services/API.js","components/Logo/Logo-styled.jsx","components/Logo/Logo.jsx","components/ModalBoard/ModalBoard.styled.jsx","components/ModalLayout/ModalLayout.jsx","components/Sidebar/SidebarBoardItem-styled.jsx","components/Sidebar/SidebarBoardItemIcon.jsx","components/Sidebar/SidebarCONSTANTS.js","components/Sidebar/SidebarContent-styled.jsx","webpack://react-homework-template/./src/components/Sidebar/SidebarCustomScroll.module.css?4eb1","components/Sidebar/MeasureTitleWidth.jsx","components/ModalBoard/data.jsx","components/ModalBoard/ModalBoard.jsx","components/Sidebar/SidebarBoardItem.jsx","helpers/StrictModeDroppable.js","components/Sidebar/SidebarBoardList.jsx","components/logoutBtn/logoutBtn.styled.jsx","components/logoutBtn/logoutBtn.jsx","components/ModalHelp/ModalHelp.styled.js","components/ModalHelp/ModalHelp.js","components/Sidebar/SidebarHelpIcon.jsx","components/ModalMembers/ModalMembers.styled.jsx","components/ModalMembers/MemberListItem.jsx","components/ModalMembers/members.js","components/ModalMembers/ModalMembers.jsx","components/Sidebar/SidebarContent.jsx","components/Sidebar/Sidebar.jsx","components/Header/Header.styled.js","components/Header/NavBtn/NavBtn.jsx","components/ModalEditProfile/ModalEditProfile.styled.jsx","redux/auth/authSelectors.js","components/ModalEditProfile/ModalEditProfile.jsx","components/Header/UserInfo/UserInfo.styled.js","components/Header/UserInfo/UserInfo.jsx","components/Header/Header.jsx","pages/ScreensPage/DefaultScreenPage.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["import {\n  useRegisterMutation,\n  useLogInMutation,\n  useLogOutMutation,\n  useGetCurrentUserQuery,\n  useUpdateUserMutation,\n  useThemeUserMutation,\n  useUpdateAvatarMutation,\n  useHelpUserMutation,\n  useGetBoardsQuery,\n  useGetBoardContentByIdQuery,\n  useGetBoardByIdQuery,\n  useAddBoardsMutation,\n  useDeleteBoardByIdMutation,\n  useUpdateBoardByIdMutation,\n  useAddColumnMutation,\n  useUpdateColumnByIdMutation,\n  useDeleteColumnByIdMutation,\n  useGetAllCardsQuery,\n  useAddCardMutation,\n  useUpdateCardByIdMutation,\n  useDeleteCardByIdMutation,\n  useUpdateCardColumnByIdMutation,\n  useLoginGoogleUserMutation\n} from './API_Component';\n\nexport const API = {\n  useRegisterMutation,\n  useLogInMutation,\n  useLogOutMutation,\n  useUpdateAvatarMutation,\n  useGetCurrentUserQuery,\n  useHelpUserMutation,\n  useThemeUserMutation,\n  useUpdateUserMutation,\n  useGetBoardsQuery,\n  useGetBoardContentByIdQuery,\n  useGetBoardByIdQuery,\n  useAddBoardsMutation,\n  useDeleteBoardByIdMutation,\n  useUpdateBoardByIdMutation,\n  useAddColumnMutation,\n  useUpdateColumnByIdMutation,\n  useDeleteColumnByIdMutation,\n  useGetAllCardsQuery,\n  useAddCardMutation,\n  useUpdateCardByIdMutation,\n  useDeleteCardByIdMutation,\n  useUpdateCardColumnByIdMutation,\n  useLoginGoogleUserMutation\n};\n","import { styled } from '@mui/material/styles';\nimport { keyframes } from '@mui/system';\n\nconst slideLigtning = keyframes`\n  0% {transform: translateY(-25px)}\n\n  20% {transform: translateY(0px)}\n  80% {transform: translateY(0px)}\n\n  100% {transform: translateY(25px)}\n`;\n\nconst slideToRight = keyframes`\n  0% {transform: translateX(-200px)}\n  100% {transform: translateY(0px)}\n`;\n\nexport const SidebarLogoIcon = styled('svg')({\n  fill: 'var(--sidebar-icon-logo-color)',\n  width: '12px',\n  height: '16px',\n\n  animation: `${slideLigtning} 6s infinite`,\n  animationTimingFunction: 'ease',\n});\n\nexport const SidebarLogoWrap = styled('div')(({ isSidebarShown }) => ({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  gap: '8px',\n  width: '110px',\n\n  transform: 'translateX(-135px)',\n  animation: isSidebarShown ? `${slideToRight} 300ms` : 'none',\n  animationTimingFunction: 'ease',\n\n  animationFillMode: 'forwards',\n}));\n\nexport const SidebarLogoIconWrap = styled('div')({\n  width: '32px',\n  height: '32px',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  backgroundColor: 'var(--sidebar-icon-logo-bg-color)',\n  borderRadius: '8px',\n  overflow: 'hidden',\n});\n\nexport const SidebarLogoText = styled('p')({\n  margin: '0px',\n  color: 'var(--sidebar-primary-text-color)',\n  fontFamily: 'Poppins',\n  fontSize: '16px',\n  fontWeight: 600,\n  letterSpacing: '-0.64px',\n});\n\nexport const StartPageLogoWrap = styled('div')({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  gap: '14px',\n});\n\nexport const StartPageLogoIconWrap = styled('div')({\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  backgroundColor: '#161616',\n  borderRadius: '8px',\n});\n\nexport const StartPageLogoIcon = styled('svg')({\n  fill: '#ffffff',\n});\n\nexport const StartPageLogoText = styled('p')({\n  margin: '0px',\n  color: '#161616',\n  fontFamily: 'Poppins',\n  fontWeight: 600,\n  letterSpacing: '-0.64px',\n});\n","import {\n  SidebarLogoIconWrap,\n  SidebarLogoIcon,\n  SidebarLogoText,\n  StartPageLogoWrap,\n  StartPageLogoIconWrap,\n  StartPageLogoIcon,\n  StartPageLogoText,\n  SidebarLogoWrap,\n} from './Logo-styled';\nimport sprite from '../../assets/images/sprite.svg';\n\nexport const SidebarLogo = ({ sx, isSidebarShown }) => {\n  return (\n    <>\n      <SidebarLogoWrap sx={sx} isSidebarShown={isSidebarShown}>\n        <SidebarLogoIconWrap>\n          <SidebarLogoIcon>\n            <use href={sprite + '#icon-logo-lightning'}></use>\n          </SidebarLogoIcon>\n        </SidebarLogoIconWrap>\n\n        <SidebarLogoText>Task Pro</SidebarLogoText>\n      </SidebarLogoWrap>\n    </>\n  );\n};\n\nexport const StartPageLogo = ({ style }) => {\n  return (\n    <>\n      <StartPageLogoWrap style={style} sx={{ width: { 0: 166, 768: 222 } }}>\n        <StartPageLogoIconWrap\n          sx={{ width: { 0: 40, 768: 48 }, height: { 0: 40, 768: 48 } }}\n        >\n          <StartPageLogoIcon\n            sx={{ width: { 0: 15, 768: 18 }, height: { 0: 20, 768: 24 } }}\n          >\n            <use href={sprite + '#icon-logo-lightning'}></use>\n          </StartPageLogoIcon>\n        </StartPageLogoIconWrap>\n\n        <StartPageLogoText\n          sx={{\n            fontSize: { 0: 28, 768: 40 },\n            letterSpacing: { 0: -1.12, 768: -1.6 },\n          }}\n        >\n          Task Pro\n        </StartPageLogoText>\n      </StartPageLogoWrap>\n    </>\n  );\n};\n","import styled from '@emotion/styled';\nimport { styled as MUI } from '@mui/material/styles';\n\nexport const FormStyled = MUI('form')({\n  display: 'flex',\n  flexDirection: 'column',\n  gap: '14px',\n});\n\nexport const ButtonClose = styled.button`\n  font-family: Poppins;\n  margin: 0;\n  padding: 0;\n  position: absolute;\n  right: 10px;\n  top: 10px;\n  width: 24px;\n  height: 24px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  background-color: transparent;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n\n  transition: var(--tra);\n\n  &:hover,\n  &:focus {\n    transform: scale(1.2);\n    /* border: 1px solid #ffffff;\n    color: rgba(255, 255, 255, 1); */\n  }\n`;\n\nexport const InputStyled = styled.input`\n  font-family: Poppins;\n  resize: none;\n  color: var(--primary-text-color);\n  padding: 14px 14px;\n  background-color: transparent;\n  border: 1px solid rgba(190, 219, 176, 0.4);\n  border-radius: 8px;\n  margin-bottom: 10px;\n  :focus {\n    border: 1px solid #bedbb0;\n    outline: none;\n  }\n  ::placeholder {\n    color: var(--primary-text-color);\n    opacity: 30%;\n  }\n`;\n\nexport const TransparentSVG = styled.svg`\n  width: 18px;\n  height: 18px;\n  // stroke: rgba(255, 255, 255, 0.5);\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    stroke: #bedbb0;\n  }\n`;\n\nexport const UlStyled = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 6px;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  margin-bottom: 14px;\n`;\n\nexport const UlBgStyled = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 4px;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  margin-bottom: 14px;\n  max-width: 260px;\n`;\n\nexport const LiStyled = styled.li`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 28px;\n  height: 28px;\n  border-radius: 5px;\n\n  &:hover,\n  &:focus {\n    border: 1px solid #bedbb0;\n  }\n`;\n\nexport const ImgStyled = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  object-position: center;\n  cursor: pointer;\n`;\n\nexport const LiIconsStyled = styled.li`\n  display: flex;\n  width: 20px;\n  height: 20px;\n  align-items: center;\n  justify-content: center;\n\n  &:hover,\n  &:focus {\n    border-radius: 5px;\n    background-color: rgba(190, 219, 176, 0.2);\n  }\n`;\n","import { Modal, Box, Typography } from '@mui/material';\nimport sprite from '../../assets/images/sprite.svg';\nimport { ButtonClose } from 'components/ModalBoard/ModalBoard.styled';\n\n// import { useState } from 'react';\n\nconst modalStyles = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  borderRadius: 2,\n  border: '1px solid rgba(190, 219, 176, 0.50)',\n  background: 'var(--modal-bg-color)',\n  padding: 3,\n  fontFamily: 'Poppins',\n};\n\nconst titleStyles = {\n  color: 'var(--primary-text-color)',\n  fontSize: '18px',\n  fontStyle: 'normal',\n  fontWeight: 500,\n  fontFamily: 'Poppins',\n  lineHeight: 'normal',\n  letterSpacing: -0.36,\n  marginBottom: 3,\n};\n\nconst ModalLayout = ({ title, open, handleClose, children }) => {\n  return (\n    <>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-title\"\n        aria-describedby=\"modal-description\"\n      >\n        <Box sx={modalStyles}>\n          <Typography variant=\"h2\" sx={titleStyles}>\n            {title}\n          </Typography>\n          <ButtonClose type=\"button\" onClick={handleClose}>\n            <svg\n              style={{ stroke: 'var(--primary-text-color)' }}\n              width=\"18\"\n              height=\"18\"\n            >\n              <use href={sprite + '#icon-x-close'} />\n            </svg>\n          </ButtonClose>\n          {children}\n        </Box>\n      </Modal>\n    </>\n  );\n};\n\nexport default ModalLayout;\n","import { styled } from '@mui/material/styles';\nimport { keyframes } from '@mui/system';\n\nconst slideAround = keyframes`\n  0% {transform: rotate(0deg)}\n  100% {transform: rotate(360deg)}\n`;\n\nexport const BoardItemWrap = styled('div')({\n  paddingTop: '20px',\n  paddingBottom: '20px',\n\n  width: '100%',\n  display: 'flex',\n  flexDirection: 'row',\n  gap: '8px',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n\n  overflow: 'hidden',\n});\n\nexport const BoardItemIcon = styled('svg')(({startAnimation})=> ({\n  width: '18px',\n  height: '18px',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  stroke: 'var(--sidebar-primary-text-color)',\n\n  animation: startAnimation ? `${slideAround} 1s  ease-out` : 'none',\n}));\n\nexport const BoardItemCurrentIcon = styled('svg')({\n  width: '16px',\n  height: '16px',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n});\n\nexport const BoardItemTitleWrap = styled('div')({\n  overflow: 'hidden',\n  whiteSpace: 'nowrap',\n});\n\nexport const BoardItemTitle = styled('p')(\n  ({ titleWidth, titleWrapWidth, current }) => {\n    const slideText = keyframes`\n    0% { transform: translateX(0px); }\n    100% { transform: translateX(${titleWrapWidth - titleWidth}px); }\n  `;\n\n    return {\n      margin: '0px',\n      color: 'var(--sidebar-primary-text-color)',\n      fontFamily: 'Poppins',\n      fontSize: '14px',\n      fontStyle: 'normal',\n      fontWeight: '500',\n      letterSpacing: '-0.28px',\n\n      animationName: titleWidth >= titleWrapWidth && current ? slideText : 'none',\n      animationDuration: `${titleWidth * 30}ms`,\n      animationTimingFunction: 'linear',\n      animationIterationCount: 'infinite',\n      animationDirection: 'alternate',\n    };\n  }\n);\n","import { useEffect, useState } from \"react\";\nimport { BoardItemIcon } from \"./SidebarBoardItem-styled\"\nimport sprite from '../../assets/images/sprite.svg';\n\n\nexport const SidebarBoardItemIcon = ({current, iconId}) => {\n\n    const [startAnimation, setStartAnimation] = useState(true);\n\n    useEffect(() => {\n        const randomNumber = Math.floor(Math.random() * (15000 - 7000 + 1)) + 7000;\n        const interval = setInterval(() => {\n          setStartAnimation(true);\n          setTimeout(() => {\n            setStartAnimation(false);\n          }, 1000);\n        }, randomNumber);\n    \n        return () => {\n          clearInterval(interval);\n        };\n      }, []);\n\n    return (\n        <BoardItemIcon\n        startAnimation={startAnimation}\n        sx={{ opacity: current ? 1 : 0.5 }}\n      >\n        <use href={sprite + iconId}></use>\n      </BoardItemIcon>\n    )\n}","export const SIDEBARWIDTH = 260;\nexport const SIDEBARMOBILEWIDTH = 225;\n  \n\n\n\n","import { styled } from '@mui/material/styles';\nimport { keyframes } from '@mui/system';\n\nconst slideToRight = keyframes`\n  0% {transform: translateX(-250px)}\n  100% {transform: translateX(0px)}\n`;\n\nconst slideToLeft = keyframes`\n  0% {transform: translateX(150px)}\n  100% {transform: translateX(0px)}\n`;\n\nconst slideToDown = keyframes`\n  0% {transform: translateY(-250px)}\n  100% {transform: translateY(0px)}\n`;\n\nconst shakeAnimation = keyframes`\n  0%, 100% {\n    transform: translateX(0);\n  }\n  10%, 30%, 50%, 70%, 90% {\n    transform: translateX(-2px);\n   \n  }\n  20%, 40%, 60%, 80% {\n    transform: translateX(2px);\n  \n  }\n\n`;\n\nexport const Subtitle = styled('p')(({ isSidebarShown }) => ({\n  display: 'inline-block',\n  color: 'var(--sidebar-secondary-text-color)',\n  fontFamily: 'Poppins',\n  fontSize: '12px',\n  fontWeight: 400,\n  letterSpacing: '-0.24px',\n\n  animation: isSidebarShown ? `${slideToLeft} 400ms` : 'none',\n  animationTimingFunction: 'ease',\n  animationFillMode: 'forwards',\n}));\n\nexport const CreateBoardWrap = styled('div')({\n  paddingBottom: '14px',\n  paddingTop: '14px',\n  borderTop: '1px solid var(--sidebar-border-color)',\n  borderBottom: '1px solid var(--sidebar-border-color)',\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  gap: '8px',\n});\n\nexport const TitleCreate = styled('p')(({ isSidebarShown }) => ({\n  margin: '0px',\n  color: 'var(--sidebar-primary-text-color)',\n  fontFamily: 'Poppins',\n  fontSize: '14px',\n  fontWeight: 500,\n  letterSpacing: '-0.28px',\n\n  transform: 'translateX(-250px)',\n  animation: isSidebarShown ? `${slideToRight} 400ms` : 'none',\n  animationTimingFunction: 'ease',\n\n  animationFillMode: 'forwards',\n}));\n\nexport const HelpBox = styled('div')({\n  borderRadius: '8px',\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'left',\n  backgroundColor: 'var(--sidebar-secondary-bg-color)',\n  overflow: 'hidden',\n});\n\nexport const Image = styled('img')(({ isSidebarShown }) => ({\n  width: '54px',\n  height: '78px',\n  marginBottom: '14px',\n\n  transform: 'translateY(250px)',\n  animation: isSidebarShown ? `${slideToDown} 400ms` : 'none',\n  animationTimingFunction: 'ease',\n\n  animationFillMode: 'forwards',\n}));\n\nexport const HelpText = styled('p')(({ isSidebarShown }) => ({\n  margin: '0px',\n  color: 'var(--sidebar-primary-text-color)',\n  fontFamily: 'Poppins',\n  fontWeight: 400,\n  letterSpacing: -0.15,\n\n  transform: 'translateX(-250px)',\n  animation: isSidebarShown ? `${slideToRight} 400ms` : 'none',\n  animationTimingFunction: 'ease',\n\n  animationFillMode: 'forwards',\n}));\n\nexport const HelpButton = styled('button')(({ isSidebarShown }) => ({\n  padding: 0,\n  width: '94px',\n  height: '20px',\n  display: 'flex',\n  gap: '8px',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  color: 'var(--sidebar-primary-text-color)',\n  backgroundColor: 'transparent',\n  fontFamily: 'Poppins',\n  fontSize: '12px',\n  fontWeight: 500,\n  lineHeight: 1.5,\n  letterSpacing: '-0.24px',\n  border: 'none',\n  cursor: 'pointer',\n  '&:hover, &:focus': {\n    textDecoration: 'underline',\n    outline: 'none',\n  },\n\n  transform: 'translateX(250px)',\n  animation: isSidebarShown ? `${slideToLeft} 400ms` : 'none',\n  animationTimingFunction: 'ease',\n  animationFillMode: 'forwards',\n}));\n\nexport const TaskProButton = styled('button')({\n  padding: 0,\n  margin: 0,\n  color: 'var(--sidebar-taskpro-link-color)',\n  backgroundColor: 'transparent',\n  fontFamily: 'Poppins',\n  fontSize: 'inherit',\n  fontWeight: 500,\n  lineHeight: 1.5,\n  letterSpacing: '-0.24px',\n  border: 'none',\n  cursor: 'pointer',\n\n  '&:hover, &:focus': {\n    textDecoration: 'underline',\n    outline: 'none',\n  },\n});\n\nexport const HelpIcon = styled('svg')(({ startAnimation }) => ({\n  stroke: 'var(--sidebar-primary-text-color)',\n  width: '20px',\n  height: '20px',\n  animation: startAnimation ? `${shakeAnimation} 1s  ease-out` : 'none',\n\n  '&:hover, &:focus': {\n    textDecoration: 'underline',\n    outline: 'none',\n  },\n}));\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"SidebarCustomScroll_container__EnYRA\"};","import React, { useRef, useEffect } from 'react';\n\nconst MeasureTitleWidth = ({ title, setTitleWidth }) => {\n  const measureRef = useRef(null);\n\n  useEffect(() => {\n    const observer = new ResizeObserver(entries => {\n      for (const entry of entries) {\n        if (entry.target === measureRef.current) {\n          setTitleWidth(entry.contentRect.width);\n        }\n      }\n    });\n\n    const currentRef = measureRef.current;\n\n    if (currentRef) {\n      observer.observe(currentRef);\n    }\n\n    return () => {\n      if (currentRef) {\n        observer.unobserve(currentRef);\n      }\n    };\n  }, [setTitleWidth]);\n\n  return (\n    <span\n      ref={measureRef}\n      style={{\n        position: 'absolute',\n        top: '-9999px',\n        left: '-9999px',\n        visibility: 'hidden',\n        whiteSpace: 'nowrap',\n      }}\n    >\n      {title}\n    </span>\n  );\n};\n\nexport default MeasureTitleWidth;\n","export const arrIcons = [\n  '#icon-Project',\n  '#icon-star',\n  '#icon-loading',\n  '#icon-puzzle',\n  '#icon-container',\n  '#icon-lightning',\n  '#icon-colors',\n  '#icon-hexagon',\n];\n\nexport const arrBG = [\n  'https://res.cloudinary.com/teamprojectavatar/image/upload/v1693617131/bg-img/laptop/1/1-bg-laptop-1x.jpg',\n  'https://res.cloudinary.com/teamprojectavatar/image/upload/v1693617134/bg-img/laptop/1/2-bg-laptop-1x.jpg',\n  'https://res.cloudinary.com/teamprojectavatar/image/upload/v1693617134/bg-img/laptop/1/3-bg-laptop-1x.jpg',\n  'https://res.cloudinary.com/teamprojectavatar/image/upload/v1693617121/bg-img/laptop/1/4-bg-laptop-1x.jpg',\n  'https://res.cloudinary.com/teamprojectavatar/image/upload/v1693617121/bg-img/laptop/1/5-bg-laptop-1x.jpg',\n  'https://res.cloudinary.com/teamprojectavatar/image/upload/v1693617122/bg-img/laptop/1/6-bg-laptop-1x.jpg',\n  'https://res.cloudinary.com/teamprojectavatar/image/upload/v1693617123/bg-img/laptop/1/7-bg-laptop-1x.jpg',\n  'https://res.cloudinary.com/teamprojectavatar/image/upload/v1693617124/bg-img/laptop/1/8-bg-laptop-1x.jpg',\n  'https://res.cloudinary.com/teamprojectavatar/image/upload/v1693617125/bg-img/laptop/1/9-bg-laptop-1x.jpg',\n  'https://res.cloudinary.com/teamprojectavatar/image/upload/v1693617126/bg-img/laptop/1/10-bg-laptop-1x.jpg',\n  'https://res.cloudinary.com/teamprojectavatar/image/upload/v1693617126/bg-img/laptop/1/11-bg-laptop-1x.jpg',\n  'https://res.cloudinary.com/teamprojectavatar/image/upload/v1693617127/bg-img/laptop/1/12-bg-laptop-1x.jpg',\n  'https://res.cloudinary.com/teamprojectavatar/image/upload/v1693617127/bg-img/laptop/1/13-bg-laptop-1x.jpg',\n  'https://res.cloudinary.com/teamprojectavatar/image/upload/v1693617128/bg-img/laptop/1/14-bg-laptop-1x.jpg',\n  'https://res.cloudinary.com/teamprojectavatar/image/upload/v1693617129/bg-img/laptop/1/15-bg-laptop-1x.jpg',\n];\n","import { useFormik } from 'formik';\nimport { Box, Typography } from '@mui/material';\nimport {\n  FormStyled,\n  InputStyled,\n  TransparentSVG,\n  UlStyled,\n  // LiStyled,\n  UlBgStyled,\n  ImgStyled,\n  LiIconsStyled,\n} from './ModalBoard.styled';\n\nimport Notiflix from 'notiflix';\nimport { Report } from 'notiflix';\nimport sprite from '../../assets/images/sprite.svg';\nimport * as Yup from 'yup';\nimport { ButtonWithIcon } from 'components/Buttons/Button';\nimport ModalLayout from 'components/ModalLayout/ModalLayout';\nimport { useState } from 'react';\nimport { arrIcons } from './data';\nimport { arrBG } from './data';\nimport { useDispatch } from 'react-redux';\nimport { API } from 'Services/API';\nimport {\n  setBoardId,\n  setBoardResponse,\n  setBoardsIdArrayByPushToStart,\n} from 'redux/boards/boardsAPISlice';\nimport { useNavigate } from 'react-router-dom';\n\nconst titleStyle = {\n  color: 'var(--primary-text-color)',\n  fontSize: 14,\n  fontStyle: 'normal',\n  fontWeight: 500,\n  lineHeight: 'normal',\n  letterSpacing: -0.36,\n  fontFamily: 'Poppins',\n};\nconst ModalBoard = ({ board, boardTitle, open, handleClose }) => {\n  const dispatch = useDispatch();\n\n  const [inputValue, setInputValue] = useState(board?.title || '');\n  const [iconId, setIconId] = useState(board?.iconId || arrIcons[0]);\n  const [background, setBackground] = useState(board?.background || 0);\n\n  const [addBoard] = API.useAddBoardsMutation();\n  const [editBoard] = API.useUpdateBoardByIdMutation();\n\n  const navigate = useNavigate();\n\n  const handleSubmit = async title => {\n    try {\n      const FormData = {\n        title,\n        background,\n        iconId,\n      };\n\n      if (boardTitle === 'New board') {\n        const response = await addBoard(FormData);\n        dispatch(setBoardResponse(response));\n\n        dispatch(setBoardId({ boardId: response.data._id }));\n\n        dispatch(setBoardsIdArrayByPushToStart(response.data._id));\n\n        navigate(`/home/${response.data._id}`);\n        setInputValue('');\n        setIconId(arrIcons[0]);\n        setBackground(0);\n        Report.success(\n          'Board added successfully',\n          'You can use your board and add columns to it',\n          'Ok'\n        );\n      }\n      if (boardTitle === 'Edit board') {\n        if (\n          board.title === inputValue &&\n          board.iconId === iconId &&\n          board.background === background\n        ) {\n          Report.warning(\n            'No changes have been selected',\n            'Edit any field to apply the changes',\n            'Ok'\n          );\n          return;\n        }\n\n        const response = await editBoard({ boardId: board._id, FormData });\n        dispatch(setBoardResponse(response));\n        Report.success(\n          'Board edited successfully',\n          'All changes have been made',\n          'Ok'\n        );\n      }\n      handleClose();\n    } catch {\n      Report.failure(\"Board wasn't edited\", 'Changes have not been made', 'Ok');\n    }\n    formik.handleReset();\n  };\n\n  const handleChange = e => {\n    setInputValue(e.currentTarget.value);\n    formik.setFieldValue('title', e.currentTarget.value);\n  };\n\n  const validationSchema = Yup.object({\n    title: Yup.string()\n      .min(2, 'Must be more than 2 symbols')\n      .max(50, 'Must be less than 50 symbols')\n      .required('Title is required')\n      .test(\n        'is-not-cyrillic',\n        'Title must not contain Cyrillic characters',\n        function (value) {\n          if (/[а-яА-Я]/.test(value)) {\n            Notiflix.Notify.warning(\n              'Title field must not contain enemy characters!'\n            );\n\n            return false;\n          }\n          return true;\n        }\n      ),\n    description: Yup.string(),\n  });\n\n  const formik = useFormik({\n    initialValues: { title: inputValue },\n    onSubmit: ({ title }) => handleSubmit(title),\n    validationSchema,\n  });\n\n  return (\n    <>\n      <ModalLayout title={boardTitle} open={open} handleClose={handleClose}>\n        <FormStyled\n          sx={{ width: { 0: '77vw', 375: '287px', 768: '302px' } }}\n          onSubmit={formik.handleSubmit}\n        >\n          <InputStyled\n            id=\"title\"\n            name=\"title\"\n            placeholder={'Title'}\n            onChange={handleChange}\n            onBlur={formik.handleBlur}\n            value={inputValue}\n          />\n          <Typography variant=\"h2\" sx={titleStyle}>\n            Icons\n          </Typography>\n          <UlStyled>\n            {arrIcons.map(icon => {\n              return (\n                <LiIconsStyled\n                  key={icon}\n                  onClick={() => setIconId(icon)}\n                  isSelected={iconId === icon}\n                >\n                  <TransparentSVG>\n                    <use\n                      href={sprite + icon}\n                      style={{\n                        stroke:\n                          iconId === icon\n                            ? 'var(--primary-text-color)'\n                            : 'var(--board-modal-icon-color)',\n                        transition: 'stroke 0.2s ease',\n                      }}\n                    />\n                  </TransparentSVG>\n                </LiIconsStyled>\n              );\n            })}\n          </UlStyled>\n\n          <Typography variant=\"h2\" sx={titleStyle}>\n            Background\n          </Typography>\n          <UlBgStyled>\n            <li\n              key={0}\n              onClick={() => {\n                setBackground(0);\n              }}\n            >\n              <Box\n                sx={{\n                  overflow: 'hidden',\n                  display: 'flex',\n                  justifyContent: 'center',\n                  alignItems: 'center',\n                  width: '28px',\n                  height: '28px',\n                  borderRadius: '6px',\n                  border:\n                    0 === background\n                      ? '2px solid var(--primary-text-color)'\n                      : '2px solid transparent',\n                  '&:hover, &:focus': {\n                    border:\n                      '2px solid var(--sidebar-icon-plus-bg-color-HOVER-FOCUS)',\n                  },\n                }}\n              >\n                <div\n                  style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    width: '100%',\n                    height: '100%',\n                    backgroundColor: 'var(--primary-bg-color)',\n                    borderRadius: '5px',\n                    cursor: 'pointer',\n                  }}\n                >\n                  <svg\n                    style={{\n                      width: '16px',\n                      height: '16px',\n                      stroke: 'var(--board-modal-icon-color)',\n                    }}\n                  >\n                    <use href={sprite + '#icon-default-background'}></use>\n                  </svg>\n                </div>\n              </Box>\n            </li>\n            {arrBG.map((bg, index) => {\n              return (\n                <li key={index + 1} onClick={() => setBackground(index + 1)}>\n                  <Box\n                    sx={{\n                      overflow: 'hidden',\n                      display: 'flex',\n                      justifyContent: 'center',\n                      alignItems: 'center',\n                      width: '28px',\n                      height: '28px',\n                      borderRadius: '6px',\n                      border:\n                        index + 1 === background\n                          ? '2px solid var(--primary-text-color)'\n                          : '2px solid transparent',\n                      '&:hover, &:focus': {\n                        border:\n                          '2px solid var(--sidebar-icon-plus-bg-color-HOVER-FOCUS)',\n                      },\n                    }}\n                  >\n                    <ImgStyled src={bg} alt=\"background picture\" />\n                  </Box>\n                </li>\n              );\n            })}\n          </UlBgStyled>\n\n          <ButtonWithIcon\n            title={boardTitle === 'New board' ? 'Create' : 'Edit'}\n            type={'submit'}\n            onClick={() => {\n              if (formik.values.title === '' && !inputValue) {\n                Notiflix.Notify.warning('Title field must be filled in');\n              }\n            }}\n          />\n        </FormStyled>\n      </ModalLayout>\n    </>\n  );\n};\n\nexport default ModalBoard;\n","import {\n  BoardItemCurrentIcon,\n  BoardItemTitle,\n  BoardItemTitleWrap,\n  BoardItemWrap,\n} from './SidebarBoardItem-styled';\n\nimport sprite from '../../assets/images/sprite.svg';\nimport MeasureTitleWidth from './MeasureTitleWidth';\n\nimport { debounce } from 'lodash';\nimport { Box, List, ListItem, ListItemButton } from '@mui/material';\nimport { useEffect, useState } from 'react';\nimport { API } from 'Services/API';\nimport ModalBoard from 'components/ModalBoard/ModalBoard';\nimport { SidebarBoardItemIcon } from './SidebarBoardItemIcon';\nimport { useDispatch } from 'react-redux';\nimport { setBoardId, setBoardsIdArray } from 'redux/boards/boardsAPISlice';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router';\n\nexport const SidebarBoardItem = ({ board, current }) => {\n  const { _id: id, iconId, title } = board;\n\n  const boardsIdArray = useSelector(state => state.boards.boardsIdArray);\n\n  const dispatch = useDispatch();\n\n  const navigate = useNavigate();\n\n  const [isHovered, setIsHovered] = useState(false);\n  const [titleWidth, setTitleWidth] = useState(0);\n  const [titleWrapWidth, setTitleWrapWidth] = useState(130);\n  const [screenWidth, setScreenWidth] = useState(window.innerWidth);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const [deleteBoard] = API.useDeleteBoardByIdMutation();\n\n  const handleResize = debounce(() => {\n    setScreenWidth(window.innerWidth);\n  }, 200);\n\n  useEffect(() => {\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [handleResize]);\n\n  useEffect(() => {\n    if (screenWidth <= 320) {\n      setTitleWrapWidth(85);\n    } else if (screenWidth <= 768) {\n      setTitleWrapWidth(120);\n    } else setTitleWrapWidth(130);\n  }, [screenWidth, title]);\n\n  const modalStateChange = () => setIsModalOpen(!isModalOpen);\n\n  const handleEditClick = event => {\n    event.stopPropagation();\n    modalStateChange();\n  };\n\n  const handleDeleteClick = event => {\n    event.stopPropagation();\n\n    if (boardsIdArray?.length > 1) {\n      const filteredArray = boardsIdArray?.filter(el => el !== id);\n      dispatch(setBoardsIdArray(filteredArray));\n      dispatch(setBoardId({ boardId: filteredArray[0] }));\n      navigate(`/home/${filteredArray[0]}`);\n    } \n\n    if (boardsIdArray?.length === 1) {\n      dispatch(setBoardsIdArray([]));\n      dispatch(setBoardId({ boardId: '' }));\n      navigate(\"/home\");\n    }\n\n    deleteBoard(id);\n  };\n\n  return (\n    <>\n      <MeasureTitleWidth title={title} setTitleWidth={setTitleWidth} />\n\n      <BoardItemWrap\n        onMouseEnter={() => setIsHovered(true)}\n        onMouseLeave={() => setIsHovered(false)}\n        sx={{\n          pl: { 0: 1.75, 768: 3 },\n          pr: { 0: 1.75, 768: 3 },\n          backgroundColor: current\n            ? 'var(--sidebar-board-item-bg-color-CURRENT)'\n            : 'transparent',\n        }}\n      >\n        <Box\n          sx={{\n            display: 'flex',\n            flexDirection: 'row',\n            gap: { 0: 0.5, 768: 1 },\n            alignItems: 'center',\n          }}\n        >\n          <SidebarBoardItemIcon current={current} iconId={iconId} />\n\n          <BoardItemTitleWrap\n            sx={{\n              width: current\n                ? { 0: 85, 320: 'calc(60vw - 105px)', 375: 120, 768: 130 }\n                : { 0: 135, 320: 'calc(60vw - 55px)', 375: 170, 768: 180 },\n            }}\n          >\n            <BoardItemTitle\n              sx={{ opacity: current ? 1 : 0.5 }}\n              titleWidth={titleWidth}\n              titleWrapWidth={titleWrapWidth}\n              current={current}\n            >\n              {title}\n            </BoardItemTitle>\n          </BoardItemTitleWrap>\n        </Box>\n\n        {isHovered && (\n          <Box\n            sx={{\n              position: 'absolute',\n              right: 0,\n              width: '4px',\n              height: '100%',\n              backgroundColor: 'var(--sidebar-board-item-bg-color-AFTER)',\n              opacity: 0.4,\n              borderRadius: '4px 0px 0px 4px',\n            }}\n          />\n        )}\n\n        {current && (\n          <Box\n            sx={{\n              position: 'absolute',\n              right: 0,\n              width: '4px',\n              height: '100%',\n              backgroundColor: 'var(--sidebar-board-item-bg-color-AFTER)',\n              borderRadius: '4px 0px 0px 4px',\n            }}\n          />\n        )}\n\n        {current && (\n          <List\n            disablePadding\n            sx={{\n              display: 'flex',\n              flexDirection: 'row',\n              gap: 1,\n              alignItems: 'center',\n              justifyContent: 'center',\n            }}\n          >\n            <ListItem disablePadding>\n              <ListItemButton\n                sx={{\n                  p: 0,\n                  m: 0,\n                  pointerEvents: 'auto',\n                  backgroundColor: 'transparent',\n                  opacity: 0.5,\n                  stroke: 'var(--sidebar-primary-text-color)',\n                  '&:hover, &:focus': {\n                    opacity: 1,\n                    backgroundColor: 'transparent',\n                  },\n                }}\n                onClick={handleEditClick}\n              >\n                <BoardItemCurrentIcon>\n                  <use href={sprite + '#icon-pencil'}></use>\n                </BoardItemCurrentIcon>\n              </ListItemButton>\n            </ListItem>\n\n            <ListItem disablePadding>\n              <ListItemButton\n                sx={{\n                  p: 0,\n                  m: 0,\n                  pointerEvents: 'auto',\n                  backgroundColor: 'transparent',\n                  opacity: 0.5,\n                  stroke: 'var(--sidebar-primary-text-color)',\n                  '&:hover, &:focus': {\n                    opacity: 1,\n                    backgroundColor: 'transparent',\n                  },\n                }}\n                onClick={handleDeleteClick}\n              >\n                <BoardItemCurrentIcon>\n                  <use href={sprite + '#icon-trash'}></use>\n                </BoardItemCurrentIcon>\n              </ListItemButton>\n            </ListItem>\n          </List>\n        )}\n      </BoardItemWrap>\n\n      <ModalBoard\n        board={board}\n        boardTitle={'Edit board'}\n        open={isModalOpen}\n        handleClose={modalStateChange}\n      />\n    </>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { Droppable } from \"react-beautiful-dnd\";\n\nexport const StrictModeDroppable = ({ children, ...props }) => {\n  const [enabled, setEnabled] = useState(false);\n\n  useEffect(() => {\n    const animation = requestAnimationFrame(() => setEnabled(true));\n\n    return () => {\n      cancelAnimationFrame(animation);\n      setEnabled(false);\n    };\n  }, []);\n\n  if (!enabled) {\n    return null;\n  }\n\n  return <Droppable {...props}>{children}</Droppable>;\n};","import { List, ListItem, ListItemButton } from '@mui/material';\nimport { SidebarBoardItem } from './SidebarBoardItem';\nimport { useEffect, useState } from 'react';\n\nimport { API } from 'Services/API';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setBoardId, setBoardsIdArray } from 'redux/boards/boardsAPISlice';\n\nimport { DragDropContext, Draggable } from 'react-beautiful-dnd';\nimport { StrictModeDroppable as Droppable } from 'helpers/StrictModeDroppable';\n\nexport const SidebarBoardList = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const { data } = API.useGetBoardsQuery();\n  const [boardsArray, setBoardsArray] = useState(data || []);\n\n  const boardId = useSelector(state => state.boards.boardId);\n  const boardsIdArray = useSelector(state => state.boards.boardsIdArray);\n\n  useEffect(() => {\n    if (!boardsIdArray && data?.length) {\n      dispatch(setBoardsIdArray(data?.map(el => el._id)));\n    }\n\n    let myArray;\n    if (boardsIdArray?.length && data?.length) {\n      myArray = boardsIdArray.map(el => {\n        return data.find(board => board._id === el);\n      });\n\n      const newItems = data.filter(board => {\n        return !boardsIdArray.includes(board._id);\n      });\n\n      if (newItems?.length) myArray = [...newItems, ...myArray];\n    }\n\n    setBoardsArray(myArray || data);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data, dispatch]);\n\n  const handleOnDragEnd = result => {\n    if (!result.destination) return;\n\n    const boards = [...boardsArray];\n\n    const [reorderedBoard] = boards.splice(result.source.index, 1);\n\n    boards.splice(result.destination.index, 0, reorderedBoard);\n\n    const newBoardsIdArray = boards.map(board => board._id);\n    dispatch(setBoardsIdArray(newBoardsIdArray));\n\n    setBoardsArray(boards);\n  };\n\n  const handleButtonClick = id => {\n    dispatch(setBoardId({ boardId: id }));\n    navigate(`/home/${id}`);\n  };\n\n  if (!data || !boardsArray) {\n    // Очікування завантаження даних або boardsArray\n    return <div>Loading...</div>;\n  }\n  return (\n    <>\n      <DragDropContext onDragEnd={handleOnDragEnd}>\n        <Droppable droppableId=\"boardsArray\">\n          {provided => (\n            <List\n              {...provided.droppableProps}\n              ref={provided.innerRef}\n              disablePadding\n              sx={{\n                display: 'flex',\n                flexDirection: 'column',\n                gap: 0.5,\n                mb: 3,\n              }}\n            >\n              {boardsArray?.map((board, index) => (\n                <Draggable\n                  draggableId={board._id.toString()}\n                  key={board._id}\n                  index={index}\n                >\n                  {provided => (\n                    <ListItem\n                      {...provided.draggableProps}\n                      {...provided.dragHandleProps}\n                      ref={provided.innerRef}\n                      disablePadding\n                    >\n                      <ListItemButton\n                        sx={{\n                          p: 0,\n                          m: 0,\n                          '&:hover, &:focus': {\n                            backgroundColor:\n                              'var(--sidebar-board-item-bg-color-CURRENT)',\n                          },\n                        }}\n                        onClick={() => handleButtonClick(board._id)}\n                      >\n                        <SidebarBoardItem\n                          board={board}\n                          current={boardId === board._id}\n                        />\n                      </ListItemButton>\n                    </ListItem>\n                  )}\n                </Draggable>\n              ))}\n              {provided.placeholder}\n            </List>\n          )}\n        </Droppable>\n      </DragDropContext>\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const LogOutBtnStyled = styled.button`\n  display: flex;\n  gap: 14px;\n  padding: 0px;\n  justify-content: center;\n  align-items: center;\n  height: 32px;\n  width: 105px;\n  border: none;\n  background-color: transparent;\n  cursor: pointer;\n  color: var(--sidebar-icon-logout-color);\n  transition: color 300ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    color: var(--sidebar-icon-logout-color-HOVER-FOCUS);    \n  }\n`;\n\nexport const SpanStyled = styled.span`\n  font-size: 14px;\n  font-weight: 500;\n  color: var(--sidebar-primary-text-color);\n  font-family: 'Poppins';\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\nexport const Icon = styled.svg`\n  width: 32px;\n  height: 32px;\n  fill: none;\n  stroke: currentColor;\n`;\n","import { useDispatch } from 'react-redux';\nimport sprite from '../../assets/images/sprite.svg';\nimport { Icon, LogOutBtnStyled, SpanStyled } from './logoutBtn.styled';\nimport { useLogOutMutation } from 'Services/API_Component/authAPI';\nimport { logout, setError, setIsLoggedIn } from 'redux/auth/authAPISlice';\n\nconst LogoutBtn = () => {\n  const dispatch = useDispatch();\n  const [logOut] = useLogOutMutation();\n\n  const handleLogOut = async () => {\n    try {\n      await logOut().unwrap();\n      dispatch(logout());\n      dispatch(setIsLoggedIn(false));\n    } catch (error) {\n      dispatch(setError(error));\n    }\n  };\n\n  return (\n    <>\n      <LogOutBtnStyled onClick={handleLogOut}>\n        <Icon width=\"32px\" height=\"32px\">\n          <use href={`${sprite}#icon-logout`} />\n        </Icon>\n        <SpanStyled>Log out</SpanStyled>\n      </LogOutBtnStyled>\n    </>\n  );\n};\n\nexport default LogoutBtn;\n","import styled from '@emotion/styled';\nimport { styled as MUI } from '@mui/material/styles';\n\nexport const FormStyled = MUI('form')({\n  display: 'flex',\n  flexDirection: 'column',\n  marginBottom: '0px',\n  overflow: 'hidden',\n   resize: 'block !important', \n});\n\nconst inputStyles = `\n  width: 100%;\n  padding: 14px 18px;\n  font-family: Poppins;\n  font-size: 14px;\n  font-weight: 100%;\n  line-height: 21px;\n  letter-spacing: -0.28px;\n  border-radius: 8px;\n  color:var(--primary-text-color);\n  border: 1px solid var(--input-border-color);\n  opacity: 0.6;\n  background-color: var(--bcg-modal-color);\n  transition: border-color 0.3s ease;\n  outline: none;\n  caret-color: var(--caret-color)\n  resize: block; \n\n  &::placeholder {\n    color: var(--primary-text-color);\n    font-size: 14px;\n    line-height: 21px;\n    font-family: 'Poppins';\n    letter-spacing: -0.28px;\n  }\n\n  &:focus {\n    -webkit-text-fill-color: var(--primary-text-color);\n    opacity: 1;\n  \n  }\n  &:active {\n    background-color: var(--modal-bg-color);\n    border: 1px solid var(--button-bg-color-hover);\n    outline:none;\n  }\n`;\n\nexport const InputStyled = styled.input`\n  ${inputStyles}\n   ${({ hasError }) => (hasError ? ErrorText : '')};\n  \n`;\n\nexport const TextareaStyled = styled.textarea`\n  ${inputStyles}\n  min-height: 155px;\n  text-align: top;\n  resize: block; \n  margin-top: 14px;\n  margin-bottom: 14px;\n    resize: none;\n  \n`;\n\nexport const ErrorText = styled.div`\n  color: var(--primary-text-color);\n  font-size: 12px;\n  margin-top: 2px;\n \n`;\n","import { Report } from 'notiflix';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport Notiflix from 'notiflix';\nimport { FormStyled, InputStyled, TextareaStyled } from './ModalHelp.styled';\nimport { ButtonWithoutIcon } from 'components/Buttons/Button';\nimport {  useSelector } from 'react-redux';\nimport { API } from 'Services/API';\nimport ModalLayout from 'components/ModalLayout/ModalLayout';\n\nconst ModalHelp = ({ title, open, handleClose }) => {\n \n  const [helpUser] = API.useHelpUserMutation();\n  const email = useSelector(state => state.auth.user.email);\n  const handleSubmit = async () => {\n    try {\n      const response = await helpUser({\n        email: formik.values.email,\n        comment: formik.values.comment,\n      });\n      if (response) {\n        handleClose();\n\n        Report.success(\n          'Email successfully sent',\n          'Our developer has engaged in an epic battle to provide you with an answer. Brace yourself for the victory writing, and in the meantime, hold tight!',\n          'Ok'\n        );\n      }\n      formik.resetForm();\n    } catch (error) {\n      if (error.status === 400) {\n        console.log('All field must be filled in');\n      } else {\n        console.log('An error occurred:', error.data.message);\n      }\n    }\n  };\n\n  const validationSchema = Yup.object({\n    email: Yup.string()\n    .email()\n    .matches(\n      /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/,\n      'Please enter a valid email address'\n    )\n    .test(\n      (value) => value === email\n    )\n    .required('Email is required'),\n    comment: Yup.string().required('Comment is required'),\n  });\n\n  const formik = useFormik({\n    initialValues: { email: email, comment: '' },\n    onSubmit: ({ title }) => handleSubmit(title),\n    validationSchema,\n  });\n\n  return (\n    <>\n      <ModalLayout title={'Need help'} open={open} handleClose={handleClose}>\n        <FormStyled sx={{width: {0: \"77vw\", 375: \"287px\", 768: \"352px\"}}} onSubmit={formik.handleSubmit}>\n          <InputStyled\n            id=\"email\"\n            name=\"email\"\n            placeholder=\"Email address\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.email}\n          />\n          <TextareaStyled\n            id=\"comment\"\n            name=\"comment\"\n            placeholder=\"Comment\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.comment}\n          />\n\n          <ButtonWithoutIcon\n            title={'Send'}\n            type={'submit'}\n            sx={{ marginTop: 24, background: 'var(--primary-text-color)' }}\n            onClick={() => {\n               if (!formik.values.email) {\n              Notiflix.Notify.warning('Email field must be filled in');\n            } else if (formik.values.comment === '') {\n              Notiflix.Notify.warning('Comment field must be filled in');\n            }  else if (formik.values.email!==email && !validationSchema.isValidSync({ email: formik.values.email })) {\n              Notiflix.Notify.failure('Please enter a valid email address');\n            }\n            }}\n          >\n            Send\n          </ButtonWithoutIcon>\n        </FormStyled>\n      </ModalLayout>\n    </>\n  );\n};\n\nexport default ModalHelp;\n","import { useEffect, useState } from 'react';\nimport sprite from '../../assets/images/sprite.svg';\nimport { HelpIcon } from './SidebarContent-styled';\n\n\n\nexport const SidebarHelpIcon = () => {\n  const [startAnimation, setStartAnimation] = useState(true);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setStartAnimation(true);\n      setTimeout(() => {\n        setStartAnimation(false);\n      }, 1000);\n    }, 7000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  return (\n    <HelpIcon startAnimation={startAnimation}>\n      <use href={sprite + '#icon-help'}></use>\n    </HelpIcon>\n  );\n};\n","import { styled } from '@mui/material/styles';\n\nexport const MemberList = styled('ul')({\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  flexWrap: 'wrap',\n  gap: '16px',\n  padding: '0px',\n  width: '80vw',\n  maxHeight: '80vh',\n  overflowY: 'auto',\n  marginBottom: '24px',\n});\n\nexport const MemberLink = styled('a')({\n  textDecoration: 'none',\n  color: 'inherit',\n  \n\n  '&:hover, &:focus': {\n\n    \n\n    '& svg': {\n      color: 'var(--primary-text-color)',\n      transform: 'scale(1.1)',\n    },\n  },\n});\n\nexport const MemberItem = styled('li')({\n  width: '150px',\n  backgroundColor: 'var(--primary-bg-color)',\n  borderRadius: '10px',\n  textAlign: 'center',\n  color: 'var(--secondary-text-color)',\n  overflow: 'hidden',\n});\n\nexport const MemberImage = styled('img')({\n  width: '100%',\n  height: '150px',\n  display: 'block',\n  objectFit: 'cover',\n  borderTopRightRadius: '10px',\n  borderTopLeftRadius: '10px',\n});\n\nexport const MemberName = styled('p')({\n  fontSize: '13px',\n  color: 'var(--primary-text-color)',\n  lineHeight: '1.16',\n  textAlign: 'center',\n  marginBottom: '3px',\n});\n\nexport const MemberPosition = styled('p')({\n  fontSize: '10px',\n  color: 'var(--primary-text-color)',\n  lineHeight: '1.16',\n  textAlign: 'center',\n  marginBottom: '3px',\n});\n\nexport const IconGitWrap = styled('div')({\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  color: 'var(--secondary-text-color)',\n});\n\nexport const IconGit = styled('svg')({\n  width: '20px',\n  height: '20px',\n  fill: 'currentColor',\n\n  transition: 'var(--tra)',\n});\n","import {\n  IconGit,\n  IconGitWrap,\n  MemberImage,\n  MemberItem,\n  MemberLink,\n  MemberName,\n  MemberPosition,\n} from './ModalMembers.styled';\nimport sprite from '../../assets/images/sprite.svg';\n\nconst MemberListItem = ({ photo, name, position, git }) => {\n  return (\n    <MemberItem>\n      <MemberLink href={git} target=\"_blank\" rel=\"noreferrer\">\n        <MemberImage src={photo} alt={name} loading=\"lazy\" />\n        <div style={{ paddingTop: '6px', paddingBottom: '6px' }}>\n          <MemberName>{name}</MemberName>\n          <MemberPosition>{position}</MemberPosition>\n          <IconGitWrap\n          \n          >\n            <IconGit>\n              <use href={`${sprite}#icon-github`} />\n            </IconGit>\n          </IconGitWrap>\n        </div>\n      </MemberLink>\n    </MemberItem>\n  );\n};\n\nexport default MemberListItem;\n","const teamArray = [\n    {\n     \"photo\": \"https://serhiirepinskyi.github.io/filmoteka-team-project/developer-1.792fd224.jpg\",\n     \"name\": \"Serhii Repinskyi\",\n     \"position\": \"team-leader\",\n     \"git\": \"https://github.com/SerhiiRepinskyi\"\n    },\n\n    {\n     \"photo\": \"https://serhiirepinskyi.github.io/filmoteka-team-project/developer-2.1a97dcb1.jpg\",\n     \"name\": \"Yuliya Maslyanenko\",\n     \"position\": \"scrum-master\",\n     \"git\": \"https://github.com/YuliyaITmas\"\n    },\n\n    {\n     \"photo\": \"https://serhiirepinskyi.github.io/filmoteka-team-project/developer-4.af2e609b.jpg\",\n     \"name\": \"Ihor Vinnik\",\n     \"position\": \"developer\",\n     \"git\": \"https://github.com/IgorVinnik85\"\n    },\n\n    {\n     \"photo\": \"https://serhiirepinskyi.github.io/filmoteka-team-project/developer-5.a5de3fc7.jpg\",\n     \"name\": \"Maksym Farmaha\",\n     \"position\": \"developer\",\n     \"git\": \"https://github.com/M-Farmaha\"\n    },\n\n    {\n     \"photo\": \"https://serhiirepinskyi.github.io/filmoteka-team-project/developer-7.bd92903b.jpg\",\n     \"name\": \"Volodymyr Merunka\",\n     \"position\": \"developer\",\n     \"git\": \"https://github.com/VolodyMer23\"\n    },\n\n    {\n     \"photo\": \"https://serhiirepinskyi.github.io/filmoteka-team-project/developer-8.d2b3e959.jpg\",\n     \"name\": \"Oleksii Volynets\",\n     \"position\": \"developer\",\n     \"git\": \"https://github.com/VolynetsOleksii\"\n    },\n\n    {\n        \"photo\": \"https://serhiirepinskyi.github.io/filmoteka-team-project/developer-10.0b4cc6b3.jpg\",\n        \"name\": \"Kostiantyn Khymera\",\n        \"position\": \"developer\",\n        \"git\": \"https://github.com/Kostiantyn1303\"\n    },\n\n    {\n        \"photo\": \"https://avatars.githubusercontent.com/u/115547708?v=4\",\n        \"name\": \"Nadiia Olifirova\",\n        \"position\": \"developer\",\n        \"git\": \"https://github.com/NadiaOl\"\n    },\n\n    {\n        \"photo\": \"https://samokhvalova-nata.github.io/filmoteka/osha.f263ca40.jpg\",\n        \"name\": \"Olga Dmytrenko\",\n        \"position\": \"developer\",\n        \"git\": \"https://github.com/oshaleyko59\"\n    },\n\n    {\n        \"photo\": \"https://samokhvalova-nata.github.io/filmoteka/olex_l.5f705d1a.jpg\",\n        \"name\": \"Oleksii Lykov\",\n        \"position\": \"developer\",\n        \"git\": \"https://github.com/lukovjr\"\n    },\n\n    {\n        \"photo\": \"https://choodoss.github.io/project-group-1-js/Anna.85da079f.jpg\",\n        \"name\": \"Hanna Shvabovska\",\n        \"position\": \"developer\",\n        \"git\": \"https://github.com/AShvab\"\n    },\n\n    {\n        \"photo\": \"https://avatars.githubusercontent.com/u/115174523?v=4\",\n        \"name\": \"Anna Hryhorovych\",\n        \"position\": \"developer\",\n        \"git\": \"https://github.com/Anna-Grigorovich\"\n    },\n\n    {\n        \"photo\": \"https://avatars.githubusercontent.com/u/115736687?v=4\",\n        \"name\": \"Valeria Sizykh\",\n        \"position\": \"developer\",\n        \"git\": \"https://github.com/Vallyblink\"\n    },\n\n    {\n        \"photo\": \"https://avatars.githubusercontent.com/u/114296789?v=4\",\n        \"name\": \"Denys Filipchuk\",\n        \"position\": \"developer\",\n        \"git\": \"https://github.com/filipchukdv\"\n    }\n]\n\nexport default teamArray;","import ModalLayout from 'components/ModalLayout/ModalLayout';\nimport MemberListItem from './MemberListItem';\nimport teamArray from './members';\nimport { MemberList } from './ModalMembers.styled';\n\nconst ModalMembers = ({ title, open, handleClose }) => {\n  return (\n    <>\n      <ModalLayout title={title} open={open} handleClose={handleClose}>\n        <MemberList>\n          {teamArray.map(({ photo, name, position, git }) => (\n            <MemberListItem\n              key={name}\n              photo={photo}\n              name={name}\n              position={position}\n              git={git}\n            />\n          ))}\n        </MemberList>\n      </ModalLayout>\n    </>\n  );\n};\n\nexport default ModalMembers;\n","import {\n  CreateBoardWrap,\n  HelpBox,\n  HelpButton,\n  HelpText,\n  Image,\n  Subtitle,\n  TaskProButton,\n  TitleCreate,\n} from './SidebarContent-styled';\nimport { Box } from '@mui/material';\nimport { useState } from 'react';\n\nimport styles from './SidebarCustomScroll.module.css';\n\nimport AloeVera from '../../assets/images/aloe-vera.png';\n\nimport { SidebarLogo } from 'components/Logo/Logo';\nimport { ButtonSidebar } from 'components/Buttons/Button';\nimport { SidebarBoardList } from './SidebarBoardList';\n\nimport LogoutBtn from 'components/logoutBtn/logoutBtn';\nimport ModalBoard from 'components/ModalBoard/ModalBoard';\nimport ModalHelp from 'components/ModalHelp/ModalHelp';\nimport { SidebarHelpIcon } from './SidebarHelpIcon';\nimport ModalMembers from 'components/ModalMembers/ModalMembers';\n\nexport const SidebarContent = ({ isSidebarShown }) => {\n  const [isModalBoardOpen, setIsModalBoardOpen] = useState(false);\n  const [isModalHelpOpen, setIsModalHelpOpen] = useState(false);\n  const [isModalMembersOpen, setIsModalMembersOpen] = useState(false);\n\n  const modalBoardStateChange = () => setIsModalBoardOpen(!isModalBoardOpen);\n  const modalHelpStateChange = () => setIsModalHelpOpen(!isModalHelpOpen);\n  const modalMembersStateChange = () => setIsModalMembersOpen(!isModalMembersOpen);\n\n  return (\n    <>\n      <Box\n        className={styles.container}\n        sx={{\n          pt: 3,\n          pb: 3,\n          display: 'flex',\n          flexGrow: 1,\n          flexDirection: 'column',\n          justifyContent: 'space-between',\n        }}\n      >\n        <Box>\n          <Box sx={{ pl: { 0: 1.75, 768: 3 }, pr: { 0: 1.75, 768: 3 } }}>\n            <SidebarLogo sx={{ mb: 7.5 }} isSidebarShown={isSidebarShown} />\n\n            <Subtitle sx={{ mb: 1 }} isSidebarShown={isSidebarShown}>\n              My boards\n            </Subtitle>\n\n            <CreateBoardWrap sx={{ mb: 5 }}>\n              <TitleCreate isSidebarShown={isSidebarShown}>\n                Create a <br /> new board\n              </TitleCreate>\n              <ButtonSidebar onClick={modalBoardStateChange} />\n            </CreateBoardWrap>\n          </Box>\n          <SidebarBoardList />\n        </Box>\n\n        <Box sx={{ pl: { 0: 1.75, 768: 3 }, pr: { 0: 1.75, 768: 3 } }}>\n          <HelpBox sx={{ p: { 0: 1.75, 768: 2.5 }, mb: 3 }}>\n            <Image\n              src={AloeVera}\n              alt={'aloe vera'}\n              isSidebarShown={isSidebarShown}\n            />\n            <HelpText\n              isSidebarShown={isSidebarShown}\n              sx={{\n                mb: 2.25,\n                fontSize: { 0: '12px', 768: '14px' },\n                lineHeight: { 0: '16px', 768: '20px' },\n              }}\n            >\n              If you need help with <TaskProButton onClick={modalMembersStateChange}>TaskPro</TaskProButton>, check out our support\n              resources or reach out to our customer support team.\n            </HelpText>\n            <HelpButton\n              type=\"button\"\n              isSidebarShown={isSidebarShown}\n              onClick={modalHelpStateChange}\n            >\n              <SidebarHelpIcon />\n              Need help?\n            </HelpButton>\n          </HelpBox>\n          <LogoutBtn />\n        </Box>\n      </Box>\n\n      <ModalBoard\n        boardTitle={'New board'}\n        open={isModalBoardOpen}\n        handleClose={modalBoardStateChange}\n      />\n      <ModalHelp\n        title={'Need help'}\n        open={isModalHelpOpen}\n        handleClose={modalHelpStateChange}\n      />\n\n<ModalMembers open={isModalMembersOpen} handleClose={modalMembersStateChange} title={'OUR TEAM'}/>\n    </>\n  );\n};\n","import { Box, Drawer } from '@mui/material';\n\nimport { SidebarContent } from './SidebarContent';\nimport { SIDEBARMOBILEWIDTH, SIDEBARWIDTH } from './SidebarCONSTANTS';\n\nexport const Sidebar = ({ ...props }) => {\n  const { window, isMobileSidebar, handleSidebarToggle } = props;\n  const container =\n    window !== undefined ? () => window().document.body : undefined;\n\n  return (\n    <Box\n      component=\"nav\"\n      sx={{ width: { 1440: SIDEBARWIDTH }, flexShrink: { 1440: 0 } }}\n      aria-label=\"sidebar options\"\n    >\n      <Drawer\n        container={container}\n        variant=\"temporary\"\n        open={isMobileSidebar}\n        onClose={handleSidebarToggle}\n        ModalProps={{ keepMounted: true }}\n        slotProps={{\n          backdrop: {\n            style: {\n              backgroundColor: 'var(--sidebar-backdrop-color)',\n            },\n          },\n        }}\n        sx={{\n          display: { 0: 'block', 1440: 'none' },\n          '& .MuiDrawer-paper': {\n            boxSizing: 'border-box',\n            boxShadow: 'none',\n            border: 'none',\n            overflow: 'hidden',\n            width: {\n              0: 192,\n              320: '60vw',\n              375: SIDEBARMOBILEWIDTH,\n              768: SIDEBARWIDTH,\n            },\n            backgroundColor: 'var(--sidebar-primary-bg-color)',\n          },\n        }}\n      >\n        <SidebarContent isSidebarShown={isMobileSidebar} />\n      </Drawer>\n\n      <Drawer\n        variant=\"permanent\"\n        open\n        sx={{\n          display: { 0: 'none', 1440: 'block' },\n          '& .MuiDrawer-paper': {\n            boxSizing: 'border-box',\n            boxShadow: 'none',\n            border: 'none',\n            overflow: 'hidden',\n            width: SIDEBARWIDTH,\n            backgroundColor: 'var(--sidebar-primary-bg-color)',\n          },\n        }}\n      >\n        <SidebarContent isSidebarShown={true} />\n      </Drawer>\n    </Box>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const HeaderContainer = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  max-width: 100%;\n  width: auto;\n  height:68px;\n  padding: 18px 24px;\n  background: var(--header-bg-color);\n  color: var(--primary-text-color);\n\n  @media (max-width: 1440px) {\n    padding: 18px 32px;\n  }\n  @media (max-width: 768px) {\n    padding: 14px 20px;\n    height:60px;\n  }\n`;\n\nexport const ThemeContainer = styled.div`\n  position: relative;\n  display: inline-block;\n  width: 70px;\n  height: auto;\n  margin-right: 14px;\n  margin-left: auto;\n`;\n\nexport const ThemeWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  color: var(--primary-text-color);\n  font-size: 14px;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n  transition: color 300ms cubic-bezier(0.4, 0, 0.2, 1);\n  svg {\n    stroke: var(--primary-text-color);\n    transition: stroke 300ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n  &:hover {\n    svg {\n      stroke: var(--header-theme-color);\n    }\n    color: var(--header-theme-color);\n   \n  }\n`;\n\nexport const ThemeUL = styled.ul`\n  position: absolute;\n  top: 45px;\n  left: -12px;\n  margin: 0px;\n  max-height: 0px;\n  padding: 0 44px 0 18px;\n  background: var(--modal-bg-color);\n  overflow: hidden;\n  list-style: none;\n  border-radius: 8px;\n  \n  &.visible {\n    width: 100px;\n    max-height: 107px;\n    padding: 18px 44px 18px 18px;\n    border: 1px solid var(--button-bg-color);\n    box-shadow: 0px 4px 16px 0px rgba(17, 17, 17, 0.1);\n  }\n  @media (max-width: 768px) {\n    top: 41px;\n  }\n`;\n\nexport const ThemeButton = styled.button`\n  border: none;\n  background: transparent;\n  text-transform: capitalize;\n  cursor: ${({ disabled }) => (disabled ? '' : 'pointer')};\n  color: ${({ selected }) =>\n    selected ? 'var(--button-bg-color)' : 'var(--secondary-text-color)'};\n  }\n`;\n","import { IconButton } from '@mui/material';\nimport MenuIcon from '@mui/icons-material/Menu';\n\nexport const NavBtn = ({ handleSidebarToggle }) => {\n  return (\n    <>\n      <IconButton\n        color=\"inherit\"\n        aria-label=\"open sidebar options\"\n        edge=\"start\"\n        onClick={handleSidebarToggle}\n        sx={{ width: 32, height: 32, display: { 1440: 'none' } ,\n        transition: \"color 300ms cubic-bezier(0.4, 0, 0.2, 1)\",\n        '&:hover': {\n          color: 'var(--header-theme-color)',\n          background: \"inherit\",\n        },}}\n      >\n        <MenuIcon />\n      </IconButton>\n    </>\n  );\n};\n","import styled, { css } from 'styled-components';\nimport { styled as MUI } from '@mui/material/styles';\nimport { Form, Field } from 'formik';\n\nexport const Container = MUI('div')({\n  backgroundColor: 'var(--input-bcg-color)',\n  marginLeft: 'auto',\n  marginRight: 'auto',\n  borderRadius: '8px',\n});\n\nexport const FormWrap = styled.div`\n  background-color: var(--modal-bg-color);\n  display: flex;\n  flex-direction: column;\n  justify-content: right;\n  align-items: center;\n  min-width: 100%;\n`;\n\nexport const AvatarWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 25px;\n`;\nexport const ImgWrapper = styled.div`\n  position: relative;\n  width: 68px;\n  height: 68px;\n  border-radius: 8px;\n  transition: all 0.3s ease;\n`;\nexport const IconAvatar = styled.svg`\n  width: 68px;\n  height: 68px;\n  --color1: var(--avatar-bcg-color);\n  --color2: var(--avatar-fill-color);\n`;\n\nexport const Img = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  border-radius: 8px;\n`;\nexport const IconButton = styled.button`\n  border: none;\n  border-radius: 6px;\n  cursor: pointer;\n  position: absolute;\n  top: 101%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 24px;\n  height: 24px;\n  background-color: var(--icon-plus-bcg);\n  transition: all 0.3s ease;\n\n  &:hover {\n    transform: translate(-50%, -50%) scale(1.1);\n    outline: none;\n  }\n\n  &:focus {\n    background-color: var(--icon-plus-bcg-hover-focus);\n    outline: none;\n  }\n`;\nexport const IconPlus = styled.svg`\n  display: block;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 10px;\n  height: 10px;\n  stroke: var(--icon-add-avatar);\n  // stroke: var(--icon-add-color);\n\n  ${IconButton}:hover & {\n    transform: translate(-50%, -50%) scale(1.1);\n  }\n\n  ${IconButton}:focus & {\n    opacity: 1;\n    outline: none;\n  }\n`;\n\nexport const FormikForm = styled(Form)`\n  width: 100%;\n  display: flex;\n  gap: 14px;\n\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\nexport const Label = styled.label`\n  display: block;\n  width: 100%;\n`;\nexport const FormikInput = styled(Field)`\n  width: 100%;\n  padding: 14px 18px;\n  font-family: Poppins;\n  font-size: 14px;\n  line-height: normal;\n  letter-spacing: -0.28px;\n\n  color: var(--primary-text-color);\n  border-radius: 8px;\n  opacity: 0.4;\n  border: 1px solid var(--input-border-color);\n\n  background: var(--bcg-modal-color);\n  transition: all 0.3s ease;\n\n  &::placeholder {\n    color: var(--primary-text-color);\n    font-size: 14px;\n    font-family: 'Poppins';\n    letter-spacing: -0.28px;\n  }\n\n  &:focus {\n    opacity: 1;\n    outline: none;\n  }\n`;\nexport const Wrap = styled.div`\n  display: block;\n  position: relative;\n`;\nexport const Icon = styled.svg`\n  width: 18px;\n  height: 18px;\n  stroke: var(--primary-text-color);\n  fill: none;\n  display: block;\n`;\nexport const IconBtn = styled(({ active, ...rest }) => <button {...rest} />)`\n  position: absolute;\n  right: 12px;\n  top: 50%;\n  background-color: transparent;\n  border: none;\n  transform: translateY(-50%);\n  cursor: pointer;\n  opacity: 0.4;\n  & svg {\n    stroke: var(--primary-text-color);\n  }\n\n  &:focus {\n    outline: none;\n  }\n  ${props =>\n    props.active &&\n    css`\n      opacity: 1;\n      svg {\n        stroke: var(--input-border-color);\n      }\n    `}\n`;\n\n// export const Button = styled.button`\n//   color: var(--btn-text-color);\n//   text-align: center;\n//   font-family: Poppins;\n//   font-size: 14px;\n//   padding: 14px 0;\n//   -webkit-tap-highlight-color: transparent;\n//   font-weight: 500;\n//   line-height: normal;\n//   letter-spacing: -0.28px;\n//   font-size: 14px;\n//   font-weight: 500;\n//   letter-spacing: -0.28px;\n//   margin-top: 10px;\n//   width: 100%;\n//   border: none;\n//   border-radius: 8px;\n//   background: var(--input-border-color);\n//   opacity: 1;\n//   outline: none;\n//   cursor: pointer;\n\n//   &:disabled {\n//     // opacity: 0.6;\n//     //  background: var(--input-border-color);\n//     cursor: not-allowed;\n//   }\n//   &:focus {\n//     opacity: 1;\n//     -webkit-tap-highlight-color: none;\n//   }\n// `;\n\n// export const Error = styled(ErrorMessage)`\n//   font-family: 'Roboto';\n//   opacity: 0.5;\n//   color: var(--secondary-text-color);\n//   font-size: 14px;\n//   margin-top: 5px;\n//   padding-left: 5px;\n//   max-width: 200px;\n// `;\n","export const selectUser = state => state.auth.user;\nexport const selectIsLoggedIn = state => state.auth.isLoggedIn;\nexport const selectTheme = state => state.auth.user.theme;\nexport const selectIsFetchingCurrent = state =>\n  state.auth.isFetchingCurrentUser;\n   export const selectAvatar = state => state.auth.user.avatarURL;\n\nconst authSelectors = {\n  selectUser,\n  selectIsLoggedIn,\n  selectTheme,\n  selectIsFetchingCurrent,\n  selectAvatar,\n};\nexport default authSelectors;\n","import { ErrorMessage, Formik } from 'formik';\nimport { validationSchema } from 'validationSchemas/validationSchema';\nimport UI_MSGS from 'constants/AuthUIConstants';\n\nimport Sprite from '../../assets/images/sprite.svg';\nimport { useState } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Notify, Report } from 'notiflix';\nimport { setAvatar, setUser } from 'redux/user/userAPISlice';\n\nimport {\n  Container,\n  FormWrap,\n  AvatarWrapper,\n  IconAvatar,\n  IconButton,\n  IconPlus,\n  Img,\n  ImgWrapper,\n  FormikForm,\n  Label,\n  FormikInput,\n  Wrap,\n  Icon,\n  IconBtn,\n} from './ModalEditProfile.styled';\nimport { notifyInit } from 'helpers/notifyInit';\n\nimport { selectAvatar } from 'redux/auth/authSelectors';\nimport Loader from 'components/Loader/Loader';\nimport {\n  useUpdateAvatarMutation,\n  useUpdateUserMutation,\n} from 'Services/API_Component';\nimport ModalLayout from 'components/ModalLayout/ModalLayout';\nimport { ButtonWithoutIcon } from 'components/Buttons/Button';\n\nexport const ModalEditProfile = ({ title, open, handleClose }) => {\n  const [showPassword, setShowPassword] = useState(false);\n  const togglePassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const [updateAvatar, { isLoading }] = useUpdateAvatarMutation();\n  const [updateUser, { isLoading: isUpdateUserLoading }] =\n    useUpdateUserMutation();\n\n  const dispatch = useDispatch();\n  const currentImage = useSelector(selectAvatar);\n\n  const user = useSelector(state => state.auth.user);\n  // const currentImage=useSelector(state=>state.auth.user.avatarURL)\n\n  const handleAvatarChange = async event => {\n    const file = event.target.files[0];\n\n    if (!file) {\n      return;\n    }\n\n    const formData = new FormData();\n\n    formData.append('avatarURL', file);\n\n    try {\n      const response = await updateAvatar(formData);\n\n      if (response.data?.avatarURL) {\n        const newAvatarURL = response.data.avatarURL;\n\n        dispatch(setAvatar(newAvatarURL));\n        Report.success('Successful', 'Avatar updated successfully!', 'Okay');\n        // handleClose();\n      } else {\n        Report.failure('Error!', 'Error updating avatar!', 'Okay');\n      }\n    } catch (error) {\n      Report.failure('Error!', `'An error occurred:' ${error}`, 'Okay');\n    }\n    // handleClose();\n  };\n\n  const handleSubmit = async values => {\n    const trimmedValues = {\n      name: values.name.trim(),\n      email: values.email.trim(),\n      password: values.password.trim(),\n    };\n    try {\n      const response = await updateUser(trimmedValues);\n\n      if (response.error) {\n        Notify.failure('Error updating the profile:', response.error);\n      } else {\n        dispatch(setUser(trimmedValues));\n\n        Report.success('Successful', 'User profile updated!', 'Okay');\n        handleClose();\n      }\n    } catch (error) {\n      Notify.failure('Error updating the profile:', error);\n    }\n  };\n\n  return (\n    <>\n      <ModalLayout title={title} open={open} handleClose={handleClose}>\n        {(isLoading || isUpdateUserLoading) && <Loader />}\n        <Container sx={{ width: { 0: '77vw', 375: '287px', 768: '352px' } }}>\n          <FormWrap>\n            <AvatarWrapper>\n              <ImgWrapper>\n                {currentImage.includes('gravatar') ? (\n                  <IconAvatar aria-label=\"User picture\">\n                    <use href={`${Sprite}#icon-user`}></use>\n                  </IconAvatar>\n                ) : (\n                  <Img src={currentImage} alt=\"User picture\" />\n                )}\n\n                <IconButton\n                  onClick={() => document.getElementById('avatarURL').click()}\n                  aria-label=\"add avatar\"\n                >\n                  <IconPlus>\n                    <use href={`${Sprite}#icon-plus`}></use>\n                  </IconPlus>\n                  <input\n                    id=\"avatarURL\"\n                    name=\"avatarURL\"\n                    type=\"file\"\n                    accept=\"image/*\"\n                    onChange={handleAvatarChange}\n                    style={{ display: 'none' }}\n                  />\n                </IconButton>\n              </ImgWrapper>\n            </AvatarWrapper>\n\n            <Formik\n              initialValues={{\n                name: `${user.name}`,\n                email: `${user.email}`,\n                password: '',\n              }}\n              validationSchema={validationSchema}\n              onSubmit={handleSubmit}\n            >\n              {({\n                values,\n                errors,\n                touched,\n                dirty,\n                handleBlur,\n                handleChange,\n                isValid,\n              }) => (\n                <>\n                  <FormikForm>\n                    <Label htmlFor=\"name\">\n                      <FormikInput\n                        autoComplete=\"off\"\n                        id=\"name\"\n                        name=\"name\"\n                        type=\"text\"\n                        placeholder=\"Enter your name\"\n                        value={values.name}\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        title={UI_MSGS.INPUT_NAME_TITLE}\n                      />\n                      {touched.name && errors.name && dirty && (\n                        <ErrorMessage\n                          name=\"name\"\n                          render={msg => {\n                            Notify.warning(` ${msg}`, notifyInit);\n                          }}\n                        />\n                      )}\n                    </Label>\n\n                    <Label htmlFor=\"email\">\n                      <FormikInput\n                        autoComplete=\"off\"\n                        id=\"email\"\n                        name=\"email\"\n                        type=\"email\"\n                        placeholder=\"Enter your email\"\n                        value={values.email}\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        title={UI_MSGS.INPUT_EMAIL_TITLE}\n                      />\n                      {touched.email && errors.email && dirty && (\n                        <ErrorMessage\n                          name=\"email\"\n                          render={msg => {\n                            Notify.warning(` ${msg}`, notifyInit);\n                          }}\n                        />\n                      )}\n                    </Label>\n\n                    <Label htmlFor=\"password\">\n                      <Wrap>\n                        <FormikInput\n                          autoComplete=\"off\"\n                          id=\"password\"\n                          name=\"password\"\n                          type={showPassword ? 'text' : 'password'}\n                          placeholder=\"Create a password\"\n                          value={values.password}\n                          onBlur={handleBlur}\n                          onChange={handleChange}\n                          title={UI_MSGS.INPUT_PWD_TITLE}\n                        />\n                        <IconBtn\n                          type=\"button\"\n                          onClick={togglePassword}\n                          active={showPassword}\n                          className={showPassword ? 'active' : ''}\n                          aria-label=\"Toggle Password Visibility\"\n                        >\n                          <Icon>\n                            <use href={`${Sprite}#icon-eye`}></use>\n                          </Icon>\n                        </IconBtn>\n                      </Wrap>\n\n                      {touched.password&&errors.password && dirty && (\n                        <ErrorMessage\n                          name=\"password\"\n                          render={msg => {\n                            Notify.warning(` ${msg}`, notifyInit);\n                          }}\n                        />\n                      )}\n                    </Label>\n\n                    {/* <Button\n                      type=\"submit\"\n                      disabled={!dirty || !isValid}\n                      aria-label=\"Submit\"\n                    >\n                      Send\n                    </Button> */}\n                    <ButtonWithoutIcon\n                      title={'Send'}\n                      type={'submit'}\n                      disabled={!isValid}\n                    ></ButtonWithoutIcon>\n                  </FormikForm>\n                </>\n              )}\n            </Formik>\n          </FormWrap>\n        </Container>\n      </ModalLayout>\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const UserInfoContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  color: var(--primary-text-color);\n  transition: color 300ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n     color: var(--header-theme-color);\n  }\n`;\n\nexport const UserName = styled.p`\n    margin-right: 8px;\n    \n    font-size: 14px;\n    font-weight: 500;\n    letter-spacing: -0.28px;\n`;\n\nexport const EmptyAvatar = styled.div`\n    width: 32px;\n    height: 32px;\n    background: var(--primary-text-color);\n    border-radius: 8px;\n`;\n\nexport const ImgAvatar = styled.img`\n    width: 32px;\n    height: 32px;\n    border-radius: 8px;\n`;","import { useState } from 'react';\nimport { ModalEditProfile } from 'components/ModalEditProfile/ModalEditProfile';\nimport {\n  EmptyAvatar,\n  ImgAvatar,\n  UserInfoContainer,\n  UserName,\n} from './UserInfo.styled';\n\nexport const UserInfo = ({ name = 'User', avatarURL }) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const modalStateChange = () => setIsModalOpen(!isModalOpen);\n\n  return (\n    <>\n      <UserInfoContainer onClick={modalStateChange}>\n        <UserName>{name}</UserName>\n        <div>\n          {avatarURL ? (\n            <ImgAvatar src={avatarURL} alt=\"User Avatar\" />\n          ) : (\n            <EmptyAvatar />\n          )}\n        </div>\n      </UserInfoContainer>\n\n      <ModalEditProfile\n        title={'Edit  profile'}\n        open={isModalOpen}\n        handleClose={modalStateChange}\n      />\n    </>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport {\n  HeaderContainer,\n  ThemeButton,\n  ThemeContainer,\n  ThemeUL,\n  ThemeWrap,\n} from './Header.styled';\nimport sprite from '../../assets/images/sprite.svg';\nimport { NavBtn } from './NavBtn/NavBtn';\nimport { UserInfo } from './UserInfo/UserInfo';\nimport { useSelector } from 'react-redux';\nimport { selectUser } from 'redux/auth/authSelectors';\nimport { API } from 'Services/API';\n\nexport const Header = ({ handleSidebarToggle }) => {\n  const { avatarURL, name, theme } = useSelector(selectUser);\n  const [themeListVisible, setThemeListVisible] = useState(false);\n  const [selectedTheme, setSelectedTheme] = useState(theme);\n  const [themeUser] = API.useThemeUserMutation();\n  const themeList = ['light', 'dark', 'violet'];\n\n  const handleThemeList = () => {\n    setThemeListVisible(!themeListVisible);\n  };\n\n  const closeThemeList = () => {\n    setThemeListVisible(false);\n  };\n\n  const handleThemeChange = async (e) => {\n    setSelectedTheme(e.target.value);\n    try {\n      await themeUser({theme: e.target.value});\n      closeThemeList();\n    } catch (error) {\n      console.error('Error updating theme:', error);\n    };\n  };\n  \n\n  useEffect(() => {\n    document.body.classList.add(selectedTheme);\n    return () => {\n      document.body.classList.remove(selectedTheme);\n    };\n  }, [selectedTheme]);\n\n  useEffect(() => {\n    const handleWindowClick = event => {\n      if (event.target.nodeName !== 'BUTTON') {\n        closeThemeList();\n      }\n    };\n\n    const handleKeyDown = event => {\n      if (event.key === 'Escape') {\n        closeThemeList();\n      }\n    };\n\n    window.addEventListener('mousedown', handleWindowClick);\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('mousedown', handleWindowClick);\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [themeListVisible]);\n\n  return (\n    <HeaderContainer>\n      <NavBtn handleSidebarToggle={handleSidebarToggle} />\n      <ThemeContainer>\n        <ThemeWrap onClick={handleThemeList}>\n          <p>Theme</p>\n          <svg width=\"16px\" height=\"16px\">\n            <use href={sprite + '#icon-drop-down'}></use>\n          </svg>\n        </ThemeWrap>\n        <ThemeUL className={themeListVisible ? 'visible' : ''}>\n          {themeList.map(theme => (\n            <li key={theme}>\n              <ThemeButton\n                selected={selectedTheme === theme}\n                disabled={selectedTheme === theme}\n                value={theme}\n                onClick={handleThemeChange}\n              >\n                {theme}\n              </ThemeButton>\n            </li>\n          ))}\n        </ThemeUL>\n      </ThemeContainer>\n      <UserInfo name={name} avatarURL={avatarURL} />\n    </HeaderContainer>\n  );\n};\n","import { Box, Button, Typography } from '@mui/material';\nimport ModalBoard from 'components/ModalBoard/ModalBoard';\nimport { SIDEBARWIDTH } from 'components/Sidebar/SidebarCONSTANTS';\nimport { useState } from 'react';\n\nexport const DefaultScreenPage = () => {\n  const [isModalBoardOpen, setIsModalBoardOpen] = useState(false);\n  const modalBoardStateChange = () => setIsModalBoardOpen(!isModalBoardOpen);\n  return (\n    <>\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          pt: { 0: 9.25, 768: 11, 1440: 9.75 },\n          pb: { 0: 3, 768: 4, 1440: 1 },\n          pl: { 0: 2.5, 768: 4, 1440: 3 },\n          pr: { 0: 2.5, 768: 4, 1440: 3 },\n          height: '100vh',\n          width: { 0: '100vw', 1440: `calc(100vw - ${SIDEBARWIDTH}px)` },\n          flexGrow: 1,\n          backgroundColor: 'var(--primary-bg-color)',\n        }}\n      >\n        <Box sx={{ width: '486px' }}>\n          <Typography\n            sx={{\n              padding: 0,\n              margin: 0,\n              color: 'var(--secondary-text-color)',\n              textAlign: 'center',\n              fontFamily: 'Poppins',\n              fontSize: { 0: '12px', 768: '14px' },\n              fontStyle: 'normal',\n              fontWeight: 400,\n              lineHeight: { 0: '16px', 768: '18px' },\n              letterSpacing: { 0: '-0.24px', 768: '-0.28px' },\n            }}\n          >\n            Before starting your project, it is essential{' '}\n            <Button\n              onClick={modalBoardStateChange}\n              type=\"button\"\n              sx={{\n                verticalAlign: 'baseline',\n                padding: 0,\n                margin: 0,\n                color: 'var(--default-screen-page-link-color)',\n                backgroundColor: 'transparent',\n                fontFamily: 'Poppins',\n                border: 'none',\n                cursor: 'pointer',\n                textDecoration: 'none',\n                outline: 'none',\n                textTransform: 'lowercase',\n                fontSize: { 0: '12px', 768: '14px' },\n\n                '&:hover, &:focus': {\n                  textDecoration: 'underline',\n                  backgroundColor: 'transparent',\n                },\n              }}\n            >\n              to create a board\n            </Button>{' '}\n            to visualize and track all the necessary tasks and milestones. This\n            board serves as a powerful tool to organize the workflow and ensure\n            effective collaboration among team members.\n          </Typography>\n        </Box>\n      </Box>\n\n      <ModalBoard\n        boardTitle={'New board'}\n        open={isModalBoardOpen}\n        handleClose={modalBoardStateChange}\n      />\n    </>\n  );\n};\n","import { AppBar, Box } from '@mui/material';\n\nimport { useState } from 'react';\nimport { SIDEBARWIDTH } from 'components/Sidebar/SidebarCONSTANTS';\nimport { Sidebar } from 'components/Sidebar/Sidebar';\nimport { Header } from 'components/Header/Header';\nimport { Outlet } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { selectIsLoggedIn } from 'redux/auth/authSelectors';\nimport { DefaultScreenPage } from 'pages/ScreensPage/DefaultScreenPage';\nimport { API } from 'Services/API';\n\nconst HomePage = () => {\n  const isLoggdIn = useSelector(selectIsLoggedIn);\n  const [isMobileSidebar, setIsMobileSidebar] = useState(false);\n  const handleSidebarToggle = () => setIsMobileSidebar(!isMobileSidebar);\n\n  const { data: boards } = API.useGetBoardsQuery();\n\n  return (\n    isLoggdIn && (\n      <Box sx={{ display: 'flex', overflowX: 'hidden' }}>\n        <AppBar\n          position=\"fixed\"\n          sx={{\n            width: { 1440: `calc(100% - ${SIDEBARWIDTH}px)` },\n            height: { 768: 68 },\n            ml: { 1440: `${SIDEBARWIDTH}px` },\n            boxShadow: 'none',\n            backgroundColor: '#161616',\n          }}\n        >\n          <Header handleSidebarToggle={handleSidebarToggle} />\n        </AppBar>\n\n        <Sidebar\n          isMobileSidebar={isMobileSidebar}\n          handleSidebarToggle={handleSidebarToggle}\n        />\n\n        {boards?.length === 0 ? <DefaultScreenPage /> : <Outlet />}\n      </Box>\n    )\n  );\n};\n\nexport default HomePage;\n"],"names":["API","useRegisterMutation","useLogInMutation","useLogOutMutation","useUpdateAvatarMutation","useGetCurrentUserQuery","useHelpUserMutation","useThemeUserMutation","useUpdateUserMutation","useGetBoardsQuery","useGetBoardContentByIdQuery","useGetBoardByIdQuery","useAddBoardsMutation","useDeleteBoardByIdMutation","useUpdateBoardByIdMutation","useAddColumnMutation","useUpdateColumnByIdMutation","useDeleteColumnByIdMutation","useGetAllCardsQuery","useAddCardMutation","useUpdateCardByIdMutation","useDeleteCardByIdMutation","useUpdateCardColumnByIdMutation","useLoginGoogleUserMutation","slideLigtning","keyframes","_templateObject","_taggedTemplateLiteral","slideToRight","_templateObject2","SidebarLogoIcon","styled","fill","width","height","animation","concat","animationTimingFunction","SidebarLogoWrap","_ref","display","justifyContent","alignItems","gap","transform","isSidebarShown","animationFillMode","SidebarLogoIconWrap","backgroundColor","borderRadius","overflow","SidebarLogoText","margin","color","fontFamily","fontSize","fontWeight","letterSpacing","StartPageLogoWrap","StartPageLogoIconWrap","StartPageLogoIcon","StartPageLogoText","SidebarLogo","sx","_jsx","_Fragment","children","_jsxs","href","sprite","StartPageLogo","_ref2","style","FormStyled","MUI","flexDirection","ButtonClose","InputStyled","TransparentSVG","_templateObject3","UlStyled","_templateObject4","UlBgStyled","_templateObject5","ImgStyled","_templateObject6","_templateObject7","LiIconsStyled","_templateObject8","modalStyles","position","top","left","border","background","padding","titleStyles","fontStyle","lineHeight","marginBottom","title","open","handleClose","Modal","onClose","Box","Typography","variant","type","onClick","stroke","slideAround","BoardItemWrap","paddingTop","paddingBottom","BoardItemIcon","startAnimation","BoardItemCurrentIcon","BoardItemTitleWrap","whiteSpace","BoardItemTitle","titleWidth","titleWrapWidth","current","slideText","animationName","animationDuration","animationIterationCount","animationDirection","SidebarBoardItemIcon","iconId","_useState","useState","_useState2","_slicedToArray","setStartAnimation","useEffect","randomNumber","Math","floor","random","interval","setInterval","setTimeout","clearInterval","opacity","SIDEBARWIDTH","SIDEBARMOBILEWIDTH","slideToLeft","slideToDown","shakeAnimation","Subtitle","CreateBoardWrap","borderTop","borderBottom","TitleCreate","HelpBox","Image","_ref3","HelpText","_ref4","HelpButton","_ref5","cursor","textDecoration","outline","TaskProButton","HelpIcon","_ref6","setTitleWidth","measureRef","useRef","observer","ResizeObserver","entries","_step","_iterator","_createForOfIteratorHelper","s","n","done","entry","value","target","contentRect","err","e","f","currentRef","observe","unobserve","ref","visibility","arrIcons","arrBG","titleStyle","board","boardTitle","dispatch","useDispatch","inputValue","setInputValue","_useState3","_useState4","setIconId","_useState5","_useState6","setBackground","_API$useAddBoardsMuta","addBoard","_API$useUpdateBoardBy","editBoard","navigate","useNavigate","handleSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","FormData","response","_response","wrap","_context","prev","next","sent","setBoardResponse","setBoardId","boardId","data","_id","setBoardsIdArrayByPushToStart","Report","abrupt","t0","formik","handleReset","stop","_x","apply","arguments","validationSchema","Yup","min","max","required","test","Notiflix","description","useFormik","initialValues","onSubmit","ModalLayout","id","name","placeholder","onChange","currentTarget","setFieldValue","onBlur","handleBlur","map","icon","isSelected","transition","bg","index","src","alt","ButtonWithIcon","values","SidebarBoardItem","boardsIdArray","useSelector","state","boards","isHovered","setIsHovered","setTitleWrapWidth","_useState7","window","innerWidth","_useState8","screenWidth","setScreenWidth","_useState9","_useState10","isModalOpen","setIsModalOpen","_API$useDeleteBoardBy","deleteBoard","handleResize","debounce","addEventListener","removeEventListener","modalStateChange","MeasureTitleWidth","onMouseEnter","onMouseLeave","pl","pr","right","List","disablePadding","ListItem","ListItemButton","p","m","pointerEvents","event","stopPropagation","length","filteredArray","filter","el","setBoardsIdArray","ModalBoard","StrictModeDroppable","props","_objectWithoutProperties","_excluded","enabled","setEnabled","requestAnimationFrame","cancelAnimationFrame","Droppable","_objectSpread","SidebarBoardList","boardsArray","setBoardsArray","myArray","find","newItems","includes","_toConsumableArray","DragDropContext","onDragEnd","result","destination","_boards$splice","splice","source","reorderedBoard","newBoardsIdArray","droppableId","provided","droppableProps","innerRef","mb","Draggable","draggableId","toString","draggableProps","dragHandleProps","LogOutBtnStyled","SpanStyled","Icon","_useLogOutMutation","logOut","handleLogOut","unwrap","logout","setIsLoggedIn","setError","resize","inputStyles","hasError","ErrorText","TextareaStyled","_API$useHelpUserMutat","helpUser","email","auth","user","comment","resetForm","status","console","log","message","matches","handleChange","ButtonWithoutIcon","marginTop","isValidSync","SidebarHelpIcon","MemberList","flexWrap","maxHeight","overflowY","MemberLink","MemberItem","textAlign","MemberImage","objectFit","borderTopRightRadius","borderTopLeftRadius","MemberName","MemberPosition","IconGitWrap","IconGit","photo","git","rel","loading","teamArray","MemberListItem","SidebarContent","isModalBoardOpen","setIsModalBoardOpen","isModalHelpOpen","setIsModalHelpOpen","isModalMembersOpen","setIsModalMembersOpen","modalBoardStateChange","modalHelpStateChange","modalMembersStateChange","className","styles","pt","pb","flexGrow","ButtonSidebar","AloeVera","LogoutBtn","ModalHelp","ModalMembers","Sidebar","Object","assign","_objectDestructuringEmpty","isMobileSidebar","handleSidebarToggle","container","undefined","document","body","component","flexShrink","Drawer","ModalProps","keepMounted","slotProps","backdrop","boxSizing","boxShadow","HeaderContainer","ThemeContainer","ThemeWrap","ThemeUL","ThemeButton","disabled","selected","NavBtn","IconButton","edge","MenuIcon","Container","marginLeft","marginRight","FormWrap","AvatarWrapper","ImgWrapper","IconAvatar","Img","IconPlus","FormikForm","Form","Label","_templateObject9","FormikInput","Field","_templateObject10","Wrap","_templateObject11","_templateObject12","IconBtn","active","rest","_templateObject13","css","_templateObject14","selectUser","selectIsLoggedIn","isLoggedIn","selectAvatar","avatarURL","ModalEditProfile","showPassword","setShowPassword","togglePassword","_useUpdateAvatarMutat","_useUpdateAvatarMutat2","updateAvatar","isLoading","_useUpdateUserMutatio","_useUpdateUserMutatio2","updateUser","isUpdateUserLoading","currentImage","handleAvatarChange","file","formData","_response$data","newAvatarURL","files","append","setAvatar","_callee2","trimmedValues","_context2","trim","password","error","Notify","setUser","_x2","Loader","Sprite","getElementById","click","accept","Formik","errors","touched","dirty","isValid","htmlFor","autoComplete","UI_MSGS","ErrorMessage","render","msg","notifyInit","UserInfoContainer","UserName","EmptyAvatar","ImgAvatar","UserInfo","_ref$name","Header","_useSelector","theme","themeListVisible","setThemeListVisible","selectedTheme","setSelectedTheme","_API$useThemeUserMuta","themeUser","closeThemeList","handleThemeChange","classList","add","remove","handleWindowClick","nodeName","handleKeyDown","key","DefaultScreenPage","Button","verticalAlign","textTransform","isLoggdIn","setIsMobileSidebar","overflowX","AppBar","ml","Outlet"],"sourceRoot":""}