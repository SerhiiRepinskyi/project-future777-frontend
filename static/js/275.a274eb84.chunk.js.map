{"version":3,"file":"static/js/275.a274eb84.chunk.js","mappings":"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","sources":["components/Buttons/Button.jsx","components/HeaderDashboard/HeaderDashboard.styled.jsx","components/ModalBoard/ModalBoard.styled.jsx","components/ModalBoard/data.jsx","components/ModalLayout/ModalLayout.jsx","components/Sidebar/SidebarCONSTANTS.js","components/AddCard/AddCard.styled.jsx","components/AddColumn/AddColumn.jsx","redux/tasks/cardSlice.js","components/TaskCard/TaskCard.styled.jsx","components/TaskCard/TaskCard.jsx","components/ColorRadioButtons/ColorRadioButtons.jsx","components/Icons/DropDownIcon/DropDownIcon.styled.jsx","components/Icons/DropDownIcon/DropDownIcon.jsx","components/Popup/Popup.jsx","components/DatePicker/DatePicker.jsx","components/AddCard/AddCard.jsx","components/Column/Column.jsx","components/HeaderDashboard/Filter.styled.jsx","components/HeaderDashboard/Filter.jsx","components/HeaderDashboard/HeaderDashboard.jsx","pages/ScreensPage/ScreensPage.jsx"],"sourcesContent":["import * as React from 'react';\nimport Button from '@mui/material/Button';\n\nimport { Box, IconButton } from '@mui/material';\n\nimport sprite from '../../assets/images/sprite.svg';\n\n// Кнопка для модалок с иконкой\nexport const ButtonWithIcon = ({ title, onClick, type }) => {\n  return (\n    <Button\n      onClick={onClick}\n      type={type}\n      variant=\"contained\"\n      disableElevation\n      sx={{\n        display: 'flex',\n        gap: '8px',\n        color: '#161616',\n        fontFamily: 'Poppins, sans-serif',\n        alignItems: 'center',\n        textTransform: 'none',\n        borderRadius: '8px',\n        letterSpacing: '-0.02em',\n        fontSize: '14px',\n        background: '#BEDBB0',\n        lineHeight: '21px',\n        fontWeight: '500',\n        fontStyle: 'normal',\n        width: '100%',\n        height: '56px',\n        '&:hover': {\n          background: '#9DC888',\n        },\n      }}\n    >\n      <Box\n        sx={{\n          width: '28px',\n          height: '28px',\n          background: '#161616',\n          borderRadius: '6px',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <svg width=\"14\" height=\"14\" stroke=\"#ffffff\">\n          <use href={sprite + '#icon-add'}></use>\n        </svg>\n      </Box>\n      {title}\n    </Button>\n  );\n};\n\n// Кнопка для модалок без иконки\nexport const ButtonWithoutIcon = ({ title, onClick, type }) => {\n  return (\n    <Button\n      type={type}\n      onClick={onClick}\n      disableElevation\n      sx={{\n        display: 'flex',\n        color: '#161616',\n        fontFamily: 'Poppins, sans-serif',\n        alignItems: 'center',\n        textTransform: 'none',\n        borderRadius: '8px',\n        marginTop: '40px',\n        letterSpacing: '-0.02em',\n        fontSize: '14px',\n        background: '#BEDBB0',\n        lineHeight: '21px',\n        fontWeight: '500',\n        fontStyle: 'normal',\n        width: '100%',\n        height: '56px',\n        '&:hover': {\n          background: '#BEDBB0',\n        },\n      }}\n    >\n      {title}\n    </Button>\n  );\n};\n\n// Кнопка для добавления колонки\nexport const ButtonAdd = ({ onClick }) => {\n  return (\n    <Button\n      onClick={onClick}\n      variant=\"contained\"\n      disableElevation\n      sx={{\n        display: 'flex',\n        gap: '8px',\n        color: '#FFFFFF',\n        fontFamily: 'Poppins, sans-serif',\n        alignItems: 'center',\n        textTransform: 'none',\n        borderRadius: '8px',\n        marginTop: '40px',\n        letterSpacing: '-0.02em',\n        fontSize: '14px',\n        background: '#121212',\n        lineHeight: '21px',\n        fontWeight: '500',\n        fontStyle: 'normal',\n        width: '334px',\n        height: '56px',\n        '&:hover': {\n          background: '#121212',\n        },\n      }}\n    >\n      <Box\n        sx={{\n          width: '28px',\n          height: '28px',\n          background: 'white',\n          borderRadius: '6px',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <svg width=\"14\" height=\"14\" stroke=\"#121212\">\n          <use href={sprite + '#icon-add'}></use>\n        </svg>\n      </Box>\n      Add another column\n    </Button>\n  );\n};\n\n//Кнопка для Sidebar\nexport const ButtonSidebar = ({ onClick }) => {\n  return (\n    <IconButton\n      type=\"button\"\n      onClick={onClick}\n      sx={{\n        width: '40px',\n        height: '36px',\n        borderRadius: '6px',\n        background: '#BEDBB0',\n\n        '&:hover': {\n          background: '#9DC888',\n        },\n      }}\n    >\n      <svg width=\"20\" height=\"20\" stroke=\"#121212\">\n        <use href={sprite + '#icon-add'}></use>\n      </svg>\n    </IconButton>\n  );\n};\n\n","import styled from '@emotion/styled';\nexport const Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  // padding: 14px 24px;\n  // background: #1f1f1f;\n  font-family: Poppins;\n\n  //   @media (min-width: 1280px) {\n  //       height: 48px;\n  //   };\n  //   @media (min-width: 768px) {\n  //       height: 80px;\n  //   };\n  //   @media (min-width: 375px) {\n  //       height: 134px;\n  //   };\n  //   @media (max-width: 374px) {\n  //       max-height: 134px;\n  //   };\n`;\n\nexport const TitleDashBoard = styled.p`\n  font-size: 18px;\n  font-weight: 500;\n  letter-spacing: -0.36px;\n  margin: 0;\n  color: #ffffff;\n`;\n\nexport const FilterButton = styled.button`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 2px;\n  background-color: transparent;\n  border: none;\n  outline: none;\n  opacity: 0.8;\n  color: #ffffffcc;\n  cursor: pointer;\n`;\nexport const TitleFilter = styled.p`\n  font-size: 14px;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n  color: #ffffffcc;\n  margin-left: 8px;\n  font-family: Poppins;\n`;\n","import styled from '@emotion/styled';\n\nexport const ButtonClose = styled.button`\n  margin: 0;\n  padding: 0;\n  position: absolute;\n  right: 10px;\n  top: 10px;\n  width: 24px;\n  height: 24px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: rgba(255, 255, 255, 0.5);\n\n  background-color: transparent;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    border: 1px solid #ffffff;\n    color: rgba(255, 255, 255, 1);\n  }\n`;\n\nexport const FormStyled = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n  margin-bottom: 24px;\n`;\n\nexport const InputStyled = styled.input`\n  resize: none;\n  color: #ffffff;\n  padding: 14px 14px;\n  background-color: transparent;\n  border: 1px solid rgba(190, 219, 176, 0.4);\n  border-radius: 8px;\n  margin-bottom: 10px;\n  :focus {\n    border: 1px solid #bedbb0;\n    outline: none;\n  }\n  ::placeholder {\n    color: #ffffff;\n    opacity: 30%;\n  }\n`;\n\nexport const TransparentSVG = styled.svg`\n  width: 18px;\n  height: 18px;\n  stroke: rgba(255, 255, 255, 0.5);\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    // width: 24px;\n    // height: 24px;\n    stroke: #bedbb0;\n  }\n`;\n\nexport const UlStyled = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 8px;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  margin-bottom: 14px;\n`;\n\nexport const UlBgStyled = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 4px;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  margin-bottom: 14px;\n  width: 270px;\n`;\n\nexport const LiStyled = styled.li`\n  display: flex;\n  width: 28px;\n  height: 28px;\n  border-radius: 14px;\n`;\n\nexport const ImgStyled = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  object-position: center;\n  border-radius: 5px;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    border: 1px solid #bedbb0;\n  }\n`;\n\nexport const LiIconsStyled = styled.li`\n  display: flex;\n  width: 18px;\n  height: 18px;\n`;\n","export const arrIcons = [\n  '#icon-Project',\n  '#icon-star',\n  '#icon-loading',\n  '#icon-puzzle',\n  '#icon-container',\n  '#icon-lightning',\n  '#icon-colors',\n  '#icon-hexagon',\n];\n\nexport const backgroundImg = [\n  'https://res.cloudinary.com/dpurp913m/image/upload/v1693060747/teamProject/bcg-laptop-22_w6d1ix.jpg',\n  'https://res.cloudinary.com/dpurp913m/image/upload/v1693060747/teamProject/bcg-laptop-21_lhyxtz.jpg',\n  'https://res.cloudinary.com/dpurp913m/image/upload/v1693060747/teamProject/bcg-laptop-23_nvf3nr.jpg',\n  'https://res.cloudinary.com/dpurp913m/image/upload/v1693060747/teamProject/bcg-laptop-19_jgsoar.jpg',\n  'https://res.cloudinary.com/dpurp913m/image/upload/v1693060746/teamProject/bcg-laptop-18_lz8hnp.jpg',\n  'https://res.cloudinary.com/dpurp913m/image/upload/v1693060746/teamProject/bcg-laptop-16_hbougf.jpg',\n  'https://res.cloudinary.com/dpurp913m/image/upload/v1693060746/teamProject/bcg-laptop-15_p5qieq.jpg',\n  'https://res.cloudinary.com/dpurp913m/image/upload/v1693060746/teamProject/bcg-laptop-13_kzosan.jpg',\n  'https://res.cloudinary.com/dpurp913m/image/upload/v1693060746/teamProject/bcg-laptop-12_nehdkx.jpg',\n  'https://res.cloudinary.com/dpurp913m/image/upload/v1693060747/teamProject/bcg-laptop-24_ob1z2m.jpg',\n  'https://res.cloudinary.com/dpurp913m/image/upload/v1693060747/teamProject/bcg-laptop-25_cdzpq5.jpg',\n  'https://res.cloudinary.com/dpurp913m/image/upload/v1693060747/teamProject/bcg-laptop-20_je1cm3.jpg',\n  'https://res.cloudinary.com/dpurp913m/image/upload/v1693060746/teamProject/bcg-laptop-17_ypzhw7.jpg',\n  'https://res.cloudinary.com/dpurp913m/image/upload/v1693060746/teamProject/bcg-laptop-14_gvggrl.jpg',\n  'https://res.cloudinary.com/dpurp913m/image/upload/v1693060746/teamProject/bcg-laptop-11_rfi4bm.jpg',\n];\n","import { Modal, Box, Typography } from '@mui/material';\nimport sprite from '../../assets/images/sprite.svg';\nimport { ButtonClose } from 'components/ModalBoard/ModalBoard.styled';\n\n// import { useState } from 'react';\n\nconst ModalStyles = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 350,\n  borderRadius: 8 / 4,\n  border: '1px solid rgba(190, 219, 176, 0.50)',\n  background: '#151515',\n  padding: 24/8,\n};\n\nconst titleStyles = {\n  color: '#FFF',\n  fontSize: 18,\n  fontStyle: 'normal',\n  fontWeight: 500,\n  lineHeight: 'normal',\n  letterSpacing: -0.36,\n  marginBottom: 24 / 8,\n};\n\nconst ModalLayout = ({ title, open, handleClose, children }) => {\n  //   const [open, setOpen] = useState(false);\n  //   const handleOpen = () => setOpen(true);\n  //   const handleClose = () => setOpen(false);\n\n  return (\n    <>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box sx={ModalStyles}>\n          <Typography variant=\"h2\" sx={titleStyles}>\n            {title}\n          </Typography>\n          <ButtonClose type=\"button\" onClick={handleClose}>\n            <svg style={{ stroke: 'currentcolor' }} width=\"18\" height=\"18\">\n              <use href={sprite + '#icon-x-close'} />\n            </svg>\n          </ButtonClose>\n          {children}\n        </Box>\n      </Modal>\n    </>\n  );\n};\n\nexport default ModalLayout;\n","export const SIDEBARWIDTH = 260;\nexport const SIDEBARMOBILEWIDTH = 225;\n  \n\n\n\n","import styled from '@emotion/styled';\nimport RadioButtonIcon from '@mui/material/Radio';\n\nexport const ComponentWrapper = styled.div`\n  padding: 24px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const FormStyled = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n  margin-bottom: 24px;\n`;\n\nexport const InputStyled = styled.input`\n  resize: none;\n  color: #ffffff;\n  padding: 14px 14px;\n  background-color: transparent;\n  border: 1px solid #bedbb0;\n  border-radius: 8px;\n  :focus {\n    border: 2px solid #bedbb0;\n    outline: none;\n  }\n  ::placeholder {\n    color: #ffffff;\n    opacity: 30%;\n  }\n`;\n\nexport const TextareaStyled = styled.textarea`\n  display: flex;\n  min-height: 155px;\n  color: #ffffff;\n  resize: none;\n  padding: 14px 14px;\n  background-color: transparent;\n  border: 1px solid #bedbb0;\n  border-radius: 8px;\n  text-align: top;\n  :focus {\n    border: 2px solid #bedbb0;\n    outline: none;\n  }\n  ::placeholder {\n    color: #ffffff;\n    opacity: 30%;\n  }\n`;\n\nexport const LabelColorBox = styled.div`\n  display: flex;\n  gap: 4px;\n`;\n\nexport const RadioIcon = styled(RadioButtonIcon)`\n  width: 14px;\n  height: 14px;\n  border-radius: 50%;\n  background-color: #8fa1d0;\n`;\n\nexport const RadioIconChecked = styled(RadioButtonIcon)`\n  width: 14px;\n  height: 14px;\n  border-radius: 50%;\n  border: solid 2px #8fa1d0;\n  background-color: none;\n`;\n\nexport const SubWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: left;\n  gap: 4px;\n`;\n\nexport const DateWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 4px;\n`;\n\nexport const DateText = styled.p`\n  color: #bedbb0;\n  font-size: 14px;\n  margin: 0;\n`;\n\nexport const SubTitle = styled.p`\n  color: #ffffff;\n  font-size: 12px;\n  opacity: 50%;\n  margin: 0;\n`;\n","import React from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { ComponentWrapper, FormStyled, InputStyled } from '../AddCard/AddCard.styled';\nimport { ButtonWithIcon } from 'components/Buttons/Button';\n\nconst AddColumn = () => {\n  const validationSchema = Yup.object({\n    title: Yup.string()\n      .min(2, 'Must be more then 2 symbols')\n      .required('Title is required')\n      .matches(\n        /^(\\w*)$/,\n        'Title may contain only letters, apostrophe, dash and spaces.'\n      ),\n  });\n\n  const formik = useFormik({\n    initialValues: { title: '' },\n    onSubmit: ({ title }) => handleSubmit(title),\n    validationSchema,\n  });\n\n  const handleSubmit = title => {\n    console.log('Title => ', title);\n\n    formik.handleReset();\n  };\n\n  return (\n    <ComponentWrapper>\n      <FormStyled onSubmit={formik.handleSubmit}>\n        <InputStyled\n          id=\"title\"\n          name=\"title\"\n          placeholder=\"Title\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.title}\n        />\n              <ButtonWithIcon title={'Add'} type={'submit'} />\n      </FormStyled>\n    </ComponentWrapper>\n  );\n};\n\nexport default AddColumn;\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nexport const cardsApi = createApi({\n  reducerPath: 'cardsApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'https://project-future777-backend.onrender.com/api/',\n  }),\n  tagTypes: ['cards'],\n  endpoints: builder => ({\n    getCards: builder.query({\n      query: token => ({\n        url: 'cards',\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      }),\n      providesTags: ['cards'],\n    }),\n    addCardToColumn: builder.mutation({\n      query: ({ columnId, cardData, token }) => ({\n        url: `columns/${columnId}/cards`,\n        method: 'POST',\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n        body: cardData,\n      }),\n      invalidatesTags: ['cards'],\n    }),\n    deleteCard: builder.mutation({\n      query: ({ id, token }) => ({\n        url: `cards/${id}`,\n        method: 'DELETE',\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      }),\n      invalidatesTags: ['cards'],\n    }),\n    updateCard: builder.mutation({\n      query: ({ id, updatedData, token }) => ({\n        url: `cards/${id}`,\n        method: 'PUT',\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n        body: updatedData,\n      }),\n      invalidatesTags: ['cards'],\n    }),\n  }),\n});\n\nexport const {\n  useGetCardsQuery,\n  useAddCardToColumnMutation,\n  useDeleteCardMutation,\n  useUpdateCardMutation,\n} = cardsApi;\n","export const CardStyles = {\n  width: '334px',\n  height: '154px',\n  paddingTop: '14px',\n  paddingBottom: '14px',\n  paddingLeft: '24px',\n  paddingRight: '20px',\n  backgroundColor: '#121212',\n};\nexport const TypographyStylesTitle = {\n  color: '#FFF',\n  fontSize: '14px',\n  fontWeight: '600',\n  letterSpacing: '-0.28px',\n  marginBottom: '8px',\n};\nexport const TypographyStylesDescription = {\n  color: 'rgba(255, 255, 255, 0.50)',\n  fontSize: '12px',\n  fontWeight: '400',\n  letterSpacing: '-0.24px',\n  overflow: 'hidden',\n  whitespace: 'nowrap',\n  lineHeight: '16px',\n};\nexport const TypographyStylesPriority = {\n  color: ' rgba(255, 255, 255, 0.50)',\n  fontFamily: 'Poppins',\n  fontSize: '8px',\n\n  fontWeight: '400',\n  lineHeigt: 'normal',\n  letterSpacing: '-0.16px',\n};\nexport const CardContentStyles = {\n  borderBottom: '1px solid rgba(255, 255, 255, 0.10)',\n  padding: '0px',\n  paddingBottom: '14px',\n};\n","import React from 'react';\nimport { useState } from 'react';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport CardActions from '@mui/material/CardActions';\nimport { IconButton } from '@mui/material';\nimport MenuItem from '@mui/material/MenuItem';\nimport Menu from '@mui/material/Menu';\nimport Box from '@mui/material/Box';\nimport sprite from '../../assets/images/sprite.svg';\nimport { styled } from '@mui/material';\nimport { useSelector } from 'react-redux';\nimport { useDeleteCardMutation, useUpdateCardMutation } from '../../redux/tasks/cardSlice';\nimport {\n  CardStyles,\n  TypographyStylesTitle,\n  TypographyStylesDescription,\n  TypographyStylesPriority,\n  CardContentStyles,\n} from './TaskCard.styled';\nconst StyledIconButton = styled(IconButton)`\n  &:hover svg {\n    stroke: #bedbb0;\n    stroke-opacity: 1;\n    transition: stroke 0.3s;\n  }\n`;\nconst ListMenuStyles = styled(MenuItem)`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  color: rgba(255, 255, 255, 0.5);\n  font-family: 'Poppins';\n  font-size: 14px;\n\n  font-weight: 400px;\n\n  &:hover {\n    color: #bedbb0;\n  }\n  &:hover svg {\n    stroke: #bedbb0;\n    stroke-opacity: 1;\n    transition: stroke 0.3s;\n  }\n`;\nfunction TaskCard({ title, description, priority, deadline, moveCard, id }) {\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [deleteCard] = useDeleteCardMutation();\n  const [updateCard] = useUpdateCardMutation();\n  const token = useSelector(state => state.auth.token);\n  const handleOpenMenu = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleCloseMenu = () => {\n    setAnchorEl(null);\n  };\n\n  const handleMoveCard = newColumn => {\n    handleCloseMenu();\n    moveCard(newColumn);\n  };\n  const handleDeleteCard = async () => {\n    try {\n      await deleteCard({ id, token });\n    } catch (error) {\n      console.error('Error deleting card:', error);\n    }\n  };\n\n  const handleUpdateCard = async () => {\n    try {\n      const updatedData = {\n        title,\n        description,\n        priority,\n        deadline,\n\n        /* об'єкт з оновленими даними картки */\n      };\n      await updateCard({ id, updatedData, token });\n    } catch (error) {\n      console.error('Error updating card:', error);\n    }\n  };\n\n  return (\n    <Card sx={CardStyles}>\n      <CardContent sx={CardContentStyles}>\n        <Typography sx={TypographyStylesTitle} variant=\"h4\" component=\"div\">\n          Заголовок картки {title}\n        </Typography>\n        <Typography sx={TypographyStylesDescription} variant=\"body2\">\n          Текст або вміст картки буде тут.{description}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Typography sx={TypographyStylesPriority} variant=\"body2\">\n          Priority:\n          {priority}\n        </Typography>\n        <Typography sx={TypographyStylesPriority} variant=\"body2\">\n          Deadline:\n          {deadline}\n        </Typography>\n        <StyledIconButton onClick={handleOpenMenu} aria-label=\"next-colomn\">\n          <svg stroke=\"#fff\" strokeOpacity=\"0.5\" width=\"16\" height=\"16\">\n            <use href={sprite + '#icon-active'} />\n          </svg>\n        </StyledIconButton>\n        <StyledIconButton onClick={handleUpdateCard} aria-label=\"edit\">\n          <svg stroke=\"#fff\" strokeOpacity=\"0.5\" width=\"16\" height=\"16\">\n            <use href={sprite + '#icon-pencil'} />\n          </svg>\n        </StyledIconButton>\n        <StyledIconButton onClick={handleDeleteCard} aria-label=\"remove\">\n          <svg stroke=\"#fff\" strokeOpacity=\"0.5\" width=\"16\" height=\"16\">\n            <use href={sprite + '#icon-trash'} />\n          </svg>\n        </StyledIconButton>\n      </CardActions>\n      <Menu\n        anchorEl={anchorEl}\n        open={Boolean(anchorEl)}\n        onClose={handleCloseMenu}\n        PaperProps={{\n          sx: {\n            backgroundColor: '#151515',\n            width: '135px',\n          },\n        }}\n      >\n        {/* List of columns to move the card */}\n        <ListMenuStyles onClick={() => handleMoveCard('Column 1')}>\n          {' '}\n          <Box> In progress </Box>\n          <Box>\n            {' '}\n            <svg stroke=\"#fff\" strokeOpacity=\"0.5\" width=\"16\" height=\"16\">\n              <use href={sprite + '#icon-active'} />\n            </svg>\n          </Box>\n        </ListMenuStyles>\n        <ListMenuStyles onClick={() => handleMoveCard('Column 2')}>\n          <Box> Done </Box>\n          <Box>\n            {' '}\n            <svg stroke=\"#fff\" strokeOpacity=\"0.5\" width=\"16\" height=\"16\">\n              <use href={sprite + '#icon-active'} />\n            </svg>\n          </Box>\n        </ListMenuStyles>\n      </Menu>\n    </Card>\n  );\n}\n\nexport default TaskCard;\n","import * as React from 'react';\nimport Radio from '@mui/material/Radio';\n\nexport default function ColorRadioButtons({ onColorChange, value }) {\n  const [selectedValue, setSelectedValue] = React.useState('4');\n\n  const handleChange = event => {\n    setSelectedValue(event.target.value);\n    onColorChange(event.target.value);\n  };\n\n  const controlProps = item => ({\n    checked: selectedValue === item,\n    onChange: handleChange,\n    value: item,\n  });\n\n  return (\n    <div>\n      <Radio\n        {...controlProps('1')}\n        sx={{ color: '#8FA1D0', '&.Mui-checked': { color: '#8FA1D0' } }}\n      />\n      <Radio\n        {...controlProps('2')}\n        sx={{ color: '#E09CB5', '&.Mui-checked': { color: '#E09CB5' } }}\n      />\n      <Radio\n        {...controlProps('3')}\n        sx={{ color: '#BEDBB0', '&.Mui-checked': { color: '#BEDBB0' } }}\n      />\n      <Radio\n        {...controlProps('4')}\n        sx={{ color: 'grey', '&.Mui-checked': { color: 'grey' } }}\n      />\n    </div>\n  );\n}\n","import styled from \"@emotion/styled\";\n\nexport const DropDawnBtn = styled.button`\n  outline: none;\n  background-color: transparent;\n  border: none;\n  transition: all 0.3s ease-in-out;\n  :hover,\n  :focus {\n    transform: translateY(5px);\n  }\n`;\nexport const DropDownSVG = styled.svg`\n  stroke: #bedbb0;\n`;\n","import React from 'react'\nimport sprite from '../../../assets/images/sprite.svg';\nimport { DropDawnBtn, DropDownSVG } from './DropDownIcon.styled';\n\nconst DropDownIcon = ({onClick}) => {\n  return (\n    <div>\n      <DropDawnBtn id={'date-picker'} onClick={onClick}>\n        <DropDownSVG width=\"18\" height=\"18\">\n          <use href={sprite + '#icon-drop-down'} />\n        </DropDownSVG>\n      </DropDawnBtn>\n    </div>\n  );\n}\n\nexport default DropDownIcon\n","import { Popover } from '@mui/material';\nimport React from 'react';\n\nconst PopupStyles = {\n  '.css-3bmhjh-MuiPaper-root-MuiPopover-paper': {\n    backgroundColor: '#1F1F1F',\n    borderRadius: '8px',\n  },\n};\n\nconst Popup = ({ anchorEl, open, onClose, children }) => {\n  return (\n    <Popover\n      sx={PopupStyles}\n      anchorEl={anchorEl}\n      open={open}\n      onClose={onClose}\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'left',\n      }}\n      transformOrigin={{\n        vertical: 'top',\n        horizontal: 'left',\n      }}\n    >\n      {children}\n    </Popover>\n  );\n};\n\nexport default Popup;\n","import { DateCalendar } from '@mui/x-date-pickers/DateCalendar';\nimport styled from '@emotion/styled';\n\nconst DateCalendarStyled = styled(DateCalendar)`\n  .MuiDateCalendar-root {\n    font-family: 'Poppins';\n    background: '#1F1F1F';\n    color: '#ffffff';\n  }\n`;\n\nconst DatePickerStyles = {\n  '.MuiTypography-root': {\n    width: '24px',\n    m: '5px',\n    fontSize: '14px',\n    fontWeight: 500,\n    fontFamily: 'Poppins',\n    color: 'rgba(255, 255, 255, 0.5)',\n  },\n  '.MuiPickersCalendarHeader-label': {\n    fontSize: '14px',\n    fontWeight: 600,\n    fontFamily: 'Poppins',\n    color: '#FFF',\n  },\n  '.MuiDateCalendar-root': {\n    width: '235px',\n  },\n  '.MuiPaper-root': {\n    backgroundColor: '#1F1F1F',\n  },\n  '.MuiYearCalendar-root': {\n    width: '265px',\n  },\n  '.MuiPickersDay-root': {\n    color: '#FFF',\n  },\n  '.MuiButtonBase-root': {\n    width: '24px',\n    height: '24px',\n    m: '5px',\n    color: '#fff',\n  },\n\n  '.MuiPickersArrowSwitcher-spacer': {\n    width: '0px',\n  },\n  '.MuiPickersFadeTransitionGroup-root': {\n    overflow: 'hidden',\n  },\n  '.MuiButtonBase-root:hover': {\n    backgroundColor: '#BEDBB0',\n    color: '#1F1F1F',\n  },\n  '.MuiPickersYear-yearButton.Mui-selected': {\n    backgroundColor: '#BEDBB0',\n    color: '#1F1F1F',\n  },\n  '.MuiPickersDay-today': {\n    backgroundColor: '#BEDBB0',\n    color: '#1F1F1F',\n    border: '1px solid #BEDBB0',\n  },\n  '.MuiPickersDay-dayOutsideMonth': {\n    fontWeight: 400,\n    color: 'rgba(255, 255, 255, 0.18)',\n  },\n  '.MuiButtonBase-root.Mui-disabled': {\n    fontWeight: 400,\n    color: 'rgba(255, 255, 255, 0.18)',\n  },\n  '.css-qa7bje-MuiButtonBase-root-MuiPickersDay-root.Mui-disabled:not(.Mui-selected)':\n    {\n      fontWeight: 400,\n      color: 'rgba(255, 255, 255, 0.38)',\n    },\n  width: '265px',\n  height: '295px',\n  backgroundColor: '#1F1F1F',\n  border: '1px solid #BEDBB0',\n  color: '#FFF',\n  borderRadius: '8px',\n  fontStyle: 'normal',\n  fontWeight: 500,\n  lineHeight: 'normal',\n  letterSpacing: -0.36,\n  marginBottom: 0,\n};\n\nconst DatePickerCmponent = ({ onChange }) => {\n  return (\n    <div>\n      {/* <ThemeProvider theme={theme}> */}\n      <DateCalendarStyled\n        sx={DatePickerStyles}\n        disablePast\n        onChange={onChange}\n        format=\"LL\"\n        showDaysOutsideCurrentMonth\n      />\n      {/* </ThemeProvider> */}\n    </div>\n  );\n};\n\nexport default DatePickerCmponent;\n","import React, { useEffect, useState } from 'react';\nimport {\n  ComponentWrapper,\n  FormStyled,\n  TextareaStyled,\n  SubWrapper,\n  DateText,\n  DateWrapper,\n  SubTitle,\n  InputStyled,\n} from './AddCard.styled';\nimport { useFormik } from 'formik';\nimport ColorRadioButtons from 'components/ColorRadioButtons/ColorRadioButtons';\nimport { format } from 'date-fns';\n\nimport { ButtonWithIcon } from 'components/Buttons/Button';\nimport * as Yup from 'yup';\nimport DropDownIcon from 'components/Icons/DropDownIcon/DropDownIcon';\nimport Popup from 'components/Popup/Popup';\nimport DatePickerCmponent from 'components/DatePicker/DatePicker';\n\nconst AddCard = () => {\n  const [date, setDate] = useState('');\n  const [color, setColor] = useState('grey');\n  const [anchorEl, setAnchorEl] = useState(<DropDownIcon />);\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n\n  const handleDateClick = e => {\n    \n      console.log('e.currentTarget :>> ', e.currentTarget);\n    setAnchorEl(e.currentTarget);\n    setIsPopupOpen(!isPopupOpen);\n  };\n  const onDateChange = e => {\n    console.log('e :>> ', e);\n    const dateFns = format(e, 'LLLL d');\n    setDate(dateFns);\n    setIsPopupOpen(false);\n  };\n\n  const onColorChange = value => {\n    console.log('value :>> ', value);\n    setColor(value);\n  };\n\n  const handleSubmit = (title, description, color) => {\n    console.log('Title => ', title);\n    console.log('Description => ', description);\n    console.log('Color :>> ', color);\n    console.log('Date :>> ', date);\n    formik.handleReset();\n  };\n  const validationSchema = Yup.object({\n    title: Yup.string()\n      .min(2, 'Must be more then 2 symbols')\n      .required('Title is required')\n      .matches(\n        /^(\\w*)$/,\n        'Title may contain only letters, apostrophe, dash and spaces.'\n      ),\n    description: Yup.string(),\n    color: Yup.string(),\n  });\n\n  const formik = useFormik({\n    initialValues: { title: '', description: '' },\n    onSubmit: ({ title, description }) =>\n      handleSubmit(title, description, color, date),\n    validationSchema,\n  });\n\n  useEffect(() => {\n    const dateFns = format(new Date(), \"'Today,' LLLL d\");\n    setDate(dateFns);\n  }, []);\n\n  return (\n    <ComponentWrapper>\n      <FormStyled onSubmit={formik.handleSubmit}>\n        <InputStyled\n          id=\"title\"\n          name=\"title\"\n          placeholder=\"Title\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.title}\n        />\n\n        <TextareaStyled\n          id=\"description\"\n          name=\"description\"\n          placeholder=\"Description\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.description}\n        />\n\n        <SubWrapper>\n          <SubTitle>Label color</SubTitle>\n          <ColorRadioButtons onColorChange={onColorChange} />\n        </SubWrapper>\n\n        <SubWrapper>\n          <SubTitle>Deadline</SubTitle>\n          <DateWrapper>\n            <DateText>{date}</DateText>\n            <DropDownIcon onClick={handleDateClick} />\n            <Popup\n              anchorEl={anchorEl}\n              open={isPopupOpen}\n              onClose={handleDateClick}\n            >\n              <DatePickerCmponent onChange={onDateChange} />\n            </Popup>\n          </DateWrapper>\n        </SubWrapper>\n\n        <ButtonWithIcon title={'Add'} type={'submit'} />\n      </FormStyled>\n    </ComponentWrapper>\n  );\n};\n\nexport default AddCard;\n","import styled from \"@emotion/styled\";\nimport React, { useState } from \"react\";\nimport sprite from '../../assets/images/sprite.svg';\nimport { IconButton } from \"@mui/material\";\nimport data from \"./db-tasks.cards.json\";\nimport TaskCard from \"../TaskCard/TaskCard\";\nimport { ButtonWithIcon } from \"../Buttons/Button\";\nimport ModalLayout from \"../ModalLayout/ModalLayout\";\nimport AddCard from \"../AddCard/AddCard\";\n\nconst ColumnWrapper = styled.div`\n  display: grid;\n  grid-template-rows: 56px auto 56px;\n  gap: 14px;\n  width: 334px;\n  max-height: 80vh;\n  margin-right: 14px;\n`;\n\nconst ColumnHeader = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  max-width: 334px;\n  height: 56px;\n  background-color: #161616;\n  color: #ffffff;\n  padding: 20px;\n  /* padding-right: 20px; */\n  border-radius: 8px;\n`;\n\nconst ColumnTitle = styled.h2`\n  display: flex;\n  font-family: \"Poppins\";\n  font-weight: 600;\n  font-size: 14px;\n  margin: 0;\n`;\n\nconst CardsList = styled.div`\n  display: grid;\n  width: 348px;\n  height: 100%;\n  gap: 8px;\n  border-radius: 8px;\n  padding-right: 8px;\n  /* overflow: hidden; */\n  overflow-y: scroll;\n  ::-webkit-scrollbar {\n    position: absolute;\n    border-radius: 5px;\n    margin-left: 4px;\n    transform: translateY(50px);\n    width: 8px;\n    background-color: rgba(255, 255, 255, 0.2);\n  }\n  ::-webkit-scrollbar-thumb {\n    background: #121212;\n    border-radius: 5px;\n  }\n  ::-webkit-scrollbar-thumb:hover {\n    background: #9dc888;\n  }\n`;\n\nconst StyledIconButton = styled(IconButton)`\n  width: 18px;\n  height: 18px;\n  padding: 0;\n  margin: 4px;\n  &:hover svg {\n    stroke: #bedbb0;\n    stroke-opacity: 1;\n    transition: stroke 0.3s;\n  }\n`;\n\nconst Column = ({ id, title, cards }) => {\n  const [isAddCardOpen, setIsAddCardOpen] = useState(false);\n  const closeAddCard = () => setIsAddCardOpen(false);\n    const handleClick = () => setIsAddCardOpen(true);\n  const handleUpdateColumn = () => {\n    console.log(\"Column updated\");\n  };\n  const handleDeleteColumn = () => {\n    console.log(\"Column deleted\");\n  };\n  return (\n    <ColumnWrapper>\n      <ColumnHeader>\n        <ColumnTitle>Column Name</ColumnTitle>\n        <div>\n          <StyledIconButton onClick={handleUpdateColumn} aria-label=\"edit\">\n            <svg stroke=\"#fff\" strokeOpacity=\"0.5\" width=\"16\" height=\"16\">\n              <use href={sprite + \"#icon-pencil\"} />\n            </svg>\n          </StyledIconButton>\n          <StyledIconButton onClick={handleDeleteColumn} aria-label=\"remove\">\n            <svg stroke=\"#fff\" strokeOpacity=\"0.5\" width=\"16\" height=\"16\">\n              <use href={sprite + \"#icon-trash\"} />\n            </svg>\n          </StyledIconButton>\n        </div>\n      </ColumnHeader>\n      <CardsList>\n        {data.map(({ title, description, priority, deadline, _id: id }) => {\n          return (\n            <TaskCard\n              title={title}\n              description={description}\n              priority={priority}\n              deadline={deadline}\n              id={id}\n            />\n          );\n        })}\n      </CardsList>\n      {data ? (\n        <ButtonWithIcon\n          onClick={handleClick}\n          title={\"Add card\"}\n          type={\"submit\"}\n        />\n      ) : (\n        <></>\n      )}\n      <ModalLayout open={isAddCardOpen} handleClose={closeAddCard}>\n        <AddCard close={closeAddCard} />\n      </ModalLayout>\n    </ColumnWrapper>\n  );\n};\n\nexport default Column;\n","import styled from '@emotion/styled';\nimport { Field as FormicField } from 'formik';\n\nexport const Div = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: baseline;\n  margin-bottom: 2px;\n`;\n\nexport const Button = styled.button`\n  color: rgba(255, 255, 255, 0.5);\n  font-size: 12px;\n  font-weight: 400;\n  letter-spacing: -0.24px;\n  text-decoration-line: underline;\n\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n`;\nexport const LabelGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  justify-content: center;\n  /* align-items: baseline; */\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: center;\n  /* justify-content: center; */\n  gap: 8px;\n  cursor: pointer;\n  color: #ffffff80;\n  font-size: 12px;\n  font-weight: 400;\n  letter-spacing: -0.24px;\n  padding-top: 1px;\n  padding-bottom: 1px;\n`;\n\nexport const Field = styled(FormicField)`\n  width: 14px;\n  height: 14px;\n  background-color: transparent;\n\n  display: grid;\n  place-content: center;\n\n  ::after {\n    content: '';\n    left: 6.4%;\n    position: absolute;\n    transform: translate(6px, 1px);\n    width: 12px;\n    height: 12px;\n    border: 2.5px solid black;\n    border-radius: 50%;\n    opacity: 0;\n  }\n  ::before {\n    content: '';\n    width: 14px;\n    height: 14px;\n    border-radius: 50%;\n    transition: 120ms transform ease-in-out;\n    background-color: ${props => props.color};\n  }\n\n  :checked::after {\n    opacity: 1;\n  }\n`;\n\n// export const Field = styled.div`\n//   width: 14px;\n//   height: 14px;\n//   border-radius: 14px;\n//   position: absolute;\n//   top: 50%;\n//   left: 50%;\n//   transform: translate(-50%, -50%);\n\n//   background-color: ${props =>\n//     props.color === 'without' && 'rgb(128, 128, 128)'};\n//   background-color: ${props =>\n//     props.color === 'low' && 'rgba(143, 161, 208, 1)'};\n//   background-color: ${props =>\n//     props.color === 'medium' && 'rgba(224, 156, 181, 1)'};\n//   background-color: ${props =>\n//     props.color === 'high' && 'rgba(190, 219, 176, 1)'};\n\n//   transition: all 250ms linear;\n\n//   &.active {\n//     width: 6px;\n//     height: 6px;\n//   }\n// `;\n\nexport const RadioWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`;\n","import { Radio, Typography } from '@mui/material';\n// import { LiStyled, UlBgStyled } from 'components/ModalLayout/Modal.styled';\nimport ModalLayout from 'components/ModalLayout/ModalLayout';\nimport { Form, Formik } from 'formik';\nimport { useState } from 'react';\n\nimport { backgroundImg } from '../ModalBoard/data';\nimport { Button, Div, Label, LabelGroup, RadioWrap } from './Filter.styled';\nimport { LiStyled, UlBgStyled } from 'components/ModalBoard/ModalBoard.styled';\n\nconst titleStyle = {\n  color: '#FFF',\n  fontSize: 14,\n  fontStyle: 'normal',\n  fontWeight: 500,\n  lineHeight: 'normal',\n  letterSpacing: -0.36,\n  // marginBottom: 24 / 8,\n};\n\nexport const Filter = ({ open, onClose }) => {\n  const [bgImgIndex, setBgImgIndex] = useState(null);\n\n  const [currentPrority, setCurrentPrority] = useState('');\n  const [isShowAllActive, setIsShowAllActive] = useState(false);\n  const initialValues = {\n    currentBg: 0,\n    currentPrority: '',\n  };\n\n  const controlProps = item => ({\n    checked: currentPrority === item,\n    onChange: handleChange,\n    value: item,\n  });\n  const handleChange = event => {\n    const filter = event.target.value;\n    setCurrentPrority(filter);\n    // dispatch(setFilterCards(filter));\n    setIsShowAllActive(false);\n  };\n\n  const handleShowAll = () => {\n    setCurrentPrority('');\n    // dispatch(setFilterCards(''));\n    setIsShowAllActive(true);\n  };\n\n  const handleRadioClick = () => {\n    if (isShowAllActive) {\n      setIsShowAllActive(false);\n    }\n  };\n  // console.log(currentPrority);\n  console.log(bgImgIndex);\n\n  return (\n    <ModalLayout title={'Filters'} open={open} handleClose={onClose}>\n      <Formik initialValues={initialValues}>\n        <Form onChange={handleChange}>\n          <UlBgStyled>\n            <LiStyled></LiStyled>\n            {backgroundImg.map((el, index) => {\n              return (\n                <LiStyled\n                  key={index + 1}\n                  onClick={() => setBgImgIndex(index + 1)}\n                >\n                  <img src={el} alt=\"\" width=\"24px\" height=\"24px\" />\n                </LiStyled>\n              );\n            })}\n          </UlBgStyled>\n          <LabelGroup role=\"group\" aria-labelledby=\"my-radio-group\">\n            <Div>\n              <Typography variant=\"h2\" sx={titleStyle}>\n                Label Color\n              </Typography>\n              <Button\n                type=\"button\"\n                onClick={handleShowAll}\n                disabled={isShowAllActive}\n              >\n                Show all\n              </Button>\n            </Div>\n            <RadioWrap>\n              <Label>\n                <Radio\n                  onClick={handleRadioClick}\n                  checked={currentPrority === 'without'}\n                  name=\"currentPrority\"\n                  {...controlProps('without')}\n                  size=\"small\"\n                  sx={{ color: 'grey', '&.Mui-checked': { color: 'grey' } }}\n                />\n                Without priority\n              </Label>\n              <Label>\n                <Radio\n                  onClick={handleRadioClick}\n                  checked={currentPrority === 'low'}\n                  name=\"currentPrority\"\n                  {...controlProps('low')}\n                  size=\"small\"\n                  sx={{\n                    color: '#8FA1D0',\n                    '&.Mui-checked': { color: '#8FA1D0' },\n                  }}\n                />\n                Low\n              </Label>\n              <Label>\n                <Radio\n                  onClick={handleRadioClick}\n                  checked={currentPrority === 'medium'}\n                  name=\"currentPrority\"\n                  {...controlProps('medium')}\n                  size=\"small\"\n                  sx={{\n                    color: '#E09CB5',\n                    '&.Mui-checked': { color: '#E09CB5' },\n                  }}\n                />\n                Medium\n              </Label>\n\n              <Label>\n                <Radio\n                  onClick={handleRadioClick}\n                  checked={currentPrority === 'high'}\n                  name=\"currentPrority\"\n                  {...controlProps('high')}\n                  size=\"small\"\n                  sx={{\n                    color: '#BEDBB0',\n                    '&.Mui-checked': { color: '#BEDBB0' },\n                  }}\n                />\n                High\n              </Label>\n            </RadioWrap>\n          </LabelGroup>\n        </Form>\n      </Formik>\n    </ModalLayout>\n  );\n};\n","// import ModalLayout from 'components/ModalLayout/ModalLayout';\nimport sprite from '../../assets/images/sprite.svg';\nimport { useState } from 'react';\nimport { Filter } from './Filter';\n\nconst {\n  Container,\n  TitleDashBoard,\n  FilterButton,\n  TitleFilter,\n} = require('./HeaderDashboard.styled');\nexport const HeaderDashboard = () => {\n  const [isOpen, setIsOpen] = useState();\n  const toggleModal = () => setIsOpen(!isOpen);\n\n  return (\n    <Container>\n      <TitleDashBoard>Project</TitleDashBoard>\n      <FilterButton onClick={toggleModal}>\n        <svg aria-label=\"filter icon\" width=\"16\" height=\"16\">\n          <use href={sprite + '#icon-filter'}></use>\n        </svg>\n        <TitleFilter>Filters</TitleFilter>\n      </FilterButton>\n      {isOpen && <Filter open={isOpen} onClose={toggleModal} />}\n    </Container>\n  );\n};\n","import React, { useState } from 'react';\nimport { Box } from '@mui/material';\nimport { SIDEBARWIDTH } from 'components/Sidebar/SidebarCONSTANTS';\nimport { ButtonAdd } from 'components/Buttons/Button';\nimport ModalLayout from '../../components/ModalLayout/ModalLayout';\nimport AddColumn from 'components/AddColumn/AddColumn';\n// import sprite from '../../assets/images/sprite.svg';\n\nimport Column from '../../components/Column/Column';\nimport styled from '@emotion/styled';\nimport { HeaderDashboard } from 'components/HeaderDashboard/HeaderDashboard';\n\nconst ColumnsWrapper = styled.div`\n  display: grid;\n  grid-template-columns: 334px 334px;\n  gap: 34px;\n  align-items: top;\n`;\n\nconst ScreensPage = () => {\n  const [isAddColumnOpen, setIsAddColumnOpen] = useState(false);\n\n  const openAddColumn = () => setIsAddColumnOpen(true);\n  const closeAddColumn = () => setIsAddColumnOpen(false);\n\n  return (\n    <Box\n      component=\"main\"\n      sx={{\n        pt: {0: 9.25, 768: 11, 1440: 9.75},\n        pb: {0: 3, 768: 4, 1440: 1},\n        pl: {0: 2.5, 768: 4, 1440: 3},\n        pr: {0: 2.5, 768: 4, 1440: 3},\n        width: { 0: '100vw', 1440: `calc(100vw - ${SIDEBARWIDTH}px)` },\n        height: '100vh',\n        backgroundColor: '#2e2e2e',\n      }}\n    >\n      {/* <Typography\n        paragraph\n        sx={{\n          color: '#ffffff',\n          fontFamily: 'Poppins, sans-serif',\n          fontWeight: 500,\n          fontSize: '16px',\n        }}\n      >\n        BoardName\n      </Typography>\n      <IconButton\n        sx={{\n          position: 'absolute',\n          top: '94px',\n          right: '40px',\n          zIndex: 1,\n          color: '#ffffff',\n          fontFamily: 'Poppins, sans-serif',\n          fontWeight: 500,\n          fontSize: '16px',\n          lineHeight: '21px',\n          letterSpacing: '-2%',\n        }}\n      >\n        <svg\n          stroke=\"#fff\"\n          strokeOpacity=\"1\"\n          width=\"18\"\n          height=\"18\"\n          style={{ verticalAlign: 'middle', marginRight: '8px' }}\n        >\n          <use href={sprite + '#icon-filter'} />\n        </svg>\n        Filter\n      </IconButton> */}\n      <HeaderDashboard />\n\n      <ColumnsWrapper>\n        <Column />\n        <ButtonAdd onClick={openAddColumn}></ButtonAdd>\n      </ColumnsWrapper>\n      {/* Використовуйте відповідний компонент ModalLayout з дочірнім елементом AddColumn */}\n      <ModalLayout open={isAddColumnOpen} handleClose={closeAddColumn}>\n        <AddColumn />\n      </ModalLayout>\n    </Box>\n  );\n};\n\nexport default ScreensPage;\n"],"names":["ButtonWithIcon","_ref","title","onClick","type","_jsxs","Button","variant","disableElevation","sx","display","gap","color","fontFamily","alignItems","textTransform","borderRadius","letterSpacing","fontSize","background","lineHeight","fontWeight","fontStyle","width","height","children","_jsx","Box","justifyContent","stroke","href","sprite","ButtonAdd","_ref3","marginTop","ButtonSidebar","_ref4","IconButton","Container","styled","_templateObject","_taggedTemplateLiteral","TitleDashBoard","_templateObject2","FilterButton","_templateObject3","TitleFilter","_templateObject4","ButtonClose","FormStyled","InputStyled","TransparentSVG","UlStyled","_templateObject5","UlBgStyled","_templateObject6","LiStyled","_templateObject7","ImgStyled","_templateObject8","LiIconsStyled","_templateObject9","arrIcons","backgroundImg","ModalStyles","position","top","left","transform","border","padding","titleStyles","marginBottom","open","handleClose","_Fragment","Modal","onClose","Typography","style","SIDEBARWIDTH","SIDEBARMOBILEWIDTH","ComponentWrapper","TextareaStyled","SubWrapper","RadioButtonIcon","DateWrapper","DateText","_templateObject10","SubTitle","_templateObject11","validationSchema","Yup","min","required","matches","formik","useFormik","initialValues","onSubmit","handleSubmit","console","log","handleReset","id","name","placeholder","onChange","handleChange","onBlur","handleBlur","value","values","cardsApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","getCards","query","token","url","headers","Authorization","concat","providesTags","addCardToColumn","mutation","columnId","cardData","method","body","invalidatesTags","deleteCard","_ref2","updateCard","updatedData","useDeleteCardMutation","useGetCardsQuery","useAddCardToColumnMutation","useUpdateCardMutation","CardStyles","paddingTop","paddingBottom","paddingLeft","paddingRight","backgroundColor","TypographyStylesTitle","TypographyStylesDescription","overflow","whitespace","TypographyStylesPriority","lineHeigt","CardContentStyles","borderBottom","StyledIconButton","ListMenuStyles","MenuItem","description","priority","deadline","moveCard","_useState","useState","_useState2","_slicedToArray","anchorEl","setAnchorEl","_useDeleteCardMutatio","_useUpdateCardMutatio","useSelector","state","auth","handleCloseMenu","handleMoveCard","newColumn","handleDeleteCard","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","t0","error","stop","apply","arguments","handleUpdateCard","_callee2","_context2","Card","CardContent","component","CardActions","event","currentTarget","strokeOpacity","Menu","Boolean","PaperProps","ColorRadioButtons","onColorChange","_React$useState","React","_React$useState2","selectedValue","setSelectedValue","target","controlProps","item","checked","Radio","_objectSpread","DropDawnBtn","DropDownSVG","PopupStyles","Popover","anchorOrigin","vertical","horizontal","transformOrigin","DateCalendarStyled","DateCalendar","DatePickerStyles","m","disablePast","format","showDaysOutsideCurrentMonth","date","setDate","_useState3","_useState4","setColor","_useState5","DropDownIcon","_useState6","_useState7","_useState8","isPopupOpen","setIsPopupOpen","handleDateClick","e","useEffect","dateFns","Date","Popup","DatePickerCmponent","ColumnWrapper","ColumnHeader","ColumnTitle","CardsList","cards","isAddCardOpen","setIsAddCardOpen","closeAddCard","data","_id","TaskCard","ModalLayout","AddCard","close","Div","LabelGroup","Label","RadioWrap","FormicField","props","titleStyle","Filter","bgImgIndex","setBgImgIndex","currentPrority","setCurrentPrority","isShowAllActive","setIsShowAllActive","filter","handleRadioClick","Formik","currentBg","Form","el","index","src","alt","role","disabled","size","_require","require","HeaderDashboard","isOpen","setIsOpen","toggleModal","ColumnsWrapper","isAddColumnOpen","setIsAddColumnOpen","pt","pb","pl","pr","Column","AddColumn"],"sourceRoot":""}