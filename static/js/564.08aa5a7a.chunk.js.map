{"version":3,"file":"static/js/564.08aa5a7a.chunk.js","mappings":"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","sources":["Services/API.js","components/Buttons/Button.jsx","components/HeaderDashboard/HeaderDashboard.styled.jsx","components/ModalBoard/ModalBoard.styled.jsx","components/ModalBoard/data.jsx","components/ModalLayout/ModalLayout.jsx","components/Sidebar/SidebarCONSTANTS.js","components/AddCard/AddCard.styled.jsx","components/AddColumn/AddColumn.jsx","redux/tasks/cardSlice.js","components/TaskCard/TaskCard.styled.jsx","components/TaskCard/TaskCard.jsx","components/ColorRadioButtons/ColorRadioButtons.jsx","components/Icons/DropDownIcon/DropDownIcon.styled.jsx","components/Icons/DropDownIcon/DropDownIcon.jsx","components/Popup/Popup.jsx","components/DatePicker/DatePicker.jsx","components/AddCard/AddCard.jsx","components/Column/Column.styled.jsx","components/Column/Column.jsx","components/HeaderDashboard/Filter.styled.jsx","components/HeaderDashboard/Filter.jsx","components/HeaderDashboard/HeaderDashboard.jsx","pages/ScreensPage/ScreenPage.styled.jsx","pages/ScreensPage/ScreensPage.jsx"],"sourcesContent":["import {\n  useRegisterMutation,\n  useLogInMutation,\n  useLogOutMutation,\n  useGetCurrentUserQuery,\n  useUpdateUserMutation,\n  useThemeUserMutation,\n  useAvatarUserMutation,\n  useHelpUserMutation,\n  useGetBoardsQuery,\n  useGetBoardByIdQuery,\n  useAddBoardsMutation,\n  useDeleteBoardByIdMutation,\n  useUpdateBoardByIdMutation,\n  useAddColumnMutation,\n  useUpdateColumnByIdMutation,\n  useDeleteColumnByIdMutation,\n  useAddCardMutation,\n  useUpdateCardByIdMutation,\n  useDeleteCardByIdMutation,\n  useUpdateCardColumnByIdMutation,\n} from './API_Component';\n\nexport const API = {\n  useRegisterMutation,\n  useLogInMutation,\n  useLogOutMutation,\n  useAvatarUserMutation,\n  useGetCurrentUserQuery,\n  useHelpUserMutation,\n  useThemeUserMutation,\n  useUpdateUserMutation,\n  useGetBoardsQuery,\n  useGetBoardByIdQuery,\n  useAddBoardsMutation,\n  useDeleteBoardByIdMutation,\n  useUpdateBoardByIdMutation,\n  useAddColumnMutation,\n  useUpdateColumnByIdMutation,\n  useDeleteColumnByIdMutation,\n  useAddCardMutation,\n  useUpdateCardByIdMutation,\n  useDeleteCardByIdMutation,\n  useUpdateCardColumnByIdMutation,\n};\n","import * as React from 'react';\nimport Button from '@mui/material/Button';\n\nimport { Box, IconButton } from '@mui/material';\n\nimport sprite from '../../assets/images/sprite.svg';\n\n// Кнопка для модалок с иконкой\nexport const ButtonWithIcon = ({ title, onClick, type }) => {\n  return (\n    <Button\n      onClick={onClick}\n      type={type}\n      variant=\"contained\"\n      disableElevation\n      sx={{\n        display: 'flex',\n        gap: '8px',\n        color: '#161616',\n        fontFamily: 'Poppins, sans-serif',\n        alignItems: 'center',\n        textTransform: 'none',\n        borderRadius: '8px',\n        letterSpacing: '-0.02em',\n        fontSize: '14px',\n        background: '#BEDBB0',\n        lineHeight: '21px',\n        fontWeight: '500',\n        fontStyle: 'normal',\n        width: '100%',\n        height: '56px',\n        '&:hover': {\n          background: '#9DC888',\n        },\n      }}\n    >\n      <Box\n        sx={{\n          width: '28px',\n          height: '28px',\n          background: '#161616',\n          borderRadius: '6px',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <svg width=\"14\" height=\"14\" stroke=\"#ffffff\">\n          <use href={sprite + '#icon-add'}></use>\n        </svg>\n      </Box>\n      {title}\n    </Button>\n  );\n};\n\n// Кнопка для модалок без иконки\nexport const ButtonWithoutIcon = ({ title, onClick, type }) => {\n  return (\n    <Button\n      type={type}\n      onClick={onClick}\n      disableElevation\n      sx={{\n        display: 'flex',\n        color: '#161616',\n        fontFamily: 'Poppins, sans-serif',\n        alignItems: 'center',\n        textTransform: 'none',\n        borderRadius: '8px',\n        marginTop: '40px',\n        letterSpacing: '-0.02em',\n        fontSize: '14px',\n        background: '#BEDBB0',\n        lineHeight: '21px',\n        fontWeight: '500',\n        fontStyle: 'normal',\n        width: '100%',\n        height: '56px',\n        '&:hover': {\n          background: '#BEDBB0',\n        },\n      }}\n    >\n      {title}\n    </Button>\n  );\n};\n\n// Кнопка для добавления колонки\nexport const ButtonAdd = ({ onClick }) => {\n  return (\n    <Button\n      onClick={onClick}\n      variant=\"contained\"\n      disableElevation\n      sx={{\n        display: 'flex',\n        gap: '8px',\n        color: '#FFFFFF',\n        fontFamily: 'Poppins, sans-serif',\n        alignItems: 'center',\n        textTransform: 'none',\n        borderRadius: '8px',\n        letterSpacing: '-0.02em',\n        fontSize: '14px',\n        background: '#121212',\n        lineHeight: '21px',\n        fontWeight: '500',\n        fontStyle: 'normal',\n        width: '334px',\n        height: '56px',\n        '&:hover': {\n          background: '#121212',\n        },\n      }}\n    >\n      <Box\n        sx={{\n          width: '28px',\n          height: '28px',\n          background: 'white',\n          borderRadius: '6px',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <svg width=\"14\" height=\"14\" stroke=\"#121212\">\n          <use href={sprite + '#icon-add'}></use>\n        </svg>\n      </Box>\n      Add another column\n    </Button>\n  );\n};\n\n//Кнопка для Sidebar\nexport const ButtonSidebar = ({ onClick }) => {\n  return (\n    <IconButton\n      type=\"button\"\n      onClick={onClick}\n      sx={{\n        width: '40px',\n        height: '36px',\n        borderRadius: '6px',\n        background: 'var(--sidebar-icon-plus-bg-color)',\n\n        '&:hover, &:focus': {\n          background: 'var(--sidebar-icon-plus-bg-color-HOVER-FOCUS)',\n        },\n      }}\n    >\n      <svg width=\"20\" height=\"20\" stroke=\"var(--sidebar-icon-plus-color)\">\n        <use href={sprite + '#icon-add'}></use>\n      </svg>\n    </IconButton>\n  );\n};\n\n","import styled from '@emotion/styled';\nexport const Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  padding-bottom: 15px;\n  // padding: 14px 24px;\n  // background: #1f1f1f;\n  font-family: Poppins;\n\n  //   @media (min-width: 1280px) {\n  //       height: 48px;\n  //   };\n  //   @media (min-width: 768px) {\n  //       height: 80px;\n  //   };\n  //   @media (min-width: 375px) {\n  //       height: 134px;\n  //   };\n  //   @media (max-width: 374px) {\n  //       max-height: 134px;\n  //   };\n`;\n\nexport const TitleDashBoard = styled.p`\n  font-size: 18px;\n  font-weight: 500;\n  letter-spacing: -0.36px;\n  margin: 0;\n  color: #ffffff;\n`;\n\nexport const FilterButton = styled.button`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 2px;\n  background-color: transparent;\n  border: none;\n  outline: none;\n  opacity: 0.8;\n  color: #ffffffcc;\n  cursor: pointer;\n`;\nexport const TitleFilter = styled.p`\n  font-size: 14px;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n  color: #ffffffcc;\n  margin-left: 8px;\n  font-family: Poppins;\n`;\n","import styled from '@emotion/styled';\n\nexport const ButtonClose = styled.button`\n  margin: 0;\n  padding: 0;\n  position: absolute;\n  right: 10px;\n  top: 10px;\n  width: 24px;\n  height: 24px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: rgba(255, 255, 255, 0.5);\n\n  background-color: transparent;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    border: 1px solid #ffffff;\n    color: rgba(255, 255, 255, 1);\n  }\n`;\n\nexport const FormStyled = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n  margin-bottom: 24px;\n`;\n\nexport const InputStyled = styled.input`\n  resize: none;\n  color: #ffffff;\n  padding: 14px 14px;\n  background-color: transparent;\n  border: 1px solid rgba(190, 219, 176, 0.4);\n  border-radius: 8px;\n  margin-bottom: 10px;\n  :focus {\n    border: 1px solid #bedbb0;\n    outline: none;\n  }\n  ::placeholder {\n    color: #ffffff;\n    opacity: 30%;\n  }\n`;\n\nexport const TransparentSVG = styled.svg`\n  width: 18px;\n  height: 18px;\n  stroke: rgba(255, 255, 255, 0.5);\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    // width: 24px;\n    // height: 24px;\n    stroke: #bedbb0;\n  }\n`;\n\nexport const UlStyled = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 8px;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  margin-bottom: 14px;\n`;\n\nexport const UlBgStyled = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 4px;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  margin-bottom: 14px;\n  width: 270px;\n`;\n\nexport const LiStyled = styled.li`\n  display: flex;\n  width: 28px;\n  height: 28px;\n  border-radius: 14px;\n`;\n\nexport const ImgStyled = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  object-position: center;\n  border-radius: 5px;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    border: 1px solid #bedbb0;\n  }\n`;\n\nexport const LiIconsStyled = styled.li`\n  display: flex;\n  width: 18px;\n  height: 18px;\n`;\n","export const arrIcons = [\n  '#icon-Project',\n  '#icon-star',\n  '#icon-loading',\n  '#icon-puzzle',\n  '#icon-container',\n  '#icon-lightning',\n  '#icon-colors',\n  '#icon-hexagon',\n];\n\nexport const arrBG = [\n  'https://res.cloudinary.com/dpurp913m/image/upload/v1693060747/teamProject/bcg-laptop-22_w6d1ix.jpg',\n  'https://res.cloudinary.com/dpurp913m/image/upload/v1693060747/teamProject/bcg-laptop-21_lhyxtz.jpg',\n  'https://res.cloudinary.com/dpurp913m/image/upload/v1693060747/teamProject/bcg-laptop-23_nvf3nr.jpg',\n  'https://res.cloudinary.com/dpurp913m/image/upload/v1693060747/teamProject/bcg-laptop-19_jgsoar.jpg',\n  'https://res.cloudinary.com/dpurp913m/image/upload/v1693060746/teamProject/bcg-laptop-18_lz8hnp.jpg',\n  'https://res.cloudinary.com/dpurp913m/image/upload/v1693060746/teamProject/bcg-laptop-16_hbougf.jpg',\n  'https://res.cloudinary.com/dpurp913m/image/upload/v1693060746/teamProject/bcg-laptop-15_p5qieq.jpg',\n  'https://res.cloudinary.com/dpurp913m/image/upload/v1693060746/teamProject/bcg-laptop-13_kzosan.jpg',\n  'https://res.cloudinary.com/dpurp913m/image/upload/v1693060746/teamProject/bcg-laptop-12_nehdkx.jpg',\n  'https://res.cloudinary.com/dpurp913m/image/upload/v1693060747/teamProject/bcg-laptop-24_ob1z2m.jpg',\n  'https://res.cloudinary.com/dpurp913m/image/upload/v1693060747/teamProject/bcg-laptop-25_cdzpq5.jpg',\n  'https://res.cloudinary.com/dpurp913m/image/upload/v1693060747/teamProject/bcg-laptop-20_je1cm3.jpg',\n  'https://res.cloudinary.com/dpurp913m/image/upload/v1693060746/teamProject/bcg-laptop-17_ypzhw7.jpg',\n  'https://res.cloudinary.com/dpurp913m/image/upload/v1693060746/teamProject/bcg-laptop-14_gvggrl.jpg',\n  'https://res.cloudinary.com/dpurp913m/image/upload/v1693060746/teamProject/bcg-laptop-11_rfi4bm.jpg',\n];\n","import { Modal, Box, Typography, useMediaQuery } from '@mui/material';\nimport sprite from '../../assets/images/sprite.svg';\nimport { ButtonClose } from 'components/ModalBoard/ModalBoard.styled';\n\n// import { useState } from 'react';\n\nconst ModalStyles = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 350,\n  borderRadius: 8 / 4,\n  border: '1px solid rgba(190, 219, 176, 0.50)',\n  background: '#151515',\n  padding: 24/8,\n};\n\nconst titleStyles = {\n  color: '#FFF',\n  fontSize: 18,\n  fontStyle: 'normal',\n  fontWeight: 500,\n  lineHeight: 'normal',\n  letterSpacing: -0.36,\n  marginBottom: 24 / 8,\n};\n\nconst ModalLayout = ({ title, open, handleClose, children }) => {\n   const adaptiveStyle = useMediaQuery('(min-width: 1440px)');\n  //   const [open, setOpen] = useState(false);\n  //   const handleOpen = () => setOpen(true);\n  //   const handleClose = () => setOpen(false);\n\n  return (\n    <>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box sx={{ ...ModalStyles, width: adaptiveStyle ? 350 : 335 }}>\n          <Typography variant=\"h2\" sx={titleStyles}>\n            {title}\n          </Typography>\n          <ButtonClose type=\"button\" onClick={handleClose}>\n            <svg style={{ stroke: 'currentcolor' }} width=\"18\" height=\"18\">\n              <use href={sprite + '#icon-x-close'} />\n            </svg>\n          </ButtonClose>\n          {children}\n        </Box>\n      </Modal>\n    </>\n  );\n};\n\nexport default ModalLayout;\n","export const SIDEBARWIDTH = 260;\nexport const SIDEBARMOBILEWIDTH = 225;\n  \n\n\n\n","import styled from '@emotion/styled';\nimport RadioButtonIcon from '@mui/material/Radio';\n\nexport const ComponentWrapper = styled.div`\n  padding: 0px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const FormStyled = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n  margin-bottom: 0px;\n`;\n\nexport const InputStyled = styled.input`\n  resize: none;\n  color: #ffffff;\n  padding: 14px 14px;\n  background-color: transparent;\n  border: 1px solid #bedbb0;\n  border-radius: 8px;\n  :focus {\n    border: 2px solid #bedbb0;\n    outline: none;\n  }\n  ::placeholder {\n    color: #ffffff;\n    opacity: 30%;\n  }\n`;\n\nexport const TextareaStyled = styled.textarea`\n  display: flex;\n  min-height: 155px;\n  color: #ffffff;\n  resize: none;\n  padding: 14px 14px;\n  background-color: transparent;\n  border: 1px solid #bedbb0;\n  border-radius: 8px;\n  text-align: top;\n  :focus {\n    border: 2px solid #bedbb0;\n    outline: none;\n  }\n  ::placeholder {\n    color: #ffffff;\n    opacity: 30%;\n  }\n`;\n\nexport const LabelColorBox = styled.div`\n  display: flex;\n  gap: 4px;\n`;\n\nexport const RadioIcon = styled(RadioButtonIcon)`\n  width: 14px;\n  height: 14px;\n  border-radius: 50%;\n  background-color: #8fa1d0;\n`;\n\nexport const RadioIconChecked = styled(RadioButtonIcon)`\n  width: 14px;\n  height: 14px;\n  border-radius: 50%;\n  border: solid 2px #8fa1d0;\n  background-color: none;\n`;\n\nexport const SubWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: left;\n  gap: 4px;\n`;\n\nexport const DateWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 4px;\n`;\n\nexport const DateText = styled.p`\n  color: #bedbb0;\n  font-size: 14px;\n  margin: 0;\n`;\n\nexport const SubTitle = styled.p`\n  color: #ffffff;\n  font-size: 12px;\n  opacity: 50%;\n  margin: 0;\n`;\n","import React from 'react';\nimport { API } from 'Services/API';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { FormStyled, InputStyled } from '../AddCard/AddCard.styled';\nimport { ButtonWithIcon } from 'components/Buttons/Button';\n// import { useSelector } from 'react-redux';\nimport ModalLayout from '../ModalLayout/ModalLayout';\n\nconst AddColumn = ({ open, modalType, boardId, close }) => {\n  const [addColumn] = API.useAddColumnMutation();\n\n  const validationSchema = Yup.object({\n    title: Yup.string()\n      .min(2, 'Must be more then 2 symbols')\n      .required('Title is required')\n      .matches(\n        /^(\\w*)$/,\n        'Title may contain only letters, apostrophe, dash and spaces.'\n      ),\n  });\n\n  const formik = useFormik({\n    initialValues: { title: '' },\n    onSubmit: title => handleSubmit(title),\n    validationSchema,\n  });\n  const handleSubmit = async title => {\n    console.log('boardId', boardId);\n    console.log('title', title);\n\n    try {\n      await addColumn({ boardId, title });\n\n      close();\n    } catch (error) {\n      console.log(error.message);\n    }\n\n    formik.handleReset();\n  };\n\n  return (\n    <ModalLayout title={modalType} open={open} handleClose={close}>\n      <FormStyled onSubmit={formik.handleSubmit}>\n        <InputStyled\n          id=\"title\"\n          name=\"title\"\n          placeholder=\"Title\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.title}\n        />\n        <ButtonWithIcon\n          title={modalType === 'Add column' ? 'Add' : 'Edit'}\n          type={'submit'}\n        />\n      </FormStyled>\n    </ModalLayout>\n  );\n};\n\nexport default AddColumn;\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nexport const cardsApi = createApi({\n  reducerPath: 'cardsApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'https://project-future777-backend.onrender.com/api/',\n  }),\n  tagTypes: ['cards'],\n  endpoints: builder => ({\n    getCards: builder.query({\n      query: ({ columnId, token }) => ({\n        url: `columns/${columnId}/cards`,\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      }),\n      providesTags: ['cards'],\n    }),\n    addCardToColumn: builder.mutation({\n      query: ({ columnId, cardData, token }) => ({\n        url: `columns/${columnId}/cards`,\n        method: 'POST',\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n        body: cardData,\n      }),\n      invalidatesTags: ['cards'],\n    }),\n    deleteCard: builder.mutation({\n      query: ({ id, token }) => ({\n        url: `cards/${id}`,\n        method: 'DELETE',\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      }),\n      invalidatesTags: ['cards'],\n    }),\n    updateCard: builder.mutation({\n      query: ({ id, updatedData, token }) => ({\n        url: `cards/${id}`,\n        method: 'PUT',\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n        body: updatedData,\n      }),\n      invalidatesTags: ['cards'],\n    }),\n  }),\n});\n\nexport const {\n  useGetCardsQuery,\n  useAddCardToColumnMutation,\n  useDeleteCardMutation,\n  useUpdateCardMutation,\n} = cardsApi;\n","export const CardStyles = {\n  width: '334px',\n  height: '154px',\n  paddingTop: '14px',\n  paddingBottom: '14px',\n  paddingLeft: '24px',\n  paddingRight: '20px',\n  backgroundColor: '#121212',\n};\nexport const TypographyStylesTitle = {\n  color: '#FFF',\n  fontSize: '14px',\n  fontWeight: '600',\n  letterSpacing: '-0.28px',\n  marginBottom: '8px',\n};\nexport const TypographyStylesDescription = {\n  color: 'rgba(255, 255, 255, 0.50)',\n  fontSize: '12px',\n  fontWeight: '400',\n  letterSpacing: '-0.24px',\n  overflow: 'hidden',\n  whitespace: 'nowrap',\n  lineHeight: '16px',\n};\nexport const TypographyStylesPriority = {\n  color: ' rgba(255, 255, 255, 0.50)',\n  fontFamily: 'Poppins',\n  fontSize: '8px',\n\n  fontWeight: '400',\n  lineHeigt: 'normal',\n  letterSpacing: '-0.16px',\n};\nexport const CardContentStyles = {\n  borderBottom: '1px solid rgba(255, 255, 255, 0.10)',\n  padding: '0px',\n  paddingBottom: '14px',\n};\n","import React from 'react';\nimport { useState } from 'react';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport CardActions from '@mui/material/CardActions';\nimport { IconButton } from '@mui/material';\nimport MenuItem from '@mui/material/MenuItem';\nimport Menu from '@mui/material/Menu';\nimport Box from '@mui/material/Box';\nimport sprite from '../../assets/images/sprite.svg';\nimport { styled } from '@mui/material';\nimport { useSelector } from 'react-redux';\nimport {\n  useDeleteCardMutation,\n  useUpdateCardMutation,\n} from '../../redux/tasks/cardSlice';\nimport {\n  CardStyles,\n  TypographyStylesTitle,\n  TypographyStylesDescription,\n  TypographyStylesPriority,\n  CardContentStyles,\n} from './TaskCard.styled';\nconst StyledIconButton = styled(IconButton)`\n  &:hover svg {\n    stroke: #bedbb0;\n    stroke-opacity: 1;\n    transition: stroke 0.3s;\n  }\n`;\nconst ListMenuStyles = styled(MenuItem)`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  color: rgba(255, 255, 255, 0.5);\n  font-family: 'Poppins';\n  font-size: 14px;\n\n  font-weight: 400px;\n\n  &:hover {\n    color: #bedbb0;\n  }\n  &:hover svg {\n    stroke: #bedbb0;\n    stroke-opacity: 1;\n    transition: stroke 0.3s;\n  }\n`;\nfunction TaskCard({\n  title,\n  description,\n  priority,\n  deadline,\n  moveCard,\n  id,\n}) {\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [deleteCard] = useDeleteCardMutation();\n  const [updateCard] = useUpdateCardMutation();\n  const token = useSelector(state => state.auth.token);\n  const handleOpenMenu = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleCloseMenu = () => {\n    setAnchorEl(null);\n  };\n\n  const handleMoveCard = newColumn => {\n    handleCloseMenu();\n    moveCard(newColumn);\n  };\n  const handleDeleteCard = async () => {\n    try {\n      await deleteCard({ id, token });\n    } catch (error) {\n      console.error('Error deleting card:', error);\n    }\n  };\n\n  const handleUpdateCard = async () => {\n    try {\n      const updatedData = {\n        title,\n        description,\n        priority,\n        deadline,\n\n        /* об'єкт з оновленими даними картки */\n      };\n      await updateCard({ id, updatedData, token });\n    } catch (error) {\n      console.error('Error updating card:', error);\n    }\n  };\n\n  return (\n    <Card sx={CardStyles}>\n      <CardContent sx={CardContentStyles}>\n        <Typography sx={TypographyStylesTitle} variant=\"h4\" component=\"div\">\n          Заголовок картки {title}\n        </Typography>\n        <Typography sx={TypographyStylesDescription} variant=\"body2\">\n          Текст або вміст картки буде тут.{description}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Typography sx={TypographyStylesPriority} variant=\"body2\">\n          Priority:\n          {priority}\n        </Typography>\n        <Typography sx={TypographyStylesPriority} variant=\"body2\">\n          Deadline:\n          {deadline}\n        </Typography>\n        <StyledIconButton onClick={handleOpenMenu} aria-label=\"next-colomn\">\n          <svg stroke=\"#fff\" strokeOpacity=\"0.5\" width=\"16\" height=\"16\">\n            <use href={sprite + '#icon-active'} />\n          </svg>\n        </StyledIconButton>\n        <StyledIconButton onClick={handleUpdateCard} aria-label=\"edit\">\n          <svg stroke=\"#fff\" strokeOpacity=\"0.5\" width=\"16\" height=\"16\">\n            <use href={sprite + '#icon-pencil'} />\n          </svg>\n        </StyledIconButton>\n        <StyledIconButton onClick={handleDeleteCard} aria-label=\"remove\">\n          <svg stroke=\"#fff\" strokeOpacity=\"0.5\" width=\"16\" height=\"16\">\n            <use href={sprite + '#icon-trash'} />\n          </svg>\n        </StyledIconButton>\n      </CardActions>\n      <Menu\n        anchorEl={anchorEl}\n        open={Boolean(anchorEl)}\n        onClose={handleCloseMenu}\n        PaperProps={{\n          sx: {\n            backgroundColor: '#151515',\n            width: '135px',\n          },\n        }}\n      >\n        {/* List of columns to move the card */}\n        <ListMenuStyles onClick={() => handleMoveCard('Column 1')}>\n          {' '}\n          <Box> In progress </Box>\n          <Box>\n            {' '}\n            <svg stroke=\"#fff\" strokeOpacity=\"0.5\" width=\"16\" height=\"16\">\n              <use href={sprite + '#icon-active'} />\n            </svg>\n          </Box>\n        </ListMenuStyles>\n        <ListMenuStyles onClick={() => handleMoveCard('Column 2')}>\n          <Box> Done </Box>\n          <Box>\n            {' '}\n            <svg stroke=\"#fff\" strokeOpacity=\"0.5\" width=\"16\" height=\"16\">\n              <use href={sprite + '#icon-active'} />\n            </svg>\n          </Box>\n        </ListMenuStyles>\n      </Menu>\n    </Card>\n  );\n}\n\nexport default TaskCard;\n","import * as React from 'react';\nimport Radio from '@mui/material/Radio';\n\nexport default function ColorRadioButtons({ onColorChange, value }) {\n  const [selectedValue, setSelectedValue] = React.useState('0');\n\n  const handleChange = event => {\n    setSelectedValue(event.target.value);\n    onColorChange(event.target.value);\n  };\n\n  const controlProps = item => ({\n    checked: selectedValue === item,\n    onChange: handleChange,\n    value: item,\n  });\n\n  return (\n    <div>\n      <Radio\n        {...controlProps('1')}\n        sx={{ color: '#8FA1D0', '&.Mui-checked': { color: '#8FA1D0' } }}\n      />\n      <Radio\n        {...controlProps('2')}\n        sx={{ color: '#E09CB5', '&.Mui-checked': { color: '#E09CB5' } }}\n      />\n      <Radio\n        {...controlProps('3')}\n        sx={{ color: '#BEDBB0', '&.Mui-checked': { color: '#BEDBB0' } }}\n      />\n      <Radio\n        {...controlProps('0')}\n        sx={{ color: 'grey', '&.Mui-checked': { color: 'grey' } }}\n      />\n    </div>\n  );\n}\n","import styled from \"@emotion/styled\";\n\nexport const DropDawnBtn = styled.button`\n  outline: none;\n  background-color: transparent;\n  border: none;\n  transition: all 0.3s ease-in-out;\n  :hover,\n  :focus {\n    transform: translateY(5px);\n  }\n`;\nexport const DropDownSVG = styled.svg`\n  stroke: #bedbb0;\n`;\n","import React from 'react'\nimport sprite from '../../../assets/images/sprite.svg';\nimport { DropDawnBtn, DropDownSVG } from './DropDownIcon.styled';\n\nconst DropDownIcon = ({onClick}) => {\n  return (\n    <div>\n      <DropDawnBtn id={'date-picker'} onClick={onClick}>\n        <DropDownSVG width=\"18\" height=\"18\">\n          <use href={sprite + '#icon-drop-down'} />\n        </DropDownSVG>\n      </DropDawnBtn>\n    </div>\n  );\n}\n\nexport default DropDownIcon\n","import { Popover } from '@mui/material';\nimport React from 'react';\n\nconst PopupStyles = {\n  '.MuiPaper-root': {\n    backgroundColor: '#1F1F1F',\n    borderRadius: '8px',\n  },\n};\n\nconst Popup = ({ anchorEl, open, onClose, children }) => {\n  return (\n    <Popover\n      sx={PopupStyles}\n      anchorEl={anchorEl}\n      open={open}\n      onClose={onClose}\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'left',\n      }}\n      transformOrigin={{\n        vertical: 'top',\n        horizontal: 'left',\n      }}\n    >\n      {children}\n    </Popover>\n  );\n};\n\nexport default Popup;\n","import { DateCalendar } from '@mui/x-date-pickers/DateCalendar';\nimport styled from '@emotion/styled';\n\nconst DateCalendarStyled = styled(DateCalendar)`\n  .MuiDateCalendar-root {\n    font-family: 'Poppins';\n    background: '#1F1F1F';\n    color: '#ffffff';\n  }\n`;\n\nconst DatePickerStyles = {\n  '.MuiTypography-root': {\n    width: '24px',\n    m: '5px',\n    fontSize: '14px',\n    fontWeight: 500,\n    fontFamily: 'Poppins',\n    color: 'rgba(255, 255, 255, 0.5)',\n  },\n  '.MuiPickersCalendarHeader-label': {\n    fontSize: '14px',\n    fontWeight: 600,\n    fontFamily: 'Poppins',\n    color: '#FFF',\n  },\n  '.MuiDateCalendar-root': {\n    width: '235px',\n  },\n  '.MuiPaper-root': {\n    backgroundColor: '#1F1F1F',\n  },\n  '.MuiYearCalendar-root': {\n    width: '265px',\n  },\n  '.MuiPickersDay-root': {\n    color: '#FFF',\n  },\n  '.MuiButtonBase-root': {\n    width: '24px',\n    height: '24px',\n    m: '5px',\n    color: '#fff',\n  },\n\n  '.MuiPickersArrowSwitcher-spacer': {\n    width: '0px',\n  },\n  '.MuiPickersFadeTransitionGroup-root': {\n    overflow: 'hidden',\n  },\n  '.MuiButtonBase-root:hover': {\n    backgroundColor: '#BEDBB0',\n    color: '#1F1F1F',\n  },\n  '.MuiPickersYear-yearButton.Mui-selected': {\n    backgroundColor: '#BEDBB0',\n    color: '#1F1F1F',\n  },\n  '.MuiPickersYear-yearButton:hover': {\n    backgroundColor: '#BEDBB0',\n    color: '#1F1F1F',\n  },\n  '.MuiPickersDay-today': {\n    backgroundColor: '#BEDBB0',\n    color: '#1F1F1F',\n    border: '1px solid #BEDBB0',\n  },\n  '.MuiPickersDay-dayOutsideMonth': {\n    fontWeight: 400,\n    color: 'rgba(255, 255, 255, 0.18)',\n  },\n  '.MuiButtonBase-root.Mui-disabled': {\n    fontWeight: 400,\n    color: 'rgba(255, 255, 255, 0.18)',\n  },\n  '.css-qa7bje-MuiButtonBase-root-MuiPickersDay-root.Mui-disabled:not(.Mui-selected)':\n    {\n      fontWeight: 400,\n      color: 'rgba(255, 255, 255, 0.38)',\n    },\n  width: '265px',\n  height: '295px',\n  backgroundColor: '#1F1F1F',\n  border: '1px solid #BEDBB0',\n  color: '#FFF',\n  borderRadius: '8px',\n  fontStyle: 'normal',\n  fontWeight: 500,\n  lineHeight: 'normal',\n  letterSpacing: -0.36,\n  marginBottom: 0,\n};\n\nconst DatePickerCmponent = ({ onChange }) => {\n  return (\n    <div>\n      {/* <ThemeProvider theme={theme}> */}\n      <DateCalendarStyled\n        sx={DatePickerStyles}\n        onChange={onChange}\n        format=\"LL\"\n        disablePast\n        showDaysOutsideCurrentMonth\n      />\n      {/* </ThemeProvider> */}\n    </div>\n  );\n};\n\nexport default DatePickerCmponent;\n","import React, { useEffect, useState } from 'react';\nimport { useFormik } from 'formik';\nimport { format } from 'date-fns';\nimport * as Yup from 'yup';\n\nimport {\n  FormStyled,\n  TextareaStyled,\n  SubWrapper,\n  DateText,\n  DateWrapper,\n  SubTitle,\n  InputStyled,\n} from './AddCard.styled';\nimport ColorRadioButtons from 'components/ColorRadioButtons/ColorRadioButtons';\nimport { ButtonWithIcon } from 'components/Buttons/Button';\nimport DropDownIcon from 'components/Icons/DropDownIcon/DropDownIcon';\nimport Popup from 'components/Popup/Popup';\nimport DatePickerCmponent from 'components/DatePicker/DatePicker';\nimport ModalLayout from '../ModalLayout/ModalLayout';\n\n// import { useAddCardToColumnMutation } from 'redux/tasks/cardSlice';\n// import { useSelector } from 'react-redux';\n\nconst AddCard = ({ modalType, close, open, handleClose, cardId = '' }) => {\n  // const token = useSelector(state => state.auth.token);\n  const [date, setDate] = useState('');\n  const [dateValue, setDateValue] = useState('');\n  const [color, setColor] = useState('0');\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  // const [addCards] = useAddCardToColumnMutation();\n\n  const handleDateClick = e => {\n    setAnchorEl(e.currentTarget);\n    setIsPopupOpen(!isPopupOpen);\n  };\n\n  const onDateChange = e => {\n    const dateFns = format(e, 'LLLL d');\n    console.log('dateFns :>> ', date);\n    setDateValue(dateFns);\n    setDate(e);\n    setIsPopupOpen(false);\n  };\n\n  const onColorChange = value => {\n    console.log('value :>> ', value);\n    setColor(value);\n  };\n\n  const handleSubmit = async (title, description, color) => {\n    // const dateFns = format(date, 'yyyy-MM-dd');\n    // try {\n    //   await addCards({\n    //     cardsData: {\n    //       title,\n    //       description,\n    //       priority: color,\n    //       deadline: dateFns,\n    //     },\n    //     token,\n    //     columnId: '64eacc9f4040dd4d17e3e96f',\n    //   });\n    // } catch (error) {\n    //   console.log(error);\n    // }\n    formik.handleReset();\n    close();\n  };\n  const validationSchema = Yup.object({\n    title: Yup.string()\n      .min(2, 'Must be more then 2 symbols')\n      .required('Title is required')\n      .matches(\n        /^(\\w*)$/,\n        'Title may contain only letters, apostrophe, dash and spaces.'\n      ),\n    description: Yup.string(),\n    color: Yup.string(),\n  });\n\n  const formik = useFormik({\n    initialValues: { title: '', description: '' },\n    onSubmit: ({ title, description }) =>\n      handleSubmit(title, description, color, date),\n    validationSchema,\n  });\n\n  useEffect(() => {\n    const currentDate = format(new Date(), \"'Today,' LLLL d\");\n    setDateValue(currentDate);\n\n    console.log('dateFns :>> ', currentDate);\n  }, []);\n\n  return (\n    <ModalLayout title={modalType} open={open} handleClose={handleClose}>\n      <FormStyled onSubmit={formik.handleSubmit}>\n        <InputStyled\n          id=\"title\"\n          name=\"title\"\n          placeholder=\"Title\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.title}\n        />\n\n        <TextareaStyled\n          id=\"description\"\n          name=\"description\"\n          placeholder=\"Description\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.description}\n        />\n\n        <SubWrapper>\n          <SubTitle>Label color</SubTitle>\n          <ColorRadioButtons onColorChange={onColorChange} />\n        </SubWrapper>\n\n        <SubWrapper>\n          <SubTitle>Deadline</SubTitle>\n          <DateWrapper>\n            <DateText>{dateValue}</DateText>\n            <DropDownIcon onClick={handleDateClick} />\n            <Popup\n              anchorEl={anchorEl}\n              open={isPopupOpen}\n              onClose={handleDateClick}\n            >\n              <DatePickerCmponent onChange={onDateChange} />\n            </Popup>\n          </DateWrapper>\n        </SubWrapper>\n\n        <ButtonWithIcon\n          title={modalType === 'Add card' ? 'Add' : 'Edit'}\n          type={'submit'}\n        />\n      </FormStyled>\n    </ModalLayout>\n  );\n};\n\nexport default AddCard;\n","import { ButtonWithIcon } from '../Buttons/Button';\nimport styled from '@emotion/styled';\nimport { IconButton } from '@mui/material';\n\nexport const ColumnWrapper = styled.li`\n  display: grid;\n  grid-template-rows: 56px auto 56px;\n  align-items: left;\n  gap: 14px;\n  width: 346px;\n  max-height: 80vh;\n  padding-right: 12px;\n  padding-bottom: 14px;\n  margin-right: 14px;\n`;\n\nexport const ColumnHeader = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  max-width: 334px;\n  height: 56px;\n  background-color: #121212;\n  color: #ffffff;\n  padding: 20px;\n  border-radius: 8px;\n`;\n\nexport const ColumnTitle = styled.h2`\n  display: flex;\n  font-family: 'Poppins';\n  font-weight: 600;\n  font-size: 14px;\n  margin: 0;\n`;\n\nexport const CardsList = styled.ul`\n  display: grid;\n  width: 346px;\n  height: 100%;\n  gap: 8px;\n  border-radius: 8px;\n  padding-right: 8px;\n  overflow-x: hidden;\n  overflow-y: scroll;\n  ::-webkit-scrollbar {\n    border-radius: 5px;\n    margin-left: 4px;\n    width: 8px;\n    background-color: rgba(255, 255, 255, 0.2);\n  }\n  ::-webkit-scrollbar-thumb {\n    background: #121212;\n    border-radius: 5px;\n  }\n  ::-webkit-scrollbar-thumb:hover {\n    background: #9dc888;\n  }\n`;\n\nexport const StyledIconButton = styled(IconButton)`\n  width: 18px;\n  height: 18px;\n  padding: 0;\n  margin: 4px;\n  &:hover svg {\n    stroke: #bedbb0;\n    stroke-opacity: 1;\n    transition: stroke 0.3s;\n  }\n`;\n\nexport const AddCardButton = styled(ButtonWithIcon)`\n  width: 334px;\n`;\n","import React, { useState } from 'react';\nimport sprite from '../../assets/images/sprite.svg';\nimport TaskCard from '../TaskCard/TaskCard';\nimport AddCard from '../AddCard/AddCard';\n// import { API } from 'Services/API';\nimport cards from './db-tasks.cards.json'; \n// import { useSelector } from 'react-redux';\nimport { AddCardButton, CardsList, ColumnHeader, ColumnTitle, ColumnWrapper, StyledIconButton } from './Column.styled';\n\nconst Column = ({ columnTitle, columnId }) => {\n  \n    const [isAddCardOpen, setIsAddCardOpen] = useState(false);\n  // const { data: cards } = API.useGetCardsQuery({ columnId });\n  \n  console.log('cards :>> ', cards);\n  const closeAddCard = () => setIsAddCardOpen(false);\n  const handleClick = () => setIsAddCardOpen(true);\n  \n  const handleUpdateColumn = () => {\n    console.log('Column updated');\n  };\n  const handleDeleteColumn = () => {\n    console.log('Column deleted');\n  };\n\n  return (\n    <ColumnWrapper>\n      <ColumnHeader>\n        <ColumnTitle>{columnTitle}</ColumnTitle>\n        <div>\n          <StyledIconButton onClick={handleUpdateColumn} aria-label=\"edit\">\n            <svg stroke=\"#fff\" strokeOpacity=\"0.5\" width=\"16\" height=\"16\">\n              <use href={sprite + '#icon-pencil'} />\n            </svg>\n          </StyledIconButton>\n          <StyledIconButton onClick={handleDeleteColumn} aria-label=\"remove\">\n            <svg stroke=\"#fff\" strokeOpacity=\"0.5\" width=\"16\" height=\"16\">\n              <use href={sprite + '#icon-trash'} />\n            </svg>\n          </StyledIconButton>\n        </div>\n      </ColumnHeader>\n      <CardsList>\n        {cards?.map(\n          ({ title, description, priority, deadline, _id: id }, index) => {\n            return (\n              <TaskCard\n                title={title}\n                description={description}\n                priority={priority}\n                deadline={deadline}\n                id={id}\n              />\n            );\n          }\n        )}\n      </CardsList>\n\n      <AddCardButton onClick={handleClick} title={'Add card'} />\n\n      \n        <AddCard\n          modalType={'Add card'}\n          open={isAddCardOpen}\n          handleClose={closeAddCard}\n          close={closeAddCard}\n        />\n    </ColumnWrapper>\n  );\n};\n\nexport default Column;\n","import styled from '@emotion/styled';\nimport { Field as FormicField } from 'formik';\n\nexport const Div = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: baseline;\n  margin-bottom: 2px;\n`;\n\nexport const Button = styled.button`\n  color: rgba(255, 255, 255, 0.5);\n  font-size: 12px;\n  font-weight: 400;\n  letter-spacing: -0.24px;\n  text-decoration-line: underline;\n\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n`;\nexport const LabelGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  justify-content: center;\n  /* align-items: baseline; */\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: center;\n  /* justify-content: center; */\n  gap: 8px;\n  cursor: pointer;\n  color: #ffffff80;\n  font-size: 12px;\n  font-weight: 400;\n  letter-spacing: -0.24px;\n  padding-top: 1px;\n  padding-bottom: 1px;\n`;\n\nexport const Field = styled(FormicField)`\n  width: 14px;\n  height: 14px;\n  background-color: transparent;\n\n  display: grid;\n  place-content: center;\n\n  ::after {\n    content: '';\n    left: 6.4%;\n    position: absolute;\n    transform: translate(6px, 1px);\n    width: 12px;\n    height: 12px;\n    border: 2.5px solid black;\n    border-radius: 50%;\n    opacity: 0;\n  }\n  ::before {\n    content: '';\n    width: 14px;\n    height: 14px;\n    border-radius: 50%;\n    transition: 120ms transform ease-in-out;\n    background-color: ${props => props.color};\n  }\n\n  :checked::after {\n    opacity: 1;\n  }\n`;\n\n// export const Field = styled.div`\n//   width: 14px;\n//   height: 14px;\n//   border-radius: 14px;\n//   position: absolute;\n//   top: 50%;\n//   left: 50%;\n//   transform: translate(-50%, -50%);\n\n//   background-color: ${props =>\n//     props.color === 'without' && 'rgb(128, 128, 128)'};\n//   background-color: ${props =>\n//     props.color === 'low' && 'rgba(143, 161, 208, 1)'};\n//   background-color: ${props =>\n//     props.color === 'medium' && 'rgba(224, 156, 181, 1)'};\n//   background-color: ${props =>\n//     props.color === 'high' && 'rgba(190, 219, 176, 1)'};\n\n//   transition: all 250ms linear;\n\n//   &.active {\n//     width: 6px;\n//     height: 6px;\n//   }\n// `;\n\nexport const RadioWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`;\n","import { Radio, Typography } from '@mui/material';\n// import { LiStyled, UlBgStyled } from 'components/ModalLayout/Modal.styled';\nimport ModalLayout from 'components/ModalLayout/ModalLayout';\nimport { Form, Formik } from 'formik';\nimport { useState } from 'react';\n\nimport { arrBG } from '../ModalBoard/data';\nimport { Button, Div, Label, LabelGroup, RadioWrap } from './Filter.styled';\nimport { LiStyled, UlBgStyled } from 'components/ModalBoard/ModalBoard.styled';\n\nconst titleStyle = {\n  color: '#FFF',\n  fontSize: 14,\n  fontStyle: 'normal',\n  fontWeight: 500,\n  lineHeight: 'normal',\n  letterSpacing: -0.36,\n  // marginBottom: 24 / 8,\n};\n\nexport const Filter = ({ open, onClose }) => {\n  const [bgImgIndex, setBgImgIndex] = useState(null);\n\n  const [currentPrority, setCurrentPrority] = useState('');\n  const [isShowAllActive, setIsShowAllActive] = useState(false);\n  const initialValues = {\n    currentBg: 0,\n    currentPrority: '',\n  };\n\n  const controlProps = item => ({\n    checked: currentPrority === item,\n    onChange: handleChange,\n    value: item,\n  });\n  const handleChange = event => {\n    const filter = event.target.value;\n    setCurrentPrority(filter);\n    // dispatch(setFilterCards(filter));\n    setIsShowAllActive(false);\n  };\n\n  const handleShowAll = () => {\n    setCurrentPrority('');\n    // dispatch(setFilterCards(''));\n    setIsShowAllActive(true);\n  };\n\n  const handleRadioClick = () => {\n    if (isShowAllActive) {\n      setIsShowAllActive(false);\n    }\n  };\n  // console.log(currentPrority);\n  console.log(bgImgIndex);\n\n  return (\n    <ModalLayout title={'Filters'} open={open} handleClose={onClose}>\n      <Formik initialValues={initialValues}>\n        <Form onChange={handleChange}>\n          <UlBgStyled>\n            <LiStyled></LiStyled>\n            {arrBG.map((el, index) => {\n              return (\n                <LiStyled\n                  key={index + 1}\n                  onClick={() => setBgImgIndex(index + 1)}\n                >\n                  <img src={el} alt=\"\" width=\"24px\" height=\"24px\" />\n                </LiStyled>\n              );\n            })}\n          </UlBgStyled>\n          <LabelGroup role=\"group\" aria-labelledby=\"my-radio-group\">\n            <Div>\n              <Typography variant=\"h2\" sx={titleStyle}>\n                Label Color\n              </Typography>\n              <Button\n                type=\"button\"\n                onClick={handleShowAll}\n                disabled={isShowAllActive}\n              >\n                Show all\n              </Button>\n            </Div>\n            <RadioWrap>\n              <Label>\n                <Radio\n                  onClick={handleRadioClick}\n                  checked={currentPrority === 'without'}\n                  name=\"currentPrority\"\n                  {...controlProps('without')}\n                  size=\"small\"\n                  sx={{ color: 'grey', '&.Mui-checked': { color: 'grey' } }}\n                />\n                Without priority\n              </Label>\n              <Label>\n                <Radio\n                  onClick={handleRadioClick}\n                  checked={currentPrority === 'low'}\n                  name=\"currentPrority\"\n                  {...controlProps('low')}\n                  size=\"small\"\n                  sx={{\n                    color: '#8FA1D0',\n                    '&.Mui-checked': { color: '#8FA1D0' },\n                  }}\n                />\n                Low\n              </Label>\n              <Label>\n                <Radio\n                  onClick={handleRadioClick}\n                  checked={currentPrority === 'medium'}\n                  name=\"currentPrority\"\n                  {...controlProps('medium')}\n                  size=\"small\"\n                  sx={{\n                    color: '#E09CB5',\n                    '&.Mui-checked': { color: '#E09CB5' },\n                  }}\n                />\n                Medium\n              </Label>\n\n              <Label>\n                <Radio\n                  onClick={handleRadioClick}\n                  checked={currentPrority === 'high'}\n                  name=\"currentPrority\"\n                  {...controlProps('high')}\n                  size=\"small\"\n                  sx={{\n                    color: '#BEDBB0',\n                    '&.Mui-checked': { color: '#BEDBB0' },\n                  }}\n                />\n                High\n              </Label>\n            </RadioWrap>\n          </LabelGroup>\n        </Form>\n      </Formik>\n    </ModalLayout>\n  );\n};\n","// import ModalLayout from 'components/ModalLayout/ModalLayout';\nimport sprite from '../../assets/images/sprite.svg';\nimport { useState } from 'react';\nimport { Filter } from './Filter';\n\nconst {\n  Container,\n  TitleDashBoard,\n  FilterButton,\n  TitleFilter,\n} = require('./HeaderDashboard.styled');\nexport const HeaderDashboard = ({title}) => {\n  const [isOpen, setIsOpen] = useState();\n  const toggleModal = () => setIsOpen(!isOpen);\n\n  return (\n    <Container>\n      <TitleDashBoard>{title}</TitleDashBoard>\n      <FilterButton onClick={toggleModal}>\n        <svg aria-label=\"filter icon\" width=\"16\" height=\"16\">\n          <use href={sprite + '#icon-filter'}></use>\n        </svg>\n        <TitleFilter>Filters</TitleFilter>\n      </FilterButton>\n      {isOpen && <Filter open={isOpen} onClose={toggleModal} />}\n    </Container>\n  );\n};\n","import styled from '@emotion/styled';\nimport { SIDEBARWIDTH } from 'components/Sidebar/SidebarCONSTANTS';\n\nexport const ColumnsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 34px;\n  align-items: top;\n\n  ::-webkit-scrollbar {\n    border-radius: 5px;\n    margin-left: 4px;\n    height: 8px;\n    background-color: rgba(255, 255, 255, 0.2);\n  }\n  ::-webkit-scrollbar-thumb {\n    background: #121212;\n    border-radius: 5px;\n  }\n  ::-webkit-scrollbar-thumb:hover {\n    background: #9dc888;\n  }\n  @media screen and (min-width: 767px) {\n    overflow-x: ${props => {\n      if (props.cols < 2) {\n        return `hidden`;\n      }\n      return `scroll`;\n    }};\n    display: grid;\n    grid-template-columns: ${props => {\n      return `repeat(${props.cols + 1}, 334px)`;\n    }};\n  }\n  @media screen and (min-width: 1400px) {\n    display: grid;\n    overflow-x: ${props => {\n      if (props.cols < 4) {\n        return `hidden`;\n      }\n      return `scroll`;\n    }};\n  }\n`;\n\nexport const screenSyles = {\n  pt: { 0: 9.25, 768: 11, 1440: 9.75 },\n  pb: { 0: 3, 768: 4, 1440: 1 },\n  pl: { 0: 2.5, 768: 4, 1440: 3 },\n  pr: { 0: 2.5, 768: 4, 1440: 3 },\n  height: { 0: '100vh', 768: '100vh', 1440: '100vh' },\n  width: { 0: '100vw', 1440: `calc(100vw - ${SIDEBARWIDTH}px)` },\n  flexGrow: 1,\n  backgroundColor: '#2e2e2e',\n};","import React, { useState } from 'react';\nimport { Box } from '@mui/material';\nimport { ButtonAdd } from 'components/Buttons/Button';\nimport AddColumn from 'components/AddColumn/AddColumn';\nimport Column from '../../components/Column/Column';\nimport { HeaderDashboard } from 'components/HeaderDashboard/HeaderDashboard';\nimport { API } from 'Services/API';\nimport { useParams } from 'react-router-dom';\nimport { ColumnsWrapper, screenSyles } from './ScreenPage.styled';\n// import { useSelector } from 'react-redux';\n\nconst ScreensPage = () => {\n  const { boardId } = useParams();\n  const [isAddColumnOpen, setIsAddColumnOpen] = useState(false);\n  const { data } = API.useGetBoardByIdQuery(boardId);\n  console.log('data :>> ', data);\n  // const columnsState = useSelector(state => state);\n  // console.log('columns :>> ', columnsState);\n  const columns = data?.columns;\n  // console.log('data :>> ', data);\n  // console.log('columns :>> ', columns);\n  const openAddColumn = () => setIsAddColumnOpen(true);\n  const closeAddColumn = () => setIsAddColumnOpen(false);\n\n  return (\n    <Box component=\"main\" sx={screenSyles}>\n      <HeaderDashboard title={data?.title} />\n\n      <ColumnsWrapper cols={!columns ? 1 : columns.length + 1}>\n        {/* <Column /> */}\n        {columns?.map(({ columnId, columnTitle }) => (\n          <Column\n            key={columnId}\n            columnTitle={columnTitle}\n            columnId={columnId}\n          />\n        ))}\n        <ButtonAdd onClick={openAddColumn}></ButtonAdd>\n      </ColumnsWrapper>\n      {/* Використовуйте відповідний компонент ModalLayout з дочірнім елементом AddColumn */}\n      \n        <AddColumn\n          modalType={'Add column'}\n          open={isAddColumnOpen}\n          boardId={boardId}\n          close={closeAddColumn}\n        />\n    </Box>\n  );\n};\n\nexport default ScreensPage;\n"],"names":["API","useRegisterMutation","useLogInMutation","useLogOutMutation","useAvatarUserMutation","useGetCurrentUserQuery","useHelpUserMutation","useThemeUserMutation","useUpdateUserMutation","useGetBoardsQuery","useGetBoardByIdQuery","useAddBoardsMutation","useDeleteBoardByIdMutation","useUpdateBoardByIdMutation","useAddColumnMutation","useUpdateColumnByIdMutation","useDeleteColumnByIdMutation","useAddCardMutation","useUpdateCardByIdMutation","useDeleteCardByIdMutation","useUpdateCardColumnByIdMutation","ButtonWithIcon","_ref","title","onClick","type","_jsxs","Button","variant","disableElevation","sx","display","gap","color","fontFamily","alignItems","textTransform","borderRadius","letterSpacing","fontSize","background","lineHeight","fontWeight","fontStyle","width","height","children","_jsx","Box","justifyContent","stroke","href","sprite","ButtonWithoutIcon","_ref2","marginTop","ButtonAdd","_ref3","ButtonSidebar","_ref4","IconButton","Container","styled","_templateObject","_taggedTemplateLiteral","TitleDashBoard","_templateObject2","FilterButton","_templateObject3","TitleFilter","_templateObject4","ButtonClose","FormStyled","InputStyled","TransparentSVG","UlStyled","_templateObject5","UlBgStyled","_templateObject6","LiStyled","_templateObject7","ImgStyled","_templateObject8","LiIconsStyled","_templateObject9","arrIcons","arrBG","ModalStyles","position","top","left","transform","border","padding","titleStyles","marginBottom","open","handleClose","adaptiveStyle","useMediaQuery","_Fragment","Modal","onClose","_objectSpread","Typography","style","SIDEBARWIDTH","SIDEBARMOBILEWIDTH","TextareaStyled","SubWrapper","RadioButtonIcon","DateWrapper","DateText","_templateObject10","SubTitle","_templateObject11","modalType","boardId","close","_API$useAddColumnMuta","addColumn","_slicedToArray","validationSchema","Yup","min","required","matches","formik","useFormik","initialValues","onSubmit","handleSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","console","log","t0","message","handleReset","stop","_x","apply","arguments","ModalLayout","id","name","placeholder","onChange","handleChange","onBlur","handleBlur","value","values","cardsApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","getCards","query","columnId","token","url","concat","headers","Authorization","providesTags","addCardToColumn","mutation","cardData","method","body","invalidatesTags","deleteCard","updateCard","updatedData","useDeleteCardMutation","useGetCardsQuery","useAddCardToColumnMutation","useUpdateCardMutation","CardStyles","paddingTop","paddingBottom","paddingLeft","paddingRight","backgroundColor","TypographyStylesTitle","TypographyStylesDescription","overflow","whitespace","TypographyStylesPriority","lineHeigt","CardContentStyles","borderBottom","StyledIconButton","ListMenuStyles","MenuItem","description","priority","deadline","moveCard","_useState","useState","_useState2","anchorEl","setAnchorEl","_useDeleteCardMutatio","_useUpdateCardMutatio","useSelector","state","auth","handleCloseMenu","handleMoveCard","newColumn","handleDeleteCard","error","handleUpdateCard","_callee2","_context2","Card","CardContent","component","CardActions","event","currentTarget","strokeOpacity","Menu","Boolean","PaperProps","ColorRadioButtons","onColorChange","_React$useState","React","_React$useState2","selectedValue","setSelectedValue","target","controlProps","item","checked","Radio","DropDawnBtn","DropDownSVG","PopupStyles","Popover","anchorOrigin","vertical","horizontal","transformOrigin","DateCalendarStyled","DateCalendar","DatePickerStyles","m","format","disablePast","showDaysOutsideCurrentMonth","cardId","date","setDate","_useState3","_useState4","dateValue","setDateValue","_useState5","_useState6","setColor","_useState7","_useState8","_useState9","_useState10","isPopupOpen","setIsPopupOpen","handleDateClick","e","_x2","_x3","useEffect","currentDate","Date","DropDownIcon","Popup","DatePickerCmponent","dateFns","ColumnWrapper","ColumnHeader","ColumnTitle","CardsList","AddCardButton","columnTitle","isAddCardOpen","setIsAddCardOpen","cards","closeAddCard","index","_id","TaskCard","AddCard","Div","LabelGroup","Label","RadioWrap","FormicField","props","titleStyle","Filter","bgImgIndex","setBgImgIndex","currentPrority","setCurrentPrority","isShowAllActive","setIsShowAllActive","filter","handleRadioClick","Formik","currentBg","Form","el","src","alt","role","disabled","size","_require","require","HeaderDashboard","isOpen","setIsOpen","toggleModal","ColumnsWrapper","cols","screenSyles","pt","pb","pl","pr","flexGrow","useParams","isAddColumnOpen","setIsAddColumnOpen","data","columns","length","map","Column","AddColumn"],"sourceRoot":""}